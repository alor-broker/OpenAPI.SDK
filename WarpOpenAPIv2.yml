openapi: 3.0.1
info:
  title: Alor OpenAPI V2
  description: |
    API для работы с торговой системой АЛОР Брокер. Предоставляет интерфейсы для выставления заявок и получения биржевой информации.
    
    Данные для неавторизованных запросов предоставляются с задержкой от 15 минут, для авторизованных — без задержек. 
    
    Публичная биржевая информация может быть получена через HTTP(S) API, а также доступна через однократно установленное WebSocket соединение.
    
    **Внимание!**
    WebSocket соединения могут и будут разрываться *(например, если клиент не успевает обрабатывать сообщения и на стороне API в буфере накопится более 5000 событий)*.
    
    Во внешнем ПО необходимо предусмотреть механизмы переподключения и переподписки (при необходимости)!
    
    В OpenAPI V2 доступны "Московская Биржа" (MOEX) и "Биржа СПБ" (SPBX). 
    
    ### Доступные типы данных
    * Все сделки
    * Все заявки
    * Информация по инструментам
    * Котировки
    * Биржевые стаканы
    * Исторические данные
    * Позиции
    * Информация о клиенте
    
    ### Поддерживаемые виды заявок
     * рыночные
     * лимитные
     * стоп-лосс
     * тейк-профит
     * стоп-лосс лимит
     * тейк-профит лимит
    
    ## Особенности и ограничения
    
    ### Ограничения по частоте запросов
    Существует ограничение по общему количеству одновременно активных подписок, исчисляемое сотнями тысяч. В случае превышения лимита подписок клиент будет автоматически заблокирован и в течение нескольких минут не сможет создавать новые подписки. При этом уже существующие подписки продолжат работать.

    Для HTTP запросов нет явного ограничения по количеству выполняемых запросов в минуту, однако действия клиента не должны оказывать негативного влияния на работоспособность информационных систем. К таким действиям относятся передача системе бессмысленной информации и одновременная отправка нескольких тысяч запросов, вызывающие неоправданную нагрузку на инфраструктуру Брокера.
    
    В случае, если клиент своими действиями угрожает стабильности работы торговой системы либо затрудняет работу других клиентов, Брокер может приостановить обработку запросов от такого клиента до выяснения обстоятельств.
    
    ### Приоритет обработки запросов
    Сервер может обрабатывать "тяжелые" запросы (пример — история за все время) и запросы без авторизации с меньшим приоритетом.

    ## Получение списка портфелей
    Получить список доступных портфелей можно из JWT токена
    Для получения списка доступных портфелей необходимо декодировать JWT токен. Портфели находятся в поле **portfolios**.
    
    ## Авторизация

    ### OAuth

    **Внимание!**
    JWT и refresh token — равносильны логину и паролю.
    Их нужно скрывать от публичного доступа.

    ### Для разработчиков сторонних приложений, в которых торговлю будут вести их пользователи.
    
    Мы предоставляем сервис для авторизации сторониих приложений по стандарту OAuth 2.0.
    С примером приложения, использующего OAuth сервис для авторизации пользователей можно ознакомиться в разделе [Примеры](https://alor.dev/examples).

    Список разрешений (scopes), которые могут быть выданы приложению:
    <table>
      <tr>
        <td><b>OrdersRead</b></td>
        <td>Чтение выставленных заявок</td>
      </tr>
      <tr>
        <td><b>OrdersCreate</b></td>
        <td>Выставление заявок</td>
      </tr>
      <tr>
        <td><b>Trades</b></td>
        <td>Чтение совершенных сделок</td>
      </tr>
      <tr>
        <td><b>Personal</b></td>
        <td>Персональная информация: ФИО, почта и т.п.</td>
      </tr>
      <tr>
        <td><b>Stats</b></td>
        <td>Статистика: прибыль, средние цены и т.п.</td>
      </tr>
    </table>

    ### Для ведения операций от своего имени
    
    Выписать себе **refresh token** для ведения операций от своего имени [можно здесь](https://alor.dev/open-api-tokens).

    ## Краткое описание работы с авторизацией

    Чтобы выполнить авторизованный запрос, добавьте в запрос заголовок с именем "Authorization"
    и значением, состоящим из префикса `"Bearer "` и валидного JWT токена.

    Срок жизни JWT короткий: это сделано для безопасности. 
    Для большинства вариантов использования API мы рекоммендуем использовать механизм  **refresh token**.
    
    Механизм  **refresh token**  позволяет получать JWT с новым сроком жизни.
    Для этого отправьте POST запрос на адрес `https://oauthdev.alor.ru/refresh?token={refreshToken}` *(тестовый контур)* или `https://oauth.alor.ru/refresh?token={refreshToken}` *(боевой контур)*.
    Если у **refresh token**  не истек срок жизни и не он не был отозван, то в теле ответа в поле AccessToken вернётся свежий JWT токен. 

    Срок жизни  **refresh token**, получаемого обычным способом — 1 месяц.  
    Срок жизни  **refresh token**, получаемого самостоятельным выписыванием — год.


    |
    |-
    
    > Если мы для вас не завели портфели для ведения торговли в игровом контуре, оставьте заявку на <a href="mailto:openapi@alor.ru">openapi@alor.ru</a> или свяжитесь с нами в [телеграме](https://t.me/AlorOpenAPI).

    </br></br>
    Тестовый контур: `https://apidev.alor.ru`

    Боевой контур: `https://api.alor.ru`
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: '1.0'
  termsOfService: 'https://storage.alorbroker.ru/upload/docs/%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0%20%D0%BF%D0%BB%D0%B0%D1%82%D1%84%D0%BE%D1%80%D0%BC%D1%8B.pdf'
  contact:
    email: openapi@alor.ru
servers:
  - url: https://apidev.alor.ru
    description: Тестовый контур
  - url: https://api.alor.ru
    description: Боевой контур
security:
  - bearerAuth: []
tags:
  - name: Authorization
    description: Авторизация
  - name: ClientInfo
    description: Информация о клиенте
  - name: Instruments
    description: "Ценные бумаги / инструменты"
  - name: Other
    description: "Другое"
  - name: Orders
    description: "Работа с заявками"
  - name: Subscriptions
    description: "Подписки и события (WebSocket)"
  - name: StopOrdersV2
    description: "Стоп-заявки v2"
  - name: OrdersWebSocket
    description: Работа с заявками (WebSocket beta)
  - name: OrderGroups
    description: Группы заявок
  - name: Deprecated
    description: Устаревшее
paths:
  /refresh:
    post:
      summary: Обновление JWT токена
      tags:
        - Authorization
      servers:
        - url: https://oauthdev.alor.ru
          description: Тестовый контур
        - url: https://oauth.alor.ru
          description: Боевой контур
      description: |
        Запрос на создание JWT токена, использующегося в качестве токена доступа при авторизации запросов к остальным ресурсам API.

        Для создания JWT токена используется создаваемый в кабинете разработчика Refresh токен. При этом:
        * Передать его серверу можно как в пути (как `Query`), так и в теле запроса (как `Body`);
        * При одновременном заполнении `Query` и `Body` приоритет отдаётся телу запроса;
        * Комбинировать `Query` и `Body` в одном запросе нельзя
      requestBody:
        $ref: '#/components/requestBodies/RefreshAccessToken'
      parameters:
        - $ref: '#/components/parameters/query_Token_Optional'
        - $ref: '#/components/parameters/query_AllowedPortfolios_Optional'
      responses:
        '200':
          description: 'Запрос успешно обработан'
          content:
            application/json:
              schema:
                type: string
                description: |
                  JWT сгенерирован
              examples:
                Пример JWT:
                  value:
                    AccessToken: eyJhbGciOiJ...
        '403':
          description: Не удалось сгенерировать JWT. Refresh token задан некорректно или его срок действия истёк
      security: []
  ## MARKET DATA --------------------------------------------------------
  /md/v2/Clients/{exchange}/{portfolio}/orders:
    get:
      tags:
        - ClientInfo
        - Orders
      summary: 'Информация обо всех заявках'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Возвращает информацию о всех заявках для указанного `portfolio`, созданных на заданной в параметре `exchange` бирже.
      operationId: MdV2ClientsExchangePortfolioOrdersGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Orders'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
      deprecated: false
  /md/v2/Clients/{exchange}/{portfolio}/orders/{orderId}:
    get:
      tags:
        - ClientInfo
        - Orders
      summary: 'Информация о выбранной заявке'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Возвращает информацию о выбранной в параметре `orderId` заявке.
      operationId: MdV2ClientsExchangePortfolioOrdersOrderIdGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/path_OrderId'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Order'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
      deprecated: false
  /md/v2/Clients/{exchange}/{portfolio}/stoporders:
    get:
      tags:
        - ClientInfo
        - StopOrdersV2
      summary: 'Информация обо всех стоп-заявках'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос информации о всех стоп-заявках
      operationId: MdV2ClientsExchangePortfolioStopOrdersGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_StopOrders_Warp'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /md/v2/Clients/{exchange}/{portfolio}/stoporders/{orderId}:
    get:
      tags:
        - ClientInfo
        - StopOrdersV2
      summary: 'Информация о выбранной стоп-заявке'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос информации о выбранной стоп-заявке
      operationId: MdV2ClientsExchangePortfolioStopOrdersOrderIdGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/path_OrderId'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_StopOrder_Warp'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /md/v2/Clients/legacy/{exchange}/{portfolio}/money:
    get:
      tags:
        - Deprecated
      summary: 'Информация о деньгах выбранного портфеля'
      description: |
        Запрос информации о позиции по деньгам. Вызов существует для обратной
        совместимости с API v1, предпочтительно использовать другие вызовы
        (/summary, /risk, /positions)
      operationId: ExchangePortfolioMoney
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/query_Format_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Money'
        '403':
          $ref: '#/components/responses/403'
      deprecated: true
  /md/v2/Clients/{exchange}/{portfolio}/summary:
    get:
      tags:
        - ClientInfo
      summary: 'Информация о портфеле'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос сводной информации о портфеле
      operationId: MdV2ClientsExchangePortfolioSummaryGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Summary'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /md/v2/Clients/{exchange}/{portfolio}/positions:
    get:
      tags:
        - ClientInfo
      summary: 'Информация обо всех позициях в портфеле'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Возвращает информацию обо всех открытых позициях указанного `portfolio`.
      operationId: MdV2ClientsExchangePortfolioPositionsGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_WithoutCurrency_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Positions'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /md/v2/Clients/{exchange}/{portfolio}/positions/{symbol}:
    get:
      tags:
        - ClientInfo
      summary: 'Информация о позициях выбранного инструмента в портфеле'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Возвращает информацию обо всех открытых позициях выбранного инструмента для указанного `portfolio`. 
      operationId: MdV2ClientsExchangePortfolioPositionsSymbolGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/path_Symbol'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Position'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /md/v2/Clients/{exchange}/{portfolio}/trades:
    get:
      tags:
        - ClientInfo
      summary: 'Сделки по портфелю (Все | Текущая сессия)'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос возвращает информацию обо всех сделках с участием указанного в `portfolio` портфеля за текущую торговую сессию.

        Временные рамки сессий зависят от выбранного рынка и могут различаться.
      operationId: MdV2ClientsExchangePortfolioTradesGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/query_WithRepo_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Trades_V2'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
      deprecated: false
  /md/v2/Clients/{exchange}/{portfolio}/{symbol}/trades:
    get:
      tags:
        - ClientInfo
      summary: 'Сделки по портфелю (Инструмент | Текущая сессия)'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос возвращает информацию обо всех сделках с участием указанного в `portfolio` портфеля по указанному в `symbol` финансовому инструменту за текущую торговую сессию.

        Временные рамки сессий зависят от выбранного рынка и могут различаться.
      operationId: MdV2ClientsExchangePortfolioSymbolTradesGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/path_Symbol'
        - $ref: '#/components/parameters/query_InstrumentGroup_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Trades_V2'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
      deprecated: false
  /md/v2/Clients/{exchange}/{portfolio}/fortsrisk:
    get:
      tags:
        - ClientInfo
      summary: 'Информация о рисках на срочном рынке'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос информации о рисках на срочном рынке для выбранного портфеля
      operationId: MdV2ClientsExchangePortfolioFortsriskGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_MoexOnly'
        - $ref: '#/components/parameters/path_Portfolio_FORTS'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_FortsRisk'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /md/v2/Clients/{exchange}/{portfolio}/risk:
    get:
      tags:
        - ClientInfo
      summary: 'Информация о рисках'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос информации о рисках
      operationId: MdV2ClientsExchangePortfolioRiskGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Risk'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /md/v2/Clients/{login}/positions:
    get:
      tags:
        - ClientInfo
      summary: 'Информация о позициях по логину'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Возвращает информацию обо всех позициях во всех портфелях указанного в параметре `login` торгового аккаунта.
      operationId: MdV2ClientsLoginPositionsGet
      parameters:
        - $ref: '#/components/parameters/path_Login'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_WithoutCurrency_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Positions'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /md/stats/{exchange}/{portfolio}/history/trades:
    get:
      tags:
        - Deprecated
      summary: 'История всех сделок'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос списка сделок за предыдущие дни (не более 1000 сделок за один
        запрос)

        При использовании единой денежной позиции параметр `orderByTradeDate` должен быть `true` для корректной сортировки результатов. Сделки, относящиеся к разным рынкам, могут иметь разную длину идентификатора, в связи с чем стандартная сортировка по ID может возвращать результаты в некорректной последовательности
      operationId: TradeStats
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/query_DateFrom_Optional'
        - $ref: '#/components/parameters/query_Ticker_Optional'
        - $ref: '#/components/parameters/query_Side_Optional'
        - $ref: '#/components/parameters/query_FromId_Optional'
        - $ref: '#/components/parameters/query_LimitMax1000_Optional'
        - $ref: '#/components/parameters/query_OrderByTradeDate_Optional'
        - $ref: '#/components/parameters/query_Descending_Optional'
        - $ref: '#/components/parameters/query_WithRepo_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Trades'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: true
  /md/stats/{exchange}/{portfolio}/history/trades/{symbol}:
    get:
      tags:
        - Deprecated
      summary: 'История сделок по выбранному инструменту'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос списка сделок за предыдущие дни (не более 1000 сделок за один запрос) по одному инструменту. 

        При использовании единой денежной позиции параметр `orderByTradeDate` должен быть `true` для корректной сортировки результатов. Сделки, относящиеся к разным рынкам, могут иметь разную длину идентификатора, в связи с чем стандартная сортировка по ID может возвращать результаты в некорректной последовательности
      operationId: TradeStatsBySymbol
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/path_Symbol'
        - $ref: '#/components/parameters/query_DateFrom_Optional'
        - $ref: '#/components/parameters/query_FromId_Optional'
        - $ref: '#/components/parameters/query_LimitMax1000_Optional'
        - $ref: '#/components/parameters/query_OrderByTradeDate_Optional'
        - $ref: '#/components/parameters/query_Descending_Optional'
        - $ref: '#/components/parameters/query_WithRepo_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Trades'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: true
  /md/v2/Stats/{exchange}/{portfolio}/history/trades:
    get:
      tags:
        - ClientInfo
      summary: 'Сделки по портфелю (Все | Прошлые сессии)'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос возвращает информацию обо всех сделках с участием указанного в `portfolio` портфеля за прошлые торговые сессии.
        
        Информация за текущую торговую сессию в ответ не входит — для её получения используйте соответствующий запрос.

        Временные рамки сессий зависят от выбранного рынка и могут различаться.
        
        За один запрос можно вернуть не более 1000 записей.

        При использовании единой денежной позиции параметр `orderByTradeDate` должен быть `true` для корректной сортировки результатов. Сделки, относящиеся к разным рынкам, могут иметь разную длину идентификатора, в связи с чем стандартная сортировка по ID может возвращать результаты в некорректной последовательности
      operationId: MdV2StatsExchangePortfolioHistoryTradesGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/query_InstrumentGroup_Optional'
        - $ref: '#/components/parameters/query_DateFrom_Optional'
        - $ref: '#/components/parameters/query_Ticker_Optional'
        - $ref: '#/components/parameters/query_FromId_Optional'
        - $ref: '#/components/parameters/query_LimitMax1000_Optional'
        - $ref: '#/components/parameters/query_OrderByTradeDate_Optional'
        - $ref: '#/components/parameters/query_Descending_Optional'
        - $ref: '#/components/parameters/query_WithRepo_Optional'
        - $ref: '#/components/parameters/query_Side_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Trades_V2'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /md/v2/Stats/{exchange}/{portfolio}/history/trades/{symbol}:
    get:
      tags:
        - ClientInfo
      summary: 'Сделки по портфелю (Инструмент | Прошлые сессии)'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос возвращает информацию обо всех сделках с участием указанного в `portfolio` портфеля по указанному в `symbol` финансовому инструменту за прошлые торговые сессии.
        
        Информация за текущую торговую сессию в ответ не входит — для её получения используйте соответствующий запрос.

        Временные рамки сессий зависят от выбранного рынка и могут различаться.

        За один запрос можно вернуть не более 1000 записей.

        При использовании единой денежной позиции параметр `orderByTradeDate` должен быть `true` для корректной сортировки результатов. Сделки, относящиеся к разным рынкам, могут иметь разную длину идентификатора, в связи с чем стандартная сортировка по ID может возвращать результаты в некорректной последовательности
      operationId: MdV2StatsExchangePortfolioHistoryTradesSymbolGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Portfolio_FOND'
        - $ref: '#/components/parameters/path_Symbol'
        - $ref: '#/components/parameters/query_InstrumentGroup_Optional'
        - $ref: '#/components/parameters/query_DateFrom_Optional'
        - $ref: '#/components/parameters/query_FromId_Optional'
        - $ref: '#/components/parameters/query_LimitMax1000_Optional'
        - $ref: '#/components/parameters/query_OrderByTradeDate_Optional'
        - $ref: '#/components/parameters/query_Descending_Optional'
        - $ref: '#/components/parameters/query_WithRepo_Optional'
        - $ref: '#/components/parameters/query_Side_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Trades_V2'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /md/v2/Securities:
    get:
      tags:
        - Instruments
      summary: 'Информация обо всех инструментах'
      description: |
        **Запрос может быть выполнен без авторизации**. При отправке анонимного запроса вернутся данные, бывшие актуальными 15 минут назад.

        Возвращает информацию о соответствующих запросу торговых инструментах на всех биржах. Объекты в ответе сортируются по объёму торгов. Если не указано иное значение параметра `limit`, в ответе возвращается только 25 объектов за раз
      operationId: MdV2SecuritiesGet
      parameters:
        - $ref: '#/components/parameters/query_TickerNamedQuery_Optional'
        - $ref: '#/components/parameters/query_LimitDefault25_Optional'
        - $ref: '#/components/parameters/query_Offset_Optional'
        - $ref: '#/components/parameters/query_Sector_Optional'
        - $ref: '#/components/parameters/query_CfiCode_Optional'
        - $ref: '#/components/parameters/query_Exchange_All_Optional'
        - $ref: '#/components/parameters/query_InstrumentGroup_Optional'
        - $ref: '#/components/parameters/query_IncludeNonBaseBoards_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Securities'
      deprecated: false
  /md/v2/Securities/{exchange}:
    get:
      tags:
        - Instruments
      summary: 'Информация обо всех инструментах на выбранной бирже'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Возвращает информацию о соответствующих запросу торговых инструментах на выбранной бирже. Объекты в ответе сортируются по объёму торгов. Если не указано иное значение параметра `limit`, в ответе возвращаются все соответствующие параметрам запроса инструменты
      operationId: MdV2SecuritiesExchangeGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_Market_Optional'
        - $ref: '#/components/parameters/query_IncludeOld_Optional'
        - $ref: '#/components/parameters/query_Limit_Optional'
        - $ref: '#/components/parameters/query_IncludeNonBaseBoards_Optional'
        - $ref: '#/components/parameters/query_Offset_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Securities'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
      deprecated: false
  /md/v2/Securities/{exchange}/{symbol}:
    get:
      tags:
        - Instruments
      summary: 'Информация о выбранном инструменте'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос информации о выбранном финансовом инструменте на бирже
      operationId: MdV2SecuritiesExchangeSymbolGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Symbol'
        - $ref: '#/components/parameters/query_InstrumentGroup_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Security'
        '400':
          $ref: '#/components/responses/400_Get'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /md/v2/Securities/{exchange}/{symbol}/availableBoards:
    get:
      tags:
        - Instruments
      summary: 'Список бордов инструмента'
      description: |
        **Запрос может быть выполнен без авторизации**. При отправке анонимного запроса вернутся данные, бывшие актуальными 15 минут назад.

        Возвращает список всех кодов поддерживаемых выбранным инструментов режимов торгов
      operationId: MdV2SecuritiesExchangeSymbolAvailableBoardsGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Symbol'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_AvailableBoards'
        '400':
          $ref: '#/components/responses/400_Get'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /md/v2/Securities/{exchange}/{symbol}/alltrades:
    get:
      tags:
        - Instruments
        #- Warp.API.HTTP.Marketdata
      summary: 'Сделки по инструменту (Текущая сессия)'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос возвращает обезличенную информацию обо всех сделках с участием указанного в `symbol` инструмента, совершённых всеми участниками торгов за текущую торговую сессию.

        Временные рамки сессий зависят от выбранного рынка и могут различаться.
      operationId: MdV2SecuritiesExchangeSymbolAlltradesGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Symbol'
        - $ref: '#/components/parameters/query_InstrumentGroup_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
        - $ref: '#/components/parameters/query_DateFromSec_Optional'
        - $ref: '#/components/parameters/query_DateToSec_Optional'
        - $ref: '#/components/parameters/query_FromIdAllTrades_Optional'
        - $ref: '#/components/parameters/query_ToId_Optional'
        - $ref: '#/components/parameters/query_QtyFrom_Optional'
        - $ref: '#/components/parameters/query_QtyTo_Optional'
        - $ref: '#/components/parameters/query_PriceFrom_Optional'
        - $ref: '#/components/parameters/query_PriceTo_Optional'
        - $ref: '#/components/parameters/query_Side_Optional'
        - $ref: '#/components/parameters/query_Offset_Optional'
        - $ref: '#/components/parameters/query_Take_Optional'
        - $ref: '#/components/parameters/query_Descending_Optional'
        - $ref: '#/components/parameters/query_IncludeVirtualTrades_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_AllTrades'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /md/v2/Securities/{exchange}/{symbol}/alltrades/history:
    get:
      tags:
        - Instruments
        #- Warp.API.HTTP.Marketdata
      summary: 'Сделки по инструменту (Прошлые сессии)'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос возвращает обезличенную информацию обо всех сделках с участием указанного в `symbol` инструмента, совершённых всеми участниками торгов за прошлые торговые сессии.
        
        Информация за текущую торговую сессию в ответ не входит — для её получения используйте соответствующий запрос.

        Временные рамки сессий зависят от выбранного рынка и могут различаться.
      operationId: MdV2SecuritiesExchangeSymbolAlltradesHistoryGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Symbol'
        - $ref: '#/components/parameters/query_InstrumentGroup_Optional'
        - $ref: '#/components/parameters/query_DateFromSec_Optional'
        - $ref: '#/components/parameters/query_DateToSec_Optional'
        - $ref: '#/components/parameters/query_LimitMax50000_Required'
        - $ref: '#/components/parameters/query_Offset_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_AllTradesHistory'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /md/v2/Securities/{exchange}/{symbol}/actualFuturesQuote:
    get:
      tags:
        - Instruments
      summary: 'Котировки по ближайшему фьючерсу (код)'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос возвращает информацию о текущем активном фьючерсе с ближайшей датой экспирации.

        Текущим активным считается фьючерс, чья дата экспирации ещё не настала и перед ним в очереди исполнения нет более ранних неисполненных фьючерсов.
        
        Для поиска используется его базовый код без даты погашения. Например, для поиска фьючерса `SI-x.xx` используется базовый код `SI`.

        Для получения котировок о прочих фьючерсах используйте запрос "Котировки для выбранных инструментов".
      operationId: MdV2SecuritiesExchangeSymbolActualFuturesQuoteGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_MoexOnly'
        - $ref: '#/components/parameters/path_Symbol'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Futures'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /md/v2/Securities/{symbols}/quotes:
    get:
      tags:
        - Instruments
      summary: 'Котировки для выбранных инструментов'
      description: |
        **Запрос может быть выполнен без авторизации**. При отправке анонимного запроса вернутся данные, бывшие актуальными 15 минут назад.

        Запрос информации о котировках для выбранных инструментов и бирж
      operationId: MdV2SecuritiesSymbolsQuotesGet
      parameters:
        - $ref: '#/components/parameters/path_Symbols'
        - $ref: '#/components/parameters/query_Format_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_Symbols'
      deprecated: false
  /md/v2/Securities/currencyPairs:
    get:
      tags:
        - Instruments
      summary: 'Список валютных пар'
      description: |
        **Запрос может быть выполнен без авторизации**. При отправке анонимного запроса вернутся данные, бывшие актуальными 15 минут назад.

        Возвращает список доступных валютных пар
      operationId: MdV2SecuritiesCurrencyPairsGet
      responses:
        '200':
          $ref: '#/components/responses/200_CurrencyPairs'
      deprecated: false
  /md/v2/orderbooks/{exchange}/{symbol}:
    get:
      tags:
        - Instruments
      summary: 'Информация о биржевом стакане'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос биржевого стакана
      operationId: MdV2OrderbooksExchangeSymbolGet
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Symbol'
        - $ref: '#/components/parameters/query_InstrumentGroup_Optional'
        - $ref: '#/components/parameters/query_Depth_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderBook'
        '401':
          $ref: '#/components/responses/401'
      deprecated: false
  /md/v2/time:
    get:
      tags:
        - Other
      summary: Текущее UTC время в формате Unix
      description: |
        **Запрос может быть выполнен без авторизации**. При отправке анонимного запроса вернутся данные, бывшие актуальными 15 минут назад.

        Запрос текущего UTC времени в формате Unix Time Seconds. Если этот запрос выполнен без авторизации, то будет возвращено время, которое было 15 минут назад.
      operationId: MdV2TimeGet
      responses:
        '200':
          $ref: '#/components/responses/200_Time'
      deprecated: false
  /md/v2/risk/rates:
    get:
      tags:
        - Instruments
      summary: 'Ставки риска'
      description: |
        **Запрос может быть выполнен без авторизации**. При отправке анонимного запроса вернутся данные, бывшие актуальными 15 минут назад.

        Получение ставок риска для маржинальной торговли.
      operationId: MdV2RiskRatesGet
      parameters:
        - $ref: '#/components/parameters/query_Exchange_All_Optional'
        - $ref: '#/components/parameters/query_Ticker_Optional'
        - $ref: '#/components/parameters/query_RiskCategoryId_Required'
        - $ref: '#/components/parameters/query_Search_Optional'
        - $ref: '#/components/parameters/query_Limit_Optional'
        - $ref: '#/components/parameters/query_Offset_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_RiskRates'
      deprecated: false
  /md/v2/history:
    get:
      tags:
        - Instruments
      summary: 'История для выбранных биржи и инструмента'
      description: |
        **Запрос может быть выполнен без авторизации**. При отправке анонимного запроса вернутся данные, бывшие актуальными 15 минут назад.

        Запрос истории рынка для выбранных биржи и финансового инструмента. Данные имеют задержку в 15 минут, если запрос не авторизован. Для авторизованных клиентов задержка не применяется.
      operationId: MdV2HistoryGet
      parameters:
        - $ref: '#/components/parameters/query_Symbol_Required'
        - $ref: '#/components/parameters/query_Exchange_All_Required'
        - $ref: '#/components/parameters/query_InstrumentGroup_Optional'
        - $ref: '#/components/parameters/query_TimeFrame_Required'
        - $ref: '#/components/parameters/query_DateFromSec_Required'
        - $ref: '#/components/parameters/query_DateToSec_Required'
        - $ref: '#/components/parameters/query_CountBack_Optional'
        - $ref: '#/components/parameters/query_Untraded_Optional'
        - $ref: '#/components/parameters/query_SplitAdjust_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_History'
        '400':
          $ref: '#/components/responses/400_Get'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /md/status/{exchange}/{market}:
    get:
      tags:
        - Deprecated
      summary: 'Информация о статусе торгов'
      description: |
        **Запрос может быть выполнен без авторизации**. При отправке анонимного запроса вернутся данные, бывшие актуальными 15 минут назад.

        Возвращает информацию о статусе торгов для указанного рынка на выбранной бирже
      operationId: DevTradingSessionStatus
      parameters:
        - $ref: '#/components/parameters/path_Exchange_All'
        - $ref: '#/components/parameters/path_Market'
        - $ref: '#/components/parameters/query_Format_Optional'
      responses:
        '200':
          $ref: '#/components/responses/200_TradingSession'
        '500':
          $ref: '#/components/responses/500'
      deprecated: true
  ## COMMAND API --------------------------------------------------------
  /commandapi/warptrans/TRADE/v2/client/orders/actions/market:
    post:
      tags:
        - Orders
      summary: 'Создание рыночной заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос создаёт на бирже новую заявку на покупку или продажу торгового инструмента по рыночной цене.
      operationId: CommandapiWarptransTradeV2ClientOrdersActionsMarketPost
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsMarketTV'
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionLimitMarket_CommandAPI'
        '400':
          $ref: '#/components/responses/400_Post_Put'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /commandapi/warptrans/TRADE/v2/client/orders/actions/limit:
    post:
      tags:
        - Orders
      summary: 'Создание лимитной заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос создаёт на бирже новую заявку на покупку или продажу торгового инструмента по указанной в теле запроса цене.
      operationId: CommandapiWarptransTradeV2ClientOrdersActionsLimitPost
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsLimitTVPost'
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionLimitMarket_CommandAPI'
        '400':
          $ref: '#/components/responses/400_Post_Put'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLoss:
    post:
      tags:
        - Deprecated
        #-  "Warp.ATConnector"
      summary: 'Создание стоп-лосс заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос создаёт стоп-лосс заявку с указанными характеристиками.
      operationId: '/v2/client/orders/actions/stopLoss'
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStop'
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_TradeServerCode'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionStopProfitLoss'
        '400':
          $ref: '#/components/responses/400_Post_Put_Deprecated'
      deprecated: true
  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfit:
    post:
      tags:
        - Deprecated
        #-  "Warp.ATConnector"
      summary: 'Создание стоп-заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос создаёт стоп-заявку с указанными характеристиками
      operationId: '/v2/client/orders/actions/takeProfit'
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStop'
        # верно, тело совпадает со stop.
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_TradeServerCode'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionStopProfitLoss'
        '400':
          $ref: '#/components/responses/400_Post_Put_Deprecated'
      deprecated: true
  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfitLimit:
    post:
      tags:
        - Deprecated
        #-  "Warp.ATConvertor"
      summary: 'Создание стоп-лимит заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос создаёт стоп-лимит заявку с указанными характеристиками
      operationId: '/v2/client/orders/actions/takeProfitLimit'
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStopLimit'
        #верно, тело совпадает с stoplimit
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_TradeServerCode'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionStopProfitLoss'
        '400':
          $ref: '#/components/responses/400_Post_Put_Deprecated'
      deprecated: true
  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLossLimit:
    post:
      tags:
        - Deprecated
        #-  "Warp.ATConvertor"
      summary: Создание стоп-лосс лимит заявки
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос создаёт стоп-лосс лимит заявку с указанными характеристиками
      operationId: /v2/client/orders/actions/stopLossLimit
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStopLimit'
        #верно, тело совпадает с stoplimit
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_TradeServerCode'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionStopProfitLoss'
        '400':
          $ref: '#/components/responses/400_Post_Put_Deprecated'
      deprecated: true
  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLoss/{orderId}:
    #не совпадают виды запросов(путь) в postman и в visualstudio
    #здесь описан путь в соответствии с кодом в visualstudio
    put:
      tags:
        - Deprecated
        #-  "Warp.ATConvertor"
      summary: 'Изменение стоп-лосс заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос изменяет характеристики ранее поданной стоп-лосс заявки с указанным номером
      operationId: '/v2/client/orders/actions/stopLoss/{orderId}'
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStop'
        # верно, тело совпадает со stop.
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_TradeServerCode'
        - $ref: '#/components/parameters/path_OrderId'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionStopProfitLoss'
        '400':
          $ref: '#/components/responses/400_Post_Put_Deprecated'
      deprecated: true
  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfit/{orderId}:
    put:
      tags:
        - Deprecated
        #-  "Warp.ATConvertor"
      summary: 'Изменение стоп-заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос изменяет характеристики ранее поданной стоп-заявки с указанным номером
      operationId: '/v2/client/orders/actions/takeProfit/{orderId}'
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStop'
        # верно, тело совпадает со stop.
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_TradeServerCode'
        - $ref: '#/components/parameters/path_OrderId'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionStopProfitLoss'
        '400':
          $ref: '#/components/responses/400_Post_Put_Deprecated'
      deprecated: true
  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfitLimit/{orderId}:
    put:
      tags:
        - Deprecated
        #-  "Warp.ATConvertor"
      summary: 'Изменение стоп-лимит заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос изменяет характеристики ранее поданной стоп-лимит заявки с указанным номером
      operationId: '/v2/client/orders/actions/takeProfitLimit/{orderId}'
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStopLimit'
        #верно, тело совпадает с stoplimit
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_TradeServerCode'
        - $ref: '#/components/parameters/path_OrderId'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionStopProfitLoss'
        '400':
          $ref: '#/components/responses/400_Post_Put_Deprecated'
      deprecated: true
  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLossLimit/{orderId}:
    put:
      tags:
        - Deprecated
        #-  "Warp.ATConvertor"
      summary: 'Изменение стоп-лосс лимит заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос изменяет характеристики ранее поданной стоп-лосс лимит заявки с указанным номером
      operationId: '/v2/client/orders/actions/stopLossLimit/{orderId}'
      #в коде stopLossLimit потерялся, зато есть два takeProfitLimit
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStopLimit'
        #верно, тело совпадает с stoplimit
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_TradeServerCode'
        - $ref: '#/components/parameters/path_OrderId'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionStopProfitLoss'
        '400':
          $ref: '#/components/responses/400_Post_Put_Deprecated'
      deprecated: true
  /commandapi/warptrans/TRADE/v2/client/orders/actions/market/{orderId}:
    put:
      tags:
        - Orders
      summary: 'Изменение рыночной заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос на изменение ранее поданной рыночной заявки. При обработке запроса исходная заявка с указанным номером отменяется, после чего выставляется новая заявка с новым номером и изменёнными параметрами.
      operationId: CommandapiWarptransTradeV2ClientOrdersActionsMarketOrderIdPut
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsMarketTV'
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_OrderId'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionLimitMarket'
        '400':
          $ref: '#/components/responses/400_Post_Put'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /commandapi/warptrans/TRADE/v2/client/orders/actions/limit/{orderId}:
    put:
      tags:
        - Orders
      summary: 'Изменение лимитной заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос на изменение ранее поданной лимитной заявки. При обработке запроса исходная заявка с указанным номером отменяется, после чего выставляется новая заявка с новым номером и изменёнными параметрами.

        Из-за ограничения со стороны биржи параметры `side` и `symbol` не учитываются при изменении заявок, относящихся к срочному рынку. Ограничение не распространяется на первичное выставление заявок на срочном рынке и изменение заявок на прочих рынках.
      operationId: CommandapiWarptransTradeV2ClientOrdersActionsLimitOrderIdPut
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsLimitTVPut'
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_OrderId'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionLimitMarket'
        '400':
          $ref: '#/components/responses/400_Post_Put'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /warptrans/{tradeServerCode}/v2/client/orders/{orderId}:
    #не совпадают виды запросов(путь) в postman и в visualstudio
    #здесь описан путь в соответствии с кодом в visualstudio
    delete:
      tags:
        - Deprecated
        #-  "Warp.ATConvertor"
      summary: 'Снятие стоп-заявки'
      description: 'Снятие стоп-заявки с указанным идентификатором'
      operationId: '/v2/client/orders/actions/{orderId}'
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_TradeServerCode'
        - $ref: '#/components/parameters/path_OrderId'
        - $ref: '#/components/parameters/query_Portfolio_FOND_Required'
        - $ref: '#/components/parameters/query_Stop_Required'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderAction_Delete'
        '400':
          $ref: '#/components/responses/400_Post_Put'
      deprecated: true
  /commandapi/warptrans/TRADE/v2/client/orders/estimate:
    post:
      tags:
        - Orders
      summary: 'Провести оценку одной заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.
      operationId: CommandapiWarptransTradeV2ClientOrdersEstimatePost
      requestBody:
        $ref: '#/components/requestBodies/EstimateOrder'
      responses:
        '200':
          $ref: '#/components/responses/200_EstimateOrder'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /commandapi/warptrans/TRADE/v2/client/orders/estimate/all:
    post:
      tags:
        - Orders
      summary: 'Провести оценку нескольких заявок'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.
      operationId: CommandapiWarptransTradeV2ClientOrdersEstimateAllPost
      requestBody:
        $ref: '#/components/requestBodies/EstimateOrders'
      responses:
        '200':
          $ref: '#/components/responses/200_EstimateOrders'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /commandapi/warptrans/TRADE/v2/client/orders/actions/stopLimit:
    post:
      tags:
        - StopOrdersV2
      summary: 'Создание стоп-лимитной заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        
      operationId: CommandapiWarptransTradeV2ClientOrdersActionsStopLimitPost
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStopLimitTVWarpPost'
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionLimitMarket_CommandAPI'
        '400':
          $ref: '#/components/responses/400_Post_Put'
        '401':
          $ref: '#/components/responses/401'
      deprecated: false
  /commandapi/warptrans/TRADE/v2/client/orders/actions/stop:
    post:
      tags:
        - StopOrdersV2
      summary: 'Создание стоп-заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        
      operationId: CommandapiWarptransTradeV2ClientOrdersActionsStopPost
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStopMarketTVWarp'
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionLimitMarket_CommandAPI'
        '400':
          $ref: '#/components/responses/400_Post_Put'
        '401':
          $ref: '#/components/responses/401'
      deprecated: false
  /commandapi/warptrans/TRADE/v2/client/orders/actions/stop/{stopOrderId}:
    put:
      tags:
        - StopOrdersV2
      summary: 'Изменение стоп-заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос на изменение ранее поданной стоп-заявки. При обработке запроса исходная заявка с указанным номером отменяется, после чего выставляется новая заявка с новым номером и изменёнными параметрами.
      operationId: CommandapiWarptransTradeV2ClientOrdersActionsStopStopOrderIdPut
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStopMarketTVWarp'
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_StopOrderId'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionLimitMarket_CommandAPI'
        '400':
          $ref: '#/components/responses/400_Post_Put'
        '401':
          $ref: '#/components/responses/401'
      deprecated: false
  /commandapi/warptrans/TRADE/v2/client/orders/actions/stopLimit/{stopOrderId}:
    put:
      tags:
        - StopOrdersV2
      summary: 'Изменение стоп-лимитной заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос на изменение ранее поданной стоп-лимитной заявки. При обработке запроса исходная заявка с указанным номером отменяется, после чего выставляется новая заявка с новым номером и изменёнными параметрами.
      operationId: CommandapiWarptransTradeV2ClientOrdersActionsStopLimitStopOrderIdPut
      requestBody:
        $ref: '#/components/requestBodies/OrdersActionsStopLimitTVWarpPut'
      parameters:
        - $ref: '#/components/parameters/header_X-REQID'
        - $ref: '#/components/parameters/header_X-ALOR-REQID'
        - $ref: '#/components/parameters/path_StopOrderId'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderActionLimitMarket_CommandAPI'
        '400':
          $ref: '#/components/responses/400_Post_Put'
        '401':
          $ref: '#/components/responses/401'
      deprecated: false
  /commandapi/warptrans/TRADE/v2/client/orders/{orderId}:
    delete:
      tags:
        - Orders
        - StopOrdersV2
      summary: 'Снять одну заявку'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос снимает одну биржевую или условную заявку с указанным уникальным идентификатором
      operationId: CommandapiWarptransTradeV2ClientOrdersOrderIdDelete
      parameters:
        - $ref: '#/components/parameters/path_OrderId'
        - $ref: '#/components/parameters/query_Portfolio_FOND_Required'
        - $ref: '#/components/parameters/query_Exchange_MoexOnly_Required'
        - $ref: '#/components/parameters/query_Stop_Required'
        - $ref: '#/components/parameters/query_JsonResponse_Optional'
        - $ref: '#/components/parameters/query_Format_Optional'
      responses:
        '200':
          description: 'Запрос успешно обработан'
          content:
            text/plain:
              schema:
                allOf:
                  - $ref: '#/components/schemas/field_Message'
                  - example: success
              examples:
                Пример:
                  $ref: '#/components/examples/MessageSuccessCommonText'
        '400':
          description: Не удалось выполнить запрос. Проверьте синтаксис запроса и корректность заданных значений
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: 'OrderToCancelNotFound (404)'
                    description: 'Тип ошибки'
                  message:
                    allOf:
                      - $ref: '#/components/schemas/field_Message'
                      - example: Order to cancel not found
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /commandapi/warptrans/TRADE/v2/client/orders/all:
    delete:
      tags:
        - Orders
        - StopOrdersV2
      summary: 'Снять все заявки'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Запрос снимает все биржевые и/или условные заявки для указанного портфеля.
      operationId: CommandapiWarptransTradeV2ClientOrdersAllDelete
      parameters:
        - $ref: '#/components/parameters/query_Exchange_All_Required'
        - $ref: '#/components/parameters/query_Portfolio_FOND_Required'
        - $ref: '#/components/parameters/query_Stop_Optional'
      responses:
        '200':
          description: 'Запрос успешно обработан'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/field_Message'
                  - example: success
              examples:
                Пример:
                  $ref: '#/components/examples/MessageSuccessCommonText'
        '400':
          description: Не удалось выполнить запрос. Проверьте синтаксис запроса и корректность заданных значений
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: 'OrderToCancelNotFound'
                    description: 'Тип ошибки'
                  message:
                    allOf:
                      - $ref: '#/components/schemas/field_Message'
                      - example: Orders to cancel not found
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
  /commandapi/api/orderGroups:
    get:
      tags:
        - OrderGroups
      summary: 'Получение всех групп заявок'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Возвращает список групп заявок для логина, выписавшего токен.
      operationId: CommandapiApiOrderGroupsGet
      responses:
        '200':
          $ref: '#/components/responses/200_OrderGroups_Info'
        '400':
          $ref: '#/components/responses/400_OrderGroup_Creation'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      deprecated: false
    post:
      tags:
        - OrderGroups
      summary: 'Создание группы заявок'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Создание группы заявок на основе уже созданных заявок
      operationId: CommandapiApiOrderGroupsPost
      requestBody:
        $ref: '#/components/requestBodies/OrderGroupCreate'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderGroup_Creation'
        '400':
          $ref: '#/components/responses/400_OrderGroup_Creation'
        '401':
          $ref: '#/components/responses/401'
      deprecated: false
  /commandapi/api/orderGroups/{orderGroupId}:
    get:
      tags:
        - OrderGroups
      summary: 'Получение информации о группе заявок'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.
      operationId: CommandapiApiOrderGroupsOrderGroupIdGet
      parameters:
        - in: path
          name: orderGroupId
          required: true
          example: eafb19d6-c578-4afe-aa95-d528c4531031
          schema:
            type: string
            format: uuid
          description: Идентификатор группы заявок
      responses:
        '200':
          $ref: '#/components/responses/200_OrderGroup_Info'
        '400':
          $ref: '#/components/responses/400_OrderGroup_Creation'
        '401':
          $ref: '#/components/responses/401'
      deprecated: false
    put:
      tags:
        - OrderGroups
      summary: 'Редактирование группы заявок'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.

        Редактирование группы заявок (связывание новых заявок, изменение типа
        связи)
      operationId: CommandapiApiOrderGroupsOrderGroupIdPut
      parameters:
        - in: path
          name: orderGroupId
          required: true
          example: eafb19d6-c578-4afe-aa95-d528c4531031
          schema:
            type: string
            format: uuid
          description: Идентификатор группы заявок
      requestBody:
        $ref: '#/components/requestBodies/OrderGroupModify'
      responses:
        '200':
          $ref: '#/components/responses/200_OrderGroup_PutDelete'
        '400':
          $ref: '#/components/responses/400_OrderGroup_Creation'
        '401':
          $ref: '#/components/responses/401'
      deprecated: false
    delete:
      tags:
        - OrderGroups
      summary: 'Удаление группы заявок'
      description: |
        **Запрос нельзя выполнить анонимно**. Для авторизации запроса добавьте заголовок `Authorization` со значением `Bearer <ваш JWT>`.
      operationId: CommandapiApiOrderGroupsOrderGroupIdDelete
      parameters:
        - in: path
          name: orderGroupId
          required: true
          example: eafb19d6-c578-4afe-aa95-d528c4531031
          schema:
            type: string
            format: uuid
          description: Идентификатор группы заявок
      responses:
        '200':
          $ref: '#/components/responses/200_OrderGroup_PutDelete'
        '400':
          $ref: '#/components/responses/400_OrderGroup_Creation'
        '401':
          $ref: '#/components/responses/401'
      deprecated: false
  ## WEBSOCKET --------------------------------------------------------
  ### WebSocket Subscriptions (queries to the /ws interface)
  "/ws               ":         # OrderBookGetAndSubscribe
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на "биржевой стакан"'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br>
        Подписка на информацию о биржевом стакане для выбранных биржи и финансового инструмента.<br>
        Поддерживаются только авторизованные запросы.
      operationId: OrderBookGetAndSubscribe
      requestBody:
        $ref: "#/components/requestBodies/ws_sub_OrderBookGetAndSubscribe"
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_OrderBookGetAndSubscribe'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws              ":          # BarsGetAndSubscribe
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на историю цен (свечи)'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на историю цен (свечи) для выбранных биржи и финансового инструмента. 
      operationId: BarsGetAndSubscribe 
      requestBody:
        $ref: "#/components/requestBodies/ws_sub_BarsGetAndSubscribe"
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_BarsGetAndSubscribe'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws             ":           # QuotesSubscribe
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на информацию о котировках'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о котировках для выбранных инструментов и бирж.
      operationId: QuotesSubscribe
      requestBody:
        $ref: "#/components/requestBodies/ws_sub_QuotesSubscribe"
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_QuotesSubscribe'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws                    ":    # AllTradesGetAndSubscribe
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на все сделки'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о всех сделках.
      operationId: AllTradesGetAndSubscribe
      requestBody:
        $ref: "#/components/requestBodies/ws_sub_AllTradesGetAndSubscribe"
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_AllTradesGetAndSubscribe'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws            ":            # PositionsGetAndSubscribeV2
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на информацию о текущих позициях по торговым инструментам и деньгам'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих позициях по ценным бумагам и деньгам. 
      operationId: PositionsGetAndSubscribeV2
      requestBody:
        $ref: "#/components/requestBodies/ws_sub_PositionsGetAndSubscribe"
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_PositionsGetAndSubscribe'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws          ":              # SummariesGetAndSubscribeV2
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на сводную информацию по портфелю'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на сводную информацию по портфелю.
      operationId: SummariesGetAndSubscribeV2
      requestBody:
        $ref: '#/components/requestBodies/ws_sub_SummariesGetAndSubscribeV2'
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_SummariesGetAndSubscribeV2'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws                ":        # RisksGetAndSubscribe
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на информацию по портфельным рискам'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на сводную информацию по портфельным рискам.
      operationId: RisksGetAndSubscribe
      requestBody:
        $ref: '#/components/requestBodies/ws_sub_RisksGetAndSubscribe'
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_RisksGetAndSubscribe'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws                  ":      # SpectraRisksGetAndSubscribe
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на информацию по рискам срочного рынка (FORTS)'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию по рискам срочного рынка (FORTS).
      operationId: SpectraRisksGetAndSubscribe
      requestBody:
        $ref: '#/components/requestBodies/ws_sub_SpectraRisksGetAndSubscribe'
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_SpectraRisksGetAndSubscribe'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws           ":             # TradesGetAndSubscribeV2
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на сделки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о сделках.
      operationId: TradesGetAndSubscribeV2
      requestBody:
        $ref: "#/components/requestBodies/ws_sub_TradesGetAndSubscribe"
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_TradesGetAndSubscribe'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws         ":               # StopOrdersGetAndSubscribe
    trace:
      tags:
        - Deprecated
      summary: 'WebSocket подписка на информацию о стоп-заявках'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих заявках на рынке для выбранных биржи и финансового инструмента.
      operationId: WS_prod_StopOrdersSubscribe
      requestBody:
        $ref: '#/components/requestBodies/ws_sub_StopOrdersGetAndSubscribe'
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_StopOrdersGetAndSubscribe'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: true
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws                 ":       # OrdersGetAndSubscribeV2
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на информацию о заявках'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих заявках на рынке для выбранных биржи и финансового инструмента.
      operationId: OrdersGetAndSubscribeV2
      requestBody:
        $ref: '#/components/requestBodies/ws_sub_OrdersGetAndSubscribe'
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_OrdersGetAndSubscribe'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws                     ":   # InstrumentsGetAndSubscribeV2
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на изменение информации о финансовых инструментах'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на изменение информации о финансовых инструментах на выбранной бирже.
      operationId: InstrumentsGetAndSubscribeV2
      requestBody:
        $ref: '#/components/requestBodies/ws_sub_InstrumentsGetAndSubscribeV2'
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_InstrumentsGetAndSubscribeV2'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws        ":                # unsubscribe
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket отмена существующей подписки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).
      operationId: Unsubscribe
      requestBody:
        $ref: '#/components/requestBodies/ws_sub_Unsubscribe'
      responses:
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  "/ws                   ":     # StopOrdersGetAndSubscribeV2
    trace:
      tags:
        - Subscriptions
      summary: 'WebSocket подписка на информацию о стоп-заявках v2'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих заявках на рынке для выбранных биржи и финансового инструмента.
      operationId: StopOrdersGetAndSubscribeV2
      requestBody:
        $ref: '#/components/requestBodies/ws_sub_StopOrdersGetAndSubscribeV2'
      responses:
        '100':
          $ref: '#/components/responses/ws_Subscription_100_StopOrdersGetAndSubscribeWarp'
        '200':
          $ref: '#/components/responses/ws_Subscription_200'
        '401':
          $ref: '#/components/responses/ws_Subscription_401'
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/ws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          description: Боевой контур
          variables: {}
  ### WebSocket Commands (queries to the /cws interface)
  "/cws                 ":      # authorize
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Авторизация'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
      operationId: Authorize
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_Authorize"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Authorize"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws               ":        # create:market
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Создание рыночной заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        
        Запрос создаёт на бирже новую заявку на покупку или продажу торгового инструмента по рыночной цене.
      operationId: CreateMarketOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_CreateOrder_Market"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Create"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws              ":         # create:limit
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Создание лимитной заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        
        Запрос создаёт на бирже новую заявку на покупку или продажу торгового инструмента по указанной в теле запроса цене.
      operationId: CreateLimitOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_CreateOrder_Limit"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Create"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws             ":          # create:stop
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Создание стоп-заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
      operationId: CreateStopOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_CreateOrder_Stop"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Create"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws            ":           # create:stopLimit
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Создание стоп-лимитной заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
      operationId: CreateStopLimitOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_CreateOrder_StopLimit"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Create"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws           ":            # update:market
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Изменение рыночной заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        
        Запрос на изменение ранее поданной рыночной заявки. При обработке запроса исходная заявка с указанным номером отменяется, после чего выставляется новая заявка с новым номером и изменёнными параметрами.
      operationId: UpdateMarketOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_UpdateOrder_Market"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Update"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws          ":             # update:limit
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Изменение лимитной заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        
        Запрос на изменение ранее поданной лимитной заявки. При обработке запроса исходная заявка с указанным номером отменяется, после чего выставляется новая заявка с новым номером и изменёнными параметрами.

        Из-за ограничения со стороны биржи параметры `side` и `symbol` не учитываются при изменении заявок, относящихся к срочному рынку. Ограничение не распространяется на первичное выставление заявок на срочном рынке и изменение заявок на прочих рынках.
      operationId: UpdateLimitOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_UpdateOrder_Limit"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Update"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws         ":              # update:stop
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Изменение стоп-заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).

        Запрос на изменение ранее поданной стоп-заявки. При обработке запроса исходная заявка с указанным номером отменяется, после чего выставляется новая заявка с новым номером и изменёнными параметрами.
      operationId: UpdateStopOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_UpdateOrder_Stop"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Update"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws        ":               # update:stopLimit
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Изменение стоп-лимитной заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).

        Запрос на изменение ранее поданной стоп-лимитной заявки. При обработке запроса исходная заявка с указанным номером отменяется, после чего выставляется новая заявка с новым номером и изменёнными параметрами.
      operationId: UpdateStopLimitOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_UpdateOrder_StopLimit"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Update"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws       ":                # delete:market
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Снятие рыночной заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        
        Запрос снимает рыночную заявку с указанным уникальным идентификатором
      operationId: DeleteMarketOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_DeleteOrder_Market"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Delete"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws      ":                 # delete:limit
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Снятие лимитной заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        
        Запрос снимает лимитную заявку с указанным уникальным идентификатором
      operationId: DeleteLimitOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_DeleteOrder_Limit"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Delete"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws     ":                  # delete:stop
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Снятие стоп-заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        
        Запрос снимает стоп-заявку с указанным уникальным идентификатором
      operationId: DeleteStopOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_DeleteOrder_Stop"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Delete"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
  "/cws    ":                   # delete:stopLimit
    trace:
      tags:
        -  OrdersWebSocket
      summary: 'Снятие стоп-лимитной заявки'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/cws` (бой) или `wss://apidev.alor.ru/cws` (тест).
        
        Запрос снимает стоп-лимитную заявку с указанным уникальным идентификатором
      operationId: DeleteStopLimitOrder
      requestBody:
        $ref: "#/components/requestBodies/ws_cmd_DeleteOrder_StopLimit"
      responses: 
        '200':
          $ref: "#/components/responses/ws_Commands_200_Delete"
        '400':
          $ref: "#/components/responses/ws_Commands_400"
      deprecated: false
      security: []
      servers:
        - url: 'wss://apidev.alor.ru/cws'
          description: Тестовый контур
          variables: {}
        - url: 'wss://api.alor.ru/cws'
          description: Боевой контур
          variables: {}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT #Токен из OAuth
  parameters:
    # Header parameters
    header_X-ALOR-REQID:
      deprecated: true
      required: false
      name: X-ALOR-REQID
      in: header
      description: |
        Устаревшее поле, может быть удалено в дальнейших обновлениях. Используйте вместо него поле `X-REQID`.

        Уникальный идентификатор запроса.
      schema:
        type: string
        description: |
          Устаревшее поле, может быть удалено в дальнейших обновлениях. Используйте вместо него поле `X-REQID`.

          Уникальный идентификатор запроса.
      example: 9823-616stn
    header_X-REQID:
      deprecated: false
      required: true
      name: X-REQID
      in: header
      description: |
        Требуется уникальная случайная строка в качестве идентификатора запроса.
        Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора
      schema:
        type: string
        description: |
          Требуется уникальная случайная строка в качестве идентификатора запроса.
          Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора
      example: 9823-616stn
    # Path parameters
    path_Exchange_All:
      deprecated: false
      required: true
      name: exchange
      in: path
      description: |
        Биржа:
          * `MOEX` — Московская биржа
          * `SPBX` — СПБ Биржа
      schema:
        description: |
          Биржа:
            * `MOEX` — Московская биржа
            * `SPBX` — СПБ Биржа
        type: string
        enum:
          - MOEX
          - SPBX
    path_Exchange_MoexOnly:
      deprecated: false
      required: true
      name: exchange
      in: path
      description: |
        Биржа:
          * `MOEX` — Московская биржа
      schema:
        description: |
          Биржа:
            * `MOEX` — Московская биржа
        type: string
        enum:
          - MOEX
    path_Login:
      deprecated: false
      required: true
      name: login
      in: path
      description: 'Логин торгового аккаунта'
      schema:
        type: string
        description: 'Логин торгового аккаунта'
      example: P039004
    path_Market:
      deprecated: false
      required: true
      name: market
      in: path
      description: |
        Рынок на бирже:
          * `FORTS` — Срочный рынок Московской биржи
          * `FOND` — Фондовый рынок Московской биржи
          * `CURR` — Валютный рынок Московской биржи
          * `SPBX` — Рынок Санкт-Петербургской биржи
      schema:
        type: string
        description: |
          Рынок на бирже:
            * `FORTS` — Срочный рынок Московской биржи
            * `FOND` — Фондовый рынок Московской биржи
            * `CURR` — Валютный рынок Московской биржи
            * `SPBX` — Рынок Санкт-Петербургской биржи
        enum:
          - FORTS
          - FOND
          - CURR
          - SPBX
      example: FOND
    path_OrderId:
      deprecated: false
      required: true
      name: orderId
      in: path
      description: 'Идентификатор заявки'
      style: simple
      schema:
        type: integer
        format: int64
        description: 'Идентификатор заявки'
      example: 93713183
    path_Portfolio_FOND:
      deprecated: false
      required: true
      name: portfolio
      in: path
      description: 'Идентификатор клиентского портфеля'
      schema:
        type: string
        description: 'Идентификатор клиентского портфеля'
      example: D39004
    path_Portfolio_FORTS:
      deprecated: false
      required: true
      name: portfolio
      in: path
      description: 'Идентификатор клиентского портфеля'
      schema:
        type: string
        description: 'Идентификатор клиентского портфеля'
      example: 7500GHC
    path_StopOrderId:
      deprecated: false
      required: true
      name: stopOrderId
      in: path
      description: 'Идентификатор заявки'
      schema:
        type: integer
        format: int64
        description: 'Идентификатор заявки'
      example: 18946369167
    path_Symbol:
      deprecated: false
      required: true
      name: symbol
      in: path
      description: 'Тикер (Код финансового инструмента)'
      style: simple
      schema:
        type: string
        description: 'Тикер (Код финансового инструмента)'
      example: SBER
    path_Symbols:
      deprecated: false
      required: true
      name: symbols
      in: path
      description: 'Принимает несколько пар биржа-тикер. Пары отделены запятыми. Биржа и тикер разделены двоеточием'
      schema:
        type: string
        description: 'Принимает несколько пар биржа-тикер. Пары отделены запятыми. Биржа и тикер разделены двоеточием'
        example: MOEX:SBER,MOEX:GAZP,SPBX:AAPL
      example: MOEX:SBER,MOEX:GAZP,SPBX:AAPL
    path_TradeServerCode:
      deprecated: true
      required: true
      name: tradeServerCode
      in: path
      description: |
        Устаревшее поле, может быть удалено в дальнейших обновлениях.
        
        Код торгового сервера
      schema:
        type: string
        description: |
          Устаревшее поле, может быть удалено в дальнейших обновлениях.
          
          Код торгового сервера
      example: TRADE
    # Query parameters
    query_AllowedPortfolios_Optional:
      deprecated: false
      required: false
      name: allowedPortfolios
      in: query
      description: |
        Список портфелей, на которые распространяется действие Access токена. Значение всегда является массивом вида `["portfolio1", "portfolio2"]`
      schema:
        type: string
        description: |
          Список портфелей, на которые распространяется действие Access токена. Значение всегда является массивом вида `["portfolio1", "portfolio2"]`
      example: '["portfolio1", "portfolio2"]'
    query_CfiCode_Optional:
      deprecated: false
      required: false
      name: cficode
      in: query
      description: 'Код финансового инструмента по стандарту ISO 10962'
      schema:
        type: string
        description: 'Код финансового инструмента по стандарту ISO 10962'
      example: EXXXXX
    query_CountBack_Optional:
      deprecated: false
      required: false
      name: countBack
      in: query
      description: |
        Минимальное количество свечей, которое сервер должен вернуть в ответ на запрос. Поведение зависит от наличия свечей в заданном временном диапазоне (`from` → `to`):
        * Количество свечей в диапазоне больше значения `countBack` — параметр игнорируется, возвращаются все свечи заданного диапазона;
        * Количество свечей меньше — значение `from` принудительно сдвигается до тех пор, пока не будет выгружено столько свечей, сколько указано в значении `countBack`.
        * Количество свечей за всю историю инструмента меньше указанного значения — возвращаются все доступные свечи.
      schema:
        type: integer
        format: int32
        description: |
          Минимальное количество свечей, которое сервер должен вернуть в ответ на запрос. Поведение зависит от наличия свечей в заданном временном диапазоне (`from` → `to`):
          * Количество свечей в диапазоне больше значения `countBack` — параметр игнорируется, возвращаются все свечи заданного диапазона;
          * Количество свечей меньше — значение `from` принудительно сдвигается до тех пор, пока не будет выгружено столько свечей, сколько указано в значении `countBack`.
          * Количество свечей за всю историю инструмента меньше указанного значения — возвращаются все доступные свечи.
      example: 10
    query_DateFrom_Optional:
      deprecated: false
      required: false
      name: dateFrom
      in: query
      description: |
        Начало отрезка времени, за которое требуется получить историю сделок.

        Может содержать:
        * только дату (например, `2021-10-13`)
        * дату и время в формате UTC (например, `2021-10-13T09:00:00.0000000Z`)

        Если точное время не указано, к значению даты будет автоматически добавляться `00:00:00.0000000Z`.
      schema:
        type: string
        format: date
        description: |
          Начало отрезка времени, за которое требуется получить историю сделок.

          Может содержать:
          * только дату (например, `2021-10-13`)
          * дату и время в формате UTC (например, `2021-10-13T09:00:00.0000000Z`)

          Если точное время не указано, к значению даты будет автоматически добавляться `00:00:00.0000000Z`.
      example: '2021-10-13T09:00:00.0000000Z'
    query_DateFromSec_Optional:
      deprecated: false
      required: false
      name: from
      in: query
      description: 'Начало отрезка времени (UTC) для фильтра результатов в формате Unix Time Seconds'
      schema:
        type: integer
        format: int64
        description: 'Начало отрезка времени (UTC) для фильтра результатов в формате Unix Time Seconds'
      example: 1593430060
    query_DateFromSec_Required:
      deprecated: false
      required: true
      name: from
      in: query
      description: 'Начало отрезка времени (UTC) в формате Unix Time Seconds'
      schema:
        type: integer
        format: int64
        description: 'Начало отрезка времени (UTC) в формате Unix Time Seconds'
      example: 1549000661
    query_DateToSec_Optional:
      deprecated: false
      required: false
      name: to
      in: query
      description: 'Конец отрезка времени (UTC) для фильтра результатов в формате Unix Time Seconds'
      schema:
        type: integer
        format: int64
        description: 'Конец отрезка времени (UTC) для фильтра результатов в формате Unix Time Seconds'
      example: 1593430560
    query_DateToSec_Required:
      deprecated: false
      required: true
      name: to
      in: query
      description: 'Конец отрезка времени (UTC) в формате Unix Time Seconds'
      schema:
        type: integer
        format: int64
        description: 'Конец отрезка времени (UTC) в формате Unix Time Seconds'
      example: 1550060661
    query_Depth_Optional:
      deprecated: false
      required: false
      name: depth
      in: query
      description: 'Глубина стакана. Стандартное значение — 20 (20х20), максимальное — 50 (50х50)'
      schema:
        type: integer
        format: int32
        description: 'Глубина стакана. Стандартное значение — 20 (20х20), максимальное — 50 (50х50)'
        maximum: 50
        default: 20
        minimum: 1
      example: 5
    query_Descending_Optional:
      deprecated: false
      required: false
      name: descending
      in: query
      description: 'Флаг обратной сортировки выдачи'
      schema:
        type: boolean
        description: 'Флаг обратной сортировки выдачи'
      example: false
    query_Exchange_All_Optional:
      deprecated: false
      required: false
      name: exchange
      in: query
      description: |
        Биржа:
          * `MOEX` — Московская биржа
          * `SPBX` — СПБ Биржа
      schema:
        description: |
          Биржа:
            * `MOEX` — Московская биржа
            * `SPBX` — СПБ Биржа
        type: string
        enum:
          - MOEX
          - SPBX
    query_Exchange_All_Required:
      deprecated: false
      required: true
      name: exchange
      in: query
      description: |
        Биржа:
          * `MOEX` — Московская биржа
          * `SPBX` — СПБ Биржа
      schema:
        description: |
          Биржа:
            * `MOEX` — Московская биржа
            * `SPBX` — СПБ Биржа
        type: string
        enum:
          - MOEX
          - SPBX
    query_Exchange_MoexOnly_Required:
      deprecated: false
      required: true
      name: exchange
      in: query
      description: |
        Биржа:
          * `MOEX` — Московская биржа
      schema:
        description: |
          Биржа:
            * `MOEX` — Московская биржа
        type: string
        enum:
          - MOEX
    query_Format_Optional:
      deprecated: false
      required: false
      name: format
      in: query
      description: |
        Формат возвращаемого сервером JSON-объекта:
        * `Simple` — оригинальный формат данных. Поддерживает устаревшие параметры для обеспечения обратной совместимости
        * `Slim` — облегчённый формат данных для быстрой передачи сообщений. Не поддерживает устаревшие параметры
        * `Heavy` — полный формат данных, развивающийся и дополняющийся новыми полями. Не поддерживает устаревшие параметры

        От формата объекта также зависит минимальное значение параметра `frequency` для WebSocket-подписок.
      schema:
        type: string
        description: |
          Формат возвращаемого сервером JSON-объекта:
          * `Simple` — оригинальный формат данных. Поддерживает устаревшие параметры для обеспечения обратной совместимости
          * `Slim` — облегчённый формат данных для быстрой передачи сообщений. Не поддерживает устаревшие параметры
          * `Heavy` — полный формат данных, развивающийся и дополняющийся новыми полями. Не поддерживает устаревшие параметры

          От формата объекта также зависит минимальное значение параметра `frequency` для WebSocket-подписок.
        enum:
          - Simple
          - Slim
          - Heavy
      example: Simple
    query_FromId_Optional:
      deprecated: false
      required: false
      name: from
      in: query
      description: 'Начальный номер сделки для фильтра результатов'
      schema:
        type: integer
        format: int64
        description: 'Начальный номер сделки для фильтра результатов'
      example: 93713183
    query_FromIdAllTrades_Optional:
      deprecated: false
      required: false
      name: fromId
      in: query
      description: 'Начальный номер сделки для фильтра результатов'
      style: form
      explode: true
      schema:
        type: integer
        format: int64
        description: 'Начальный номер сделки для фильтра результатов'
      example: 7796897024
    query_IncludeNonBaseBoards_Optional:
      deprecated: false
      required: false
      name: includeNonBaseBoards
      in: query
      description: 'Флаг выгрузки инструментов для всех режимов торгов, включая отличающиеся от установленного для инструмента значения параметра `primary_board`'
      schema:
        type: boolean
        description: 'Флаг выгрузки инструментов для всех режимов торгов, включая отличающиеся от установленного для инструмента значения параметра `primary_board`'
      example: false
    query_IncludeOld_Optional:
      deprecated: false
      required: false
      name: includeOld
      in: query
      description: 'Флаг загрузки устаревших инструментов'
      schema:
        type: boolean
        description: 'Флаг загрузки устаревших инструментов'
      example: false
    query_IncludeVirtualTrades_Optional:
      deprecated: false
      required: false
      name: includeVirtualTrades
      in: query
      description: 'Флаг загрузки виртуальных (индикативных) сделок, полученных из заявок на питерской бирже'
      schema:
        type: boolean
        description: 'Флаг загрузки виртуальных (индикативных) сделок, полученных из заявок на питерской бирже'
      example: false
    query_InstrumentGroup_Optional:
      deprecated: false
      required: false
      name: instrumentGroup
      in: query
      description: |
        Код режима торгов (Борд):
        * Для Московской Биржи список кодов доступен в [таблице](https://fs.moex.com/files/3864/)
        * Для Биржи СПБ всегда `SPBX`
      schema:
        type: string
        description: |
          Код режима торгов (Борд):
          * Для Московской Биржи список кодов доступен в [таблице](https://fs.moex.com/files/3864/)
          * Для Биржи СПБ всегда `SPBX`
      example: TQBR
    query_JsonResponse_Optional:
      deprecated: false
      required: false
      name: jsonResponse
      in: query
      description: 'Ответ в формате JSON. В виде отдельного параметра для обратной совместимости'
      schema:
        type: boolean
        description: 'Ответ в формате JSON. В виде отдельного параметра для обратной совместимости'
      example: false
    query_Limit_Optional:
      deprecated: false
      required: false
      name: limit
      in: query
      description: 'Ограничение на количество выдаваемых результатов поиска'
      schema:
        type: integer
        format: int32
        description: 'Ограничение на количество выдаваемых результатов поиска'
      example: 3
    query_LimitDefault25_Optional:
      deprecated: false
      required: false
      name: limit
      in: query
      description: 'Ограничение на количество выдаваемых результатов поиска'
      schema:
        type: integer
        format: int32
        description: 'Ограничение на количество выдаваемых результатов поиска'
        default: 25
      example: 100
    query_LimitMax1000_Optional:
      deprecated: false
      required: false
      name: limit
      in: query
      description: 'Количество возвращаемых записей (1-1000)'
      schema:
        type: integer
        format: int32
        description: 'Количество возвращаемых записей (1-1000)'
        maximum: 1000
      example: 50
    query_LimitMax50000_Required:
      deprecated: false
      required: true
      name: limit
      in: query
      description: 'Ограничение на количество выдаваемых результатов поиска (1-50000)'
      schema:
        type: integer
        format: int32
        description: 'Ограничение на количество выдаваемых результатов поиска (1-50000)'
        minimum: 1
        maximum: 50000
      example: 100
    query_Market_Optional:
      deprecated: false
      required: false
      name: market
      in: query
      description: |
        Рынок на бирже:
          * `FORTS` — Срочный рынок Московской биржи
          * `FOND` — Фондовый рынок Московской биржи
          * `CURR` — Валютный рынок Московской биржи
          * `SPBX` — Рынок Санкт-Петербургской биржи
      schema:
        type: string
        description: |
          Рынок на бирже:
            * `FORTS` — Срочный рынок Московской биржи
            * `FOND` — Фондовый рынок Московской биржи
            * `CURR` — Валютный рынок Московской биржи
            * `SPBX` — Рынок Санкт-Петербургской биржи
        enum:
          - FORTS
          - FOND
          - CURR
          - SPBX
      example: FOND
    query_Offset_Optional:
      deprecated: false
      required: false
      name: offset
      in: query
      description: 'Смещение начала выборки (для пагинации)'
      schema:
        type: integer
        format: int32
        description: 'Смещение начала выборки (для пагинации)'
      example: 10
    query_OrderByTradeDate_Optional:
      deprecated: false
      required: false
      name: orderByTradeDate
      in: query
      description: |
        Флаг сортировки возвращаемых результатов по дате совершения сделки.

        При использовании единой денежной позиции должен быть `true` для корректной сортировки результатов. Сделки, относящиеся к разным рынкам, могут иметь разную длину идентификатора, в связи с чем стандартная сортировка по ID может возвращать результаты в некорректной последовательности
      schema:
        type: boolean
        description: |
          Флаг сортировки возвращаемых результатов по дате совершения сделки.

          При использовании единой денежной позиции должен быть `true` для корректной сортировки результатов. Сделки, относящиеся к разным рынкам, могут иметь разную длину идентификатора, в связи с чем стандартная сортировка по ID может возвращать результаты в некорректной последовательности
      example: false
    query_Portfolio_FOND_Required:
      deprecated: false
      required: true
      name: portfolio
      in: query
      description: 'Идентификатор клиентского портфеля'
      schema:
        type: string
        description: 'Идентификатор клиентского портфеля'
      example: D39004
    query_Portfolio_FORTS_Required:
      deprecated: false
      required: true
      name: portfolio
      in: query
      description: 'Идентификатор клиентского портфеля'
      schema:
        type: string
        description: 'Идентификатор клиентского портфеля'
      example: 7500GHC
    query_PriceFrom_Optional:
      deprecated: false
      required: false
      name: priceFrom
      in: query
      description: 'Нижняя граница цены, по которой была совершена сделка'
      schema:
        type: number
        format: decimal
        description: 'Нижняя граница цены, по которой была совершена сделка'
      example: 178.20
    query_PriceTo_Optional:
      deprecated: false
      required: false
      name: priceTo
      in: query
      description: 'Верхняя граница цены, по которой была совершена сделка'
      schema:
        type: number
        format: decimal
        description: 'Верхняя граница цены, по которой была совершена сделка'
      example: 179.10
    query_QtyFrom_Optional:
      deprecated: false
      required: false
      name: qtyFrom
      in: query
      description: 'Нижняя граница объёма сделки в лотах'
      schema:
        type: integer
        format: int32
        description: 'Нижняя граница объёма сделки в лотах'
      example: 10
    query_QtyTo_Optional:
      deprecated: false
      required: false
      name: qtyTo
      in: query
      description: 'Верхняя граница объёма сделки в лотах'
      schema:
        type: integer
        format: int32
        description: 'Верхняя граница объёма сделки в лотах'
      example: 100
    query_RiskCategoryId_Required:
      deprecated: false
      required: true
      name: riskCategoryId
      in: query
      description: 'Id вашей (или той которая интересует) категории риска. Можно получить из запроса информации по клиенту или через кабинет клиента'
      schema:
        type: integer
        format: int32
        description: 'Id вашей (или той которая интересует) категории риска. Можно получить из запроса информации по клиенту или через кабинет клиента'
      example: 1
    query_Search_Optional:
      deprecated: false
      required: false
      name: search
      in: query
      description: 'Часть Тикера\кода инструмента, ISIN для облигаций. Вернет все совпадения, начинающиеся с '
      schema:
        type: string
        description: 'Часть Тикера\кода инструмента, ISIN для облигаций. Вернет все совпадения, начинающиеся с '
      example: SBER
    query_Sector_Optional:
      deprecated: false
      required: false
      name: sector
      in: query
      description: |
        Рынок на бирже:
          * `FORTS` — Срочный рынок
          * `FOND` — Фондовый рынок
          * `CURR` — Валютный рынок
      schema:
        type: string
        description: |
          Рынок на бирже:
            * `FORTS` — Срочный рынок
            * `FOND` — Фондовый рынок
            * `CURR` — Валютный рынок
        enum:
          - FORTS
          - FOND
          - CURR
      example: FOND
    query_Side_Optional:
      deprecated: false
      required: false
      name: side
      in: query
      description: |
        Направление сделки:
          * `buy` — Купля
          * `sell` — Продажа
      schema:
        type: string
        description: |
          Направление сделки:
            * `buy` — Купля
            * `sell` — Продажа
        enum:
          - buy
          - sell
      example: buy
    query_SplitAdjust_Optional:
      deprecated: false
      required: false
      name: splitAdjust
      in: query
      description: |
        Флаг коррекции исторических свечей инструмента с учётом сплитов, консолидаций и прочих факторов.
        * `true` — свечи пересчитываются с учётом дополнительных факторов;
        * `false` — свечи отображаются как есть, т.е. без корректировки.
      schema:
        $ref: '#/components/schemas/flag_SplitAdjust'
      example: true
    query_Stop_Required:
      deprecated: false
      required: true
      name: stop
      in: query
      description: 'Является стоп-заявкой?'
      schema:
        type: boolean
        description: 'Является стоп-заявкой?'
      example: false
    query_Stop_Optional:
      deprecated: false
      required: false
      name: stop
      in: query
      description: 'Является стоп-заявкой?'
      schema:
        type: boolean
        description: 'Является стоп-заявкой?'
      example: false
    query_Symbol_Required:
      deprecated: false
      required: true
      name: symbol
      in: query
      description: 'Тикер (Код финансового инструмента)'
      style: form
      schema:
        type: string
        description: 'Тикер (Код финансового инструмента)'
      example: SBER
    query_Take_Optional:
      deprecated: false
      required: false
      name: take
      in: query
      description: 'Количество загружаемых элементов'
      schema:
        type: integer
        format: int32
        description: 'Количество загружаемых элементов'
      example: 10
    query_Ticker_Optional:
      deprecated: false
      required: false
      name: ticker
      in: query
      description: 'Тикер\код инструмента, ISIN для облигаций'
      schema:
        type: string
        description: 'Тикер\код инструмента, ISIN для облигаций'
      example: SBER
    query_TickerNamedQuery_Optional:
      deprecated: false
      required: false
      name: query
      in: query
      description: 'Тикер (Код финансового инструмента)'
      schema:
        type: string
        description: 'Тикер (Код финансового инструмента)'
      example: SBER
    query_TimeFrame_Required:
      deprecated: false
      required: true
      name: tf
      in: query
      description: |
        Длительность таймфрейма. В качестве значения можно указать точное количество секунд или код таймфрейма:
        * `15` — 15 секунд
        * `60` — 60 секунд или 1 минута
        * `3600` — 3600 секунд или 1 час
        * `D` — сутки (соответствует значению 86400)
        * `W` — неделя (соответствует значению 604800)
        * `M` — месяц (соответствует значению 2592000)
        * `Y` — год (соответствует значению 31536000)
      schema:
        type: string
        description: |
          Длительность таймфрейма. В качестве значения можно указать точное количество секунд или код таймфрейма:
          * `15` — 15 секунд
          * `60` — 60 секунд или 1 минута
          * `3600` — 3600 секунд или 1 час
          * `D` — сутки (соответствует значению 86400)
          * `W` — неделя (соответствует значению 604800)
          * `M` — месяц (соответствует значению 2592000)
          * `Y` — год (соответствует значению 31536000)
      example: '60' #8fb58820-d933-46c4-98be-83343ebd728d
    query_ToId_Optional:
      deprecated: false
      required: false
      name: toId
      in: query
      description: 'Конечный номер сделки для фильтра результатов'
      schema:
        type: integer
        format: int64
        description: 'Конечный номер сделки для фильтра результатов'
      example: 7796897280
    query_Token_Optional:
      deprecated: false
      required: false
      name: token
      in: query
      description: 'Refresh token из кабинета разработчика. Используется для создания JWT токена'
      schema:
        type: string
        description: 'Refresh token из кабинета разработчика. Используется для создания JWT токена'
    query_Untraded_Optional:
      deprecated: false
      required: false
      name: untraded
      in: query
      description: |
        Флаг, определяющий порядок получения данных о свечах для указанного инструмента:
          * `true` — запрос данных по точному тикеру инструмента. Возвращает данные по любому инструменту, включая устаревшие и экспирированные;
          * `false` — более гибкий поиск инструментов, позволяющий использовать в качестве `symbol` как тикер инструмента, так и его короткое наименование (`shortName`).
        В редких случаях поиск устаревших инструментов с `untraded=false` может завершиться ошибкой. В этом случае попробуйте повторить поиск по точному тикеру инструмента со значением `untraded=true`.
      schema:
        type: boolean
        description: |
          Флаг, определяющий порядок получения данных о свечах для указанного инструмента:
            * `true` — запрос данных по точному тикеру инструмента. Возвращает данные по любому инструменту, включая устаревшие и экспирированные;
            * `false` — более гибкий поиск инструментов, позволяющий использовать в качестве `symbol` как тикер инструмента, так и его короткое наименование (`shortName`).
          В редких случаях поиск устаревших инструментов с `untraded=false` может завершиться ошибкой. В этом случае попробуйте повторить поиск по точному тикеру инструмента со значением `untraded=true`.
      example: false
    query_WithoutCurrency_Optional:
      deprecated: false
      required: false
      name: withoutCurrency
      in: query
      description: 'Исключить из ответа все денежные инструменты'
      schema:
        type: boolean
        description: 'Исключить из ответа все денежные инструменты'
      example: false
    query_WithRepo_Optional:
      deprecated: false
      required: false
      name: withRepo
      in: query
      description: 'Флаг отображения заявок с РЕПО'
      schema:
        type: boolean
        description: 'Флаг отображения заявок с РЕПО'
      example: false
  schemas:
    # Reusable components for schemas
    ## Basic arrays used in complex schemas
    array_AllowedPortfolios:
      type: array
      description: |
        Список портфелей, на которые распространяется действие Access токена. Значение всегда является массивом вида `["portfolio1", "portfolio2"]`
      items:
        $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
    array_Asks_Simple:
      type: array
      description: 'Список асков в биржевом стакане'
      items:
        $ref: '#/components/schemas/response_OrderBook_Ask_Simple'
    array_Asks_Slim:
      type: array
      description: 'Список асков в биржевом стакане'
      items:
        $ref: '#/components/schemas/response_OrderBook_Ask_Slim'
    array_Bids_Simple:
      type: array
      description: 'Список бидов в биржевом стакане'
      items:
        $ref: '#/components/schemas/response_OrderBook_Bid_Simple'
    array_Bids_Slim:
      type: array
      description: 'Список бидов в биржевом стакане'
      items:
        $ref: '#/components/schemas/response_OrderBook_Bid_Slim'
    array_BuyingPowerByCurrency_Simple:
      type: array
      description: 'Массив данных о покупательной способности'
      items:
        $ref: '#/components/schemas/object_BuyingPowerByCurrency_Simple'
    array_BuyingPowerByCurrency_Slim:
      type: array
      description: 'Массив данных о покупательной способности'
      items:
        $ref: '#/components/schemas/object_BuyingPowerByCurrency_Slim'
    ## Basic fields used in complex schemas
    field_AccruedInterest:
      type: number
      format: decimal
      example: 0
      description: 'Начислено (НКД)'
    field_AccruedInterest_Deprecated:
      type: number
      format: decimal
      deprecated: true
      example: 0
      description: 'Начислено (НКД)'
    field_AskPrice:
      type: number
      format: decimal
      example: 171.87
      description: 'Цена лота в ближайшем аске в стакане'
    field_AskVolumeClosest:
      type: integer
      format: int64
      example: 107
      description: 'Количество лотов в ближайшем аске в стакане по данным с биржи'
    field_AskVolumeTotal:
      type: integer
      format: int64
      example: 2183
      description: 'Суммарное количество лотов во всех асках в биржевом стакане'
    field_BidPrice:
      type: number
      format: decimal
      example: 171.82
      description: 'Цена лота в ближайшем биде в стакане'
    field_BidVolumeClosest:
      type: integer
      format: int64
      example: 5
      description: 'Количество лотов в ближайшем биде в стакане по данным с биржи'
    field_BidVolumeTotal:
      type: integer
      format: int64
      example: 2716
      description: 'Суммарное количество лотов во всех бидах в биржевом стакане'
    field_Board:
      type: string
      example: TQBR
      description: |
        Код режима торгов (Борд):
        * Для Московской Биржи список кодов доступен в [таблице](https://fs.moex.com/files/3864/)
        * Для Биржи СПБ всегда `SPBX`
    field_BrokerSymbol:
      type: string
      example: MOEX:SBER
      description: 'Пара Биржа:Тикер'
    field_Budget:
      type: number
      format: decimal
      example: 100000
      description: |
        Бюджет заявки на покупку инструмента. Используется для расчёта возможного количества лотов инструмента, доступных для приобретения.

        Бюджет не может превышать фактическое значение денежных позиций портфеля. Если заданное значение больше доступного количества денежных средств, при расчёте заявки будут использоваться имеющиеся средства без учёта позиций других инструментов.
        
        Если в теле запроса задано поле `price`, его значение будет использовано при расчёте заявки в качестве цены инструмента. В противном случае будет использована рыночная цена инструмента, действовавшая в момент отправки запроса.

        Одновременное использование в запросе параметров `budget` и `lotQuantity` бессмысленно — указание бюджета позволяет рассчитать максимальное количество лотов инструмента, доступных к покупке за заданную сумму, тогда как `lotQuantity` явно указывает желаемое количество лотов.
    field_BuyingPower:
      type: number
      format: decimal
      example: 452404.2194509200
      description: 'Покупательная способность'
    field_BuyingPowerAtMorning:
      type: number
      format: decimal
      example: 439844.15
      description: 'Покупательная способность на утро'
    field_CalculationTime:
      type: string
      format: date-time
      example: '2025-04-19T10:17:54.8283796Z'
      description: 'Дата и время расчёта показателей риска в формате UTC'
    field_CandlestickTimeNext:
      type: integer
      format: int64
      example: 1532944860
      nullable: true
      description: 'Время (UTC) начала следующей свечи'
    field_CandlestickTimePrevious:
      type: integer
      format: int64
      example: 1532944860
      nullable: true
      description: 'Время (UTC) начала предыдущей свечи'
    field_CFICode:
      type: string
      example: ESXXXX
      description: 'Тип ценной бумаги согласно стандарту ISO 10962'
    field_ChangePercent:
      type: number
      format: decimal
      example: -1.76
      description: 'Относительное изменение цены'
    field_ChangeValue:
      type: number
      format: decimal
      example: -3.08
      description: 'Разность цены и цены предыдущего закрытия'
    field_ClientType:
      type: string
      example: StandardRisk
      description: |
        Тип клиента:
          * `LowRisk` — Клиент с начальным уровнем риска (КНУР)
          * `StandardRisk` — Клиент со стандартным уровнем риска (КСУР)
          * `HighRisk` — Клиент с повышенным уровнем риска (КПУР)
          * `Special` —  Клиент с особым уровнем риска (КОУР)
      enum:
        - LowRisk
        - StandardRisk
        - HighRisk
        - Special
    field_CollectedFee:
      type: number
      format: decimal
      example: 651717.0
      description: 'Списанный сбор'
    field_Commission:
      type: number
      format: decimal
      example: 24.21
      nullable: true
      description: Суммарная комиссия (null для Срочного рынка)
    field_ComplexProductCategory:
      type: string
      example: 2
      description: |
        Требуемая категория для осуществления торговли инструментом:
          * `Unknown` — Неизвестная категория
          * `` — Нет ограничений
          * `0` — Инструменты, предназначенные для КИ
          * `1` — Необеспеченные сделки
          * `2` — Производные финансовые инструменты
          * `3` — Договоры репо, требующие тестирования
          * `4` — Структурные облигации, не предназначенные для КИ
          * `5` — ЗПИФ, не предназначенные для КИ
          * `6` — Облигации российских эмитентов без рейтинга
          * `7` — Облигации иностранных эмитентов, исполнение по которым обеспечивается за счет юридического лица РФ без рейтинга
          * `8` — Облигации со структурным доходом
          * `9` — Акции, не включенные в котировальные списки
          * `10` — Иностранные акции, требующие проведения тестирования
          * `11` — Паи/акции ETF, не включенные в котировальные списки и допущенные к организованным торгам при наличии договора организатора торговли с "ответственным" лицом
          * `12` — Паи/акции ETF, не включенные в котировальные списки и допущенные к организованным торгам при отсутствии договора организатора торговли с "ответственным" лицом
          * `13` — Облигации российских или иностранных эмитентов, конвертируемых в иные ценные бумаги
          * `14` — Облигации российских эмитентов с "юрисдикцией" выпуска вне рамок разрешенных
          * `15` — Облигации иностранных эмитентов с "юрисдикцией" эмитента вне рамок разрешенных
          * `16` — Резерв
          * `17` — Все бумаги, не попадающие под тесты из Базового стандарта. Ценные бумаги без листинга на Санкт-Петербургской бирже, возникшие в результате корпоративных событий
      enum:
        - Unknown
        - null
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
      nullable: true
    field_CurrencyCode:
      type: string
      example: RUB
      nullable: true
      description: 'Код валюты расчетов'
    field_CustomComment:
      type: string
      example: Первая заявка
      description: 'Пользовательский комментарий к заявке. Максимальная длина комментария — 100 символов'
    field_Depth:
      type: integer
      format: int32
      description: 'Глубина стакана. Стандартное значение — 20 (20х20), максимальное — 50 (50х50)'
      default: 20
      example: 10
      maximum: 50
      minimum: 1
    field_Description:
      type: string
      example: Сбербанк России ПАО ао
      description: 'Короткое описание на русском языке'
    field_ExchangeCode:
      description: |
        Биржа:
          * `MOEX` — Московская биржа
          * `SPBX` — СПБ Биржа
      type: string
      enum:
        - MOEX
        - SPBX
    field_ExecutionCondition:
      type: string
      example: more
      description: |
        Условие срабатывания стоп/стоп-лимитной заявки:
          * `more` — Цена срабатывания больше текущей цены
          * `less` — Цена срабатывания меньше текущей цены
          * `moreorequal` — Цена срабатывания больше или равна текущей цене
          * `lessorequal` — Цена срабатывания меньше или равна текущей цене
      enum:
        - more
        - less
        - moreorequal
        - lessorequal
    field_ExecutionPeriod:
      type: string
      example: oneday
      description: |
        Условие выставления заявки с учётом возможности её исполнения:
          * `oneday` — Исполнение в течение одного торгового дня. При истечении этого срока неисполненный остаток снимается
          * `immediateorcancel` — Исполнение немедленно на весь доступный объём встречных заявок. Неисполненный остаток отменяется
          * `fillorkill` — Исполнение немедленно на весь указанный объём без остатка. Если исполнение без остатка невозможно — заявка отменяется
          * `attheclose` — Исполнение в момент закрытия торгов по достигнутой на тот момент рыночной цене. Только для SPBX (на MOEX автоматически меняется на `fillorkill`) и только для рыночных заявок, т.к. цена лота зависит от рыночной цены на момент исполнения
          * `goodtillcancelled` — Исполнение в течение максимально доступного периода на бирже. Например, в течение года для MOEX. Только для срочного рынка
          * `bookorcancel` — [Пассивная заявка](https://www.moex.com/s3424). Выставляется на биржу только если её цена или величина спреда хуже аналогичных показателей встречных заявок
      default: oneday
      enum:
        - oneday
        - immediateorcancel
        - fillorkill
        - attheclose
        - goodtillcancelled
        - bookorcancel
    field_ExecutionPolicy:
      type: string
      description: |
        Тип группы заявок:
         * `OnExecuteOrCancel` — Группа отменяется при отмене/выполнении/редактировании любой заявки
         * `IgnoreCancel` — Группа отменяется при исполнении заявки. При отмене или редактировании заявки — заявка удаляется из группы, группа остаётся активной
         * `TriggerBracketOrders` — Группа, содержащая одну лимитную заявку и несколько стопов. Для создания группы, стоп-заявки должны быть созданны с флагом 'Activate = false'. После выполнения лимитной заявки, активируются стоп-заявки 
      enum:
        - OnExecuteOrCancel
        - IgnoreCancel
        - TriggerBracketOrders
    field_FaceValue:
      type: number
      format: decimal
      example: 5.0
      description: |
        Показатель, значение которого варьируется в зависимости от выбранного рынка:
        * Для фондового рынка — номинальная стоимость единицы финансового инструмента
        * Для срочного рынка — размер одного лота
        * Для валютного рынка — количество валюты лота, за которое указывается цена в котировках
    field_FilledQtyBatch:
      type: number
      format: decimal
      example: 1
      description: 'Количество исполненных (лоты)'
    field_FilledQtyUnits:
      type: number
      format: decimal
      example: 10
      description: 'Количество исполненных (штуки)'
    field_FixedSpotDiscount:
      type: number
      format: decimal
      example: 0
      description: 'Только для опционов. Сумма дисконтированных значений объявленных денежных потоков'
    field_Format:
      type: string
      description: |
        Формат возвращаемого сервером JSON-объекта:
        * `Simple` — оригинальный формат данных. Поддерживает устаревшие параметры для обеспечения обратной совместимости
        * `Slim` — облегчённый формат данных для быстрой передачи сообщений. Не поддерживает устаревшие параметры
        * `Heavy` — полный формат данных, развивающийся и дополняющийся новыми полями. Не поддерживает устаревшие параметры

        От формата объекта также зависит минимальное значение параметра `frequency` для WebSocket-подписок.
      default: Simple
      enum:
        - Simple
        - Slim
        - Heavy
    field_Frequency:
      type: integer
      format: int32
      description: |
        Частота (интервал) передачи данных сервером. Сервер вернёт последние данные по запросу за тот временной интервал, который указан в качестве значения параметра. Пример: биржа передаёт данные каждые 2 мс, но, при значении параметра 10 мс, сервер вернёт только последнее значение, отбросив предыдущие.
        
        Минимальное значение параметра зависит от выбранного формата возвращаемого JSON-объекта:
        * `Simple` — 25 миллисекунд
        * `Slim` — 10 миллисекунд
        * `Heavy` — 500 миллисекунд
      default: 175
    field_FuturesNameFull:
      type: string
      example: Фьючерсный контракт SBRF-12.23
      description: 'Полное название фьючерса'
    field_FuturesNameShort:
      type: string
      description: 'Имя фьючерса'
      example: SBRF-12.23
    field_FuturesTicker:
      type: string
      example: SRZ3
      description: 'Тикер фьючерсного контракта'
    field_GuidCws:
      type: string
      example: c328fcf1-e495-408a-a0ed-e20f95d6b813
      description: 'Клиентский идентификатор команды. В качестве идентификатора требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то команда не будет исполнена повторно.'
    field_GuidWs:
      type: string
      example: c328fcf1-e495-408a-a0ed-e20f95d6b813
      description: 'Клиентский идентификатор подписки. В качестве идентификатора требуется уникальная случайная строка. Значение в возвращаемых в рамках подписки сообщениях равно значению поля `guid`, переданному при отправке команды.'
    field_HTTPCode:
      type: integer
      format: int32
      example: 200
      description: 'HTTP-код ответа'
    field_HTTPCode200:
      allOf:
        - $ref: '#/components/schemas/field_HTTPCode'
        - example: 200
    field_HTTPCode400:
      allOf:
        - $ref: '#/components/schemas/field_HTTPCode'
        - example: 400
    field_HTTPCode401:
      allOf:
        - $ref: '#/components/schemas/field_HTTPCode'
        - example: 401
    field_IdentifierAccount:
      type: string
      example: L01-00000F00
      description: 'Идентификатор аккаунта пользователя'
    field_IdentifierLogin:
      type: string
      example: 'P039004'
      description: 'Логин торгового аккаунта'
    field_IdentifierOrderCommon:
      type: string
      example: '18995978560'
      description: 'Уникальный идентификатор заявки'
    field_IdentifierOrderExchange:
      type: string
      example: 425242362
      description: 'Уникальный идентификатор биржевой заявки'
    field_IdentifierOrderGroup:
      type: string
      format: uuid
      description: 'Идентификатор группы заявок'
      example: eafb19d6-c578-4afe-aa95-d528c4531031
    field_IdentifierOrderStop:
      type: string
      example: 347498
      description: 'Уникальный идентификатор стоп-заявки'
    field_IdentifierPortfolio_FOND:
      type: string
      example: D39004
      description: 'Уникальный идентификатор клиентского портфеля'
    field_IdentifierPortfolio_FORTS:
      allOf:
        - $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        - example: 7500GHC
    field_IdentifierRiskCategory:
      type: integer
      format: int32
      example: 2
      description: |
        Категория риска.
    field_IdentifierTradeAnonymous:
      type: integer
      format: int64
      example: 159
      description: 'Уникальный идентификатор сделки'
    field_IdentifierTradePortfolio:
      type: string
      example: 159
      description: 'Уникальный идентификатор сделки'
    field_InstrumentType:
      type: string
      example: CS
      description: |
        Тип финансового инструмента.

        Возможные значения для MOEX:
        * `FOR` — Валюта
        * `CS` — Обыкновенные акции компании
        * `PS` — Привилегированные акции компании
        * `MF` — Паевой инвестиционный фонд
        * `RDR` — Российская депозитарная расписка
        * `EUSOV` — Облигация федерального займа
        * `MUNI` — Муниципальная облигация
        * `CORP` — Корпоративная облигация
        * `Фьючерсный контракт X` — Фьючерсный контракт с указанием базового актива
        * `Марж. амер. Call X` — Опцион с указанием основных параметров контракта
        
        От SPBX возвращается только тип `t`, присваиваемый всем доступным инструментам.
      nullable: true
    field_ISIN:
      type: string
      nullable: true
      example: RU000A1014L8
      description: 'Идентификатор инструмента согласно стандарту ISO 6166'
    field_LotSize:
      type: number
      format: decimal
      example: 10.0
      description: 'Размер лота'
    field_LotValue:
      type: number
      format: decimal
      example: 26908
      description: 'Суммарная стоимость лота'
    field_MarginAgregatedByPositions:
      type: number
      format: decimal
      example: 199313.0
      description: 'Сагрегированная вармаржа по текущим позициям'
    field_MarginCleared:
      type: number
      format: decimal
      example: 651717.0
      description: 'Вариационная маржа, списанная или полученная в пром. клиринг'
    field_MarginCorrected:
      type: number
      format: decimal
      example: 15752.115
      description: 'Скорректированная маржа'
    field_MarginIndicative:
      type: number
      format: decimal
      example: 1720.32124
      description: |
        Индикативная вариационная маржа с учетом текущего индикативного курса валют, руб (рассчитывается аналогично текущей индикативной ВМ, учитывает в т.ч. вар.маржу по закрытым позициям)
    field_MarginInitial:
      type: number
      format: decimal
      example: 15752.115
      description: 'Начальная маржа'
    field_MarginInitialRiskHighLong:
      type: number
      format: decimal
      example: 988.40
      description: 'Только для деривативов. Базовое гарантийное обеспечение для клиента с повышенным уровнем риска (КПУР) при открытии длинной позиции'
    field_MarginInitialRiskHighShort:
      type: number
      format: decimal
      example: 1006.20
      description: 'Только для деривативов. Базовое гарантийное обеспечение для клиента с повышенным уровнем риска (КПУР) при открытии короткой позиции'
    field_MarginInitialRiskLowLong:
      type: number
      format: decimal
      example: 2401.94
      description: 'Только для деривативов. Базовое гарантийное обеспечение для клиента с начальным уровнем риска (КНУР) при открытии длинной позиции'
    field_MarginInitialRiskLowShort:
      type: number
      format: decimal
      example: 2446.65
      description: 'Только для деривативов. Базовое гарантийное обеспечение для клиента с начальным уровнем риска (КНУР) при открытии короткой позиции'
    field_MarginInitialRiskSpecialLong:
      type: number
      format: decimal
      example: 988.40
      description: 'Только для деривативов. Базовое гарантийное обеспечение для клиента с особым уровнем риска (КОУР) при открытии длинной позиции'
    field_MarginInitialRiskSpecialShort:
      type: number
      format: decimal
      example: 1006.20
      description: 'Только для деривативов. Базовое гарантийное обеспечение для клиента с особым уровнем риска (КОУР) при открытии короткой позиции'
    field_MarginInitialRiskStandardLong:
      type: number
      format: decimal
      example: 1799.81
      description: 'Только для деривативов. Базовое гарантийное обеспечение для клиента со стандартным уровнем риска (КСУР) при открытии длинной позиции'
    field_MarginInitialRiskStandardShort:
      type: number
      format: decimal
      example: 1833.06
      description: 'Только для деривативов. Базовое гарантийное обеспечение для клиента со стандартным уровнем риска (КСУР) при открытии короткой позиции'
    field_MarginMinimal:
      type: number
      format: decimal
      example: 65177.0575
      description: 'Минимальная маржа'
    field_MarginTotal:
      type: number
      format: decimal
      example: 552061.0
      description: 'Вариационная маржа, рассчитанная по формуле `VmCurrentPositions` + `VmInterCl`'
    field_MarketCode:
      type: string
      description: |
        Рынок:
        * `FORTS` — Срочный рынок Московской биржи
        * `FOND` — Фондовый рынок Московской биржи
        * `CURR` — Валютный рынок Московской биржи
        * `SPBX` — Рынок Санкт-Петербургской биржи
      example: 'FOND'
    field_Message:
      type: string
      description: 'Текстовое описание ответа сервера'
    field_MoneyAmountPledged:
      type: number
      format: decimal
      example: 552061.0
      description: 'Сумма залогов, дисконтированных в рубли'
    field_MoneyAmountTotalCurrent:
      type: number
      format: decimal
      example: 199313.0
      description: 'Общее количество рублей и дисконтированных в рубли залогов'
    field_MoneyAmountTotalInitial:
      type: number
      format: decimal
      example: 651717.0
      description: 'Общее количество рублей и дисконтированных в рубли залогов на начало сессии'
    field_MoneyBalance_Deprecated:
      type: number
      format: decimal
      example: 1.93
      description: 'Сальдо денежных торговых переводов за текущую сессию (поле будет удалено в будущих обновлениях)'
      deprecated: true
    field_MoneyBlocked:
      type: number
      format: decimal
      example: 12560.0
      description: 'Средства, заблокированные под ГО'
    field_MoneyChanges:
      type: number
      format: decimal
      example: 525.21
      description: 'Изменения'
    field_MoneyCommission:
      type: number
      format: decimal
      example: 2
      description: 'Комиссия (в рублях)'
    field_MoneyCurrent:
      type: number
      format: decimal
      example: 25614.89
      description: 'Количество средств'
    field_MoneyFree:
      type: number
      format: decimal
      example: 525.25
      description: 'Свободные средства'
    field_MoneyFreeCalculated:
      type: number
      format: decimal
      example: 452404.0
      description: 'Свободные средства. Сумма рублей и залогов, дисконтированных в рубли, доступная для открытия позиций. (`MoneyFree` = `MoneyAmount` + `VmInterCl` – `MoneyBlocked` – `VmReserve` – `Fee`)'
    field_MoneyOpen:
      type: number
      format: decimal
      example: 45536.11
      description: 'Средства на момент открытия'
    field_MoneyUsed:
      type: number
      format: decimal
      example: 45536.11
      description: 'Количество использованных'
    field_NetOptionValue:
      type: number
      format: decimal
      example: 0
      description: |
        Сумма произведений теоретических цен опционов, рассчитанных по итогам текущей клиринговой сессии, и объемов соответствующих позиций с учетом знака. Опционы на акции будут использованы в качестве обеспечения по портфелю. Величина NetOptionValue влияет на объём свободных средств и дисконтируется за счет требований к ГО
    field_OpenInterest:
      type: integer
      format: int64
      example: 523920
      description: 'Открытый интерес (open interest). Если не поддерживается инструментом — значение `0` или `null`'
    field_OrderTypeAll:
      type: string
      description: |
        Тип заявки:
         * `Market` — Рыночная заявка
         * `Limit` — Лимитная заявка
         * `Stop` — Стоп-заявка
         * `StopLimit` — Стоп-лимит заявка
      enum:
        - Limit
        - Market
        - Stop
        - StopLimit
    field_OrderTypeLimitMarket:
      type: string
      example: market
      description: |
        Тип заявки:
          * `limit` — Лимитная заявка
          * `market` — Рыночная заявка
      enum:
        - limit
        - market
    field_OrderTypeStopLimit:
      type: string
      example: stop
      description: |
        Тип заявки:
          * `stop` — Стоп-заявка
          * `stoplimit` — Стоп-лимитная заявка
      enum:
        - stop
        - stoplimit
    field_PortfolioEvaluationValue:
      type: number
      format: decimal
      example: 646270.9
      description: 'Оценка ликвидного портфеля'
    field_PortfolioLiquidationValue:
      type: number
      format: decimal
      example: 646270.9
      description: 'Оценка портфеля'
    field_PreviousClosePrice:
      type: number
      format: decimal
      example: 174.9
      description: 'Цена предыдущего закрытия'
    field_PriceAverage:
      type: number
      format: decimal
      example: 16.6
      description: 'Средняя цена'
    field_PriceBuyEstimated:
      type: number
      format: decimal
      example: 142.52
      description: |
        Цена за один лот инструмента, по которой рассчитана возможная заявка.

        API вернёт числовое значение только при использовании параметра `budget` в теле запроса. В противном случае значение поля будет равно `null`.
        
        Возвращаемое значение зависит от наличия параметра `price` в теле запроса:
        * Если задан — возвращается его значение;
        * Если не задан — возвращается действующая на момент отправки запроса рыночная цена лота.
    field_PriceClose:
      type: number
      format: decimal
      example: 210.83
      description: 'Цена при закрытии'
    field_PriceCommon:
      type: number
      format: decimal
      example: 142.52
      description: 'Цена'
    field_PriceLast:
      type: number
      format: decimal
      example: 171.82
      description: 'Последняя цена'
    field_PriceLimit:
      type: number
      format: decimal
      example: 208.6
      description: 'Цена выставляемой биржевой заявки'
    field_PriceMarginBuy:
      type: number
      format: decimal
      example: 6707.86
      description: 'Цена маржинальной покупки (заемные средства). Только срочный рынок'
    field_PriceMarginSell:
      type: number
      format: decimal
      example: 6707.86
      description: 'Цена маржинальной продажи (заемные средства). Только срочный рынок'
    field_PriceMarginSyntetic:
      type: number
      format: decimal
      example: 6707.86
      description: 'Базовое гарантийное обеспечение под одну покрытую позицию. Только для опционов.'
    field_PriceMaximum:
      type: number
      format: decimal
      example: 176.02
      description: 'Максимальная цена'
    field_PriceMinimalStep:
      type: number
      format: decimal
      example: 0.01
      description: 'Минимальный шаг цены'
    field_PriceMinimalStepByCurrency:
      type: number
      format: decimal
      example: 6.30202
      description: 'Минимальный шаг цены, выраженный в рублях'
    field_PriceMinimum:
      type: number
      format: decimal
      example: 170.33
      description: 'Минимальная цена'
    field_PriceMultiplier:
      type: number
      format: decimal
      example: 1
      description: |
        Множитель цены, использующийся при расчёте объёма
    field_PriceOpen:
      type: number
      format: decimal
      example: 210.82
      description: 'Цена при открытии'
    field_PriceShownUnits:
      type: number
      format: decimal
      example: 1
      description: 'Количество единиц валютного инструмента, за которое указывается курс в котировках. Для прочих инструментов значение всегда равно 1'
    field_PriceStrike:
      type: number
      format: decimal
      example: 12000
      description: 'Только для опционов. Цена Страйк (Цена исполнения опциона)'
    field_PriceTheoretical:
      type: number
      format: decimal
      example: 0.0
      description: 'Теоретическая цена опциона'
    field_PriceTheoreticalLimited:
      type: number
      format: decimal
      example: 0.0
      description: 'Теоретическая цена опциона с учетом лимитов'
    field_PriceTrigger:
      type: number
      format: decimal
      example: 191.33
      description: 'Условная цена (цена срабатывания)'
    field_ProfitDailyRate:
      type: number
      format: decimal
      example: 1.93
      description: 'Норма прибыли, %'
    field_ProfitDailyValue:
      type: number
      format: decimal
      example: 12560.0
      description: 'Прибыль за сегодня'
    field_ProfitRate:
      type: number
      format: decimal
      example: -354.7
      description: 'Прибыль в процентах'
    field_ProfitValue:
      type: number
      format: decimal
      example: -354.7
      description: 'Прибыль'
    field_ProjectedSpotDiscount:
      type: number
      format: decimal
      example: 0
      description: 'Только для опционов. Сумма дисконтированных значений прогнозных денежных потоков'
    field_ProtectingSeconds:
      type: integer
      format: int32
      minimum: 1
      example: 15
      maximum: 300
      description: 'Защитное время. Непрерывный период времени в секундах, в течение которого рыночная цена инструмента должна соответствовать указанным в заявке цене и условию срабатывания (`triggerPrice`/`stopPrice` и `condition`). Предназначено для защиты условных заявок от срабатывания при краткосрочных колебаниях цены.'
    field_QuantityBatchAgregated:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество (лоты)'
    field_QuantityBatchAgregatedOpen:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество на момент открытия (начала торгов) (лоты)'
    field_QuantityBatchAgregatedT0:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество T0 (лоты)'
    field_QuantityBatchAgregatedT1:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество T1 (лоты)'
    field_QuantityBatchAgregatedT2:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество T2 (лоты)'
    field_QuantityBatchAgregatedTFuture:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество TFuture (лоты)'
    field_QuantityBatchCommon:
      type: integer
      format: int32
      example: 1
      description: 'Количество (лоты)'
    field_QuantityBatchVisibleFilled:
      type: integer
      format: int32
      example: 0
      description: 'Исполненная часть айсберг-заявки (лоты)'
    field_QuantityBatchVisibleTotal:
      type: integer
      format: int32
      example: 0
      description: 'Видимая постоянная часть айсберг-заявки (лоты)'
    field_QuantityCommon:
      type: integer
      format: int32
      example: 1
      description: 'Количество'
    field_QuantityFilled_Deprecated:
      type: number
      format: decimal
      example: 10
      description: 'Количество исполненных (штуки)'
      deprecated: true
    field_QuantityFixed:
      type: integer
      format: int32
      example: 100
      description: 'Видимая постоянная часть айсберг-заявки в лотах. Указывается при создании заявки, может быть впоследствии изменена только в заявках на фондовом и валютном рынках'
    field_QuantityUnitsAgregatedOpen:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество на момент открытия (начала торгов) (штуки)'
    field_QuantityUnitsAgregatedT0:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество T0 (штуки)'
    field_QuantityUnitsAgregatedT1:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество T1 (штуки)'
    field_QuantityUnitsAgregatedT2:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество T2 (штуки)'
    field_QuantityUnitsAgregatedTFuture:
      type: number
      format: decimal
      example: 20.0
      description: 'Агрегированное количество TFuture'
    field_QuantityUnitsDec:
      type: number
      format: decimal
      example: 20.0
      description: 'Количество (штуки)'
    field_QuantityUnitsInt:
      type: integer
      format: int32
      example: 1
      description: 'Количество (штуки)'
    field_QuantityUnitsOpen:
      type: number
      format: decimal
      example: 30.0
      description: 'Количество открытых позиций на момент открытия (начала торгов)'
    field_QuantityUnitsVisibleFilled:
      type: integer
      format: int32
      example: 0
      description: 'Исполненная часть айсберг-заявки (штуки)'
    field_QuantityUnitsVisibleTotal:
      type: integer
      format: int32
      example: 0
      description: 'Видимая постоянная часть айсберг-заявки (штуки)'
    field_QuantityVariance:
      type: integer
      format: int32
      example: 2
      description: 'Амплитуда отклонения (в % от постоянной части) случайной надбавки к видимой части айсберг-заявки, указанная при создании лимитной заявки. Только срочный рынок'
    field_RatingCommon:
      type: number
      format: decimal
      example: 195613886
      description: 'Рейтинг инструмента, основанный на объёме торгов за предыдущий день. Используется для сортировки инструментов'
    field_RatingMargin:
      type: number
      format: decimal
      example: 89.3428
      description: 'Отношение цены маржинальной покупки к цене последней сделки. Только срочный рынок'
    field_RepoAccount:
      type: string
      example: MB0014100002
      description: 'Торговый счет, в счет которого заключена данная сделка'
    field_RepoExternalReference:
      type: string
      example: MB0014100002
      description: |
        Поле-примечание, используется для обратной связи с внешними
        системами. Например, идентификатор пользователя внешней системы,
        поставившего заявку.
    field_RepoRate:
      type: number
      format: decimal
      example: 23.45
      description: Цена репо в процентах годовых.
    field_RepoTermination:
      type: integer
      format: int32
      example: 2
      description: |
        Срок РЕПО — промежуток времени, выраженный в календарных днях,
        между датами исполнения первой и второй частей сделки РЕПО.
    field_RepoTradeType:
      type: string
      example: Расчетная по операции своп
      description: Описание типа сделки
    field_RepoValue:
      type: number
      format: decimal
      example: 46
      description: Объем сделки, выраженный в валюте расчетов
    field_RepoYield:
      type: number
      format: decimal
      example: 23.45
      description: Доходность, рассчитанная по цене сделки
    field_RiskBeforeForcePositionClosing:
      type: number
      format: decimal
      example: 552061.0
      description: 'Риск до закрытия'
    field_RiskCoverageRatioOne:
      type: number
      format: decimal
      example: 630518.785
      description: 'НПР1'
    field_RiskCoverageRatioTwo:
      type: number
      format: decimal
      example: 638394.8425
      description: 'НПР2'
    field_RiskPosition:
      type: number
      format: decimal
      example: 0
      description: |
        Текущий оперативный риск. Дополнительная величина, несущая прогнозную функцию и отвечающая на вопрос «какое будет ГО, если клиринг прямо сейчас». Не используется при расчёте НПР
    field_RiskStatus:
      type: string
      example: Ok
      description: |
        Статус клиента согласно его уровня риска, рассчитанного на основе показателей НПР1 и НПР2. Определяет возможность ведения маржинальной торговли:
        * `Ok` — уровень риска в норме. Доступны любые операции с маржинальными позициями, включая открытие новых (НПР1≥0, НПР2≥0);
        * `Demand` — уровень, требующий повышенного внимания к рискам. Доступны операции по уменьшению и закрытию существующих маржинальных позиций, но запрещено открытие новых (НПР1<0, НПР2≥0);
        * `ToClose` — критический уровень риска, при котором открытые позиции могут быть принудительно закрыты (НПР1<0, НПР2<0).
      enum:
        - Ok
        - Demand
        - ToClose
    field_RoundTo:
      type: integer
      format: int32
      example: 2
      description: 'Количество знаков после запятой в цене'
    field_SessionStatus:
      type: string
      example: open
      description: 'Текущий статус торгов'
    field_SettlementDate:
      type: string
      format: date-time
      example: '2024-12-31T23:59:59.9990000Z'
      description: 'Дата исполнения обязательств по сделке в формате UTC'
    field_Sgnr:
      type: integer
      format: int32
      nullable: true
      example: 0
      description: |
        Зависимость производного инструмента к его базовому активу, указанному в поле `underlyingAsset`:
        * `1` — прямая зависимость;
        * `0` — нет зависимости (например, при запросе данных о непроизводном инструменте);
        * `-1` — обратная зависимость.
    field_ShortName:
      type: string
      example: Сбербанк
      description: 'Короткое наименование инструмента'
    field_SideCommon:
      type: string
      example: buy
      description: |
        Направление сделки:
          * `buy` — Купля
          * `sell` — Продажа
      enum:
        - buy
        - sell
    field_SideOption:
      type: string
      example: 'Call'
      description: |
        Только для опционов. Сторона опциона:
          * `Call` — Купля
          * `Put` — Продажа
    field_StatusOrderGroup:
      type: string
      description: |
        Статус группы заявок
         * `Active` — группа активна 
         * `Filled` — группа исполнена торговой системой
         * `Canceled` — группа отменена пользователем
      enum:
        - Active
        - Filled
        - Canceled
    field_StatusOrder:
      type: string
      example: filled
      description: |
        Статус исполнения:
          * `working` — На исполнении
          * `filled` — Исполнена
          * `canceled` — Отменена
          * `rejected` — Отклонена
      enum:
        - working
        - filled
        - canceled
        - rejected
    field_Ticker:
      type: string
      example: SBER
      description: 'Тикер (Код финансового инструмента)'
    field_TickerUndefined:
      type: string
      example: SBER
      description: 'Тикер (Код финансового инструмента). "[N/A]" используется, если `symbol` не определен'
    field_TimeEndUnix:
      type: integer
      format: int64
      example: 1590094740
      description: 'Срок действия (UTC) в формате Unix Time Seconds'
    field_TimeEndUTC:
      type: string
      format: date-time
      example: '2020-06-16T23:59:59.9990000Z'
      description: 'Дата и время завершения (UTC)'
    field_TimeLastPriceUnix:
      type: integer
      format: int64
      example: 1610982677
      description: 'Временная метка в формате Unix time seconds для значения поля `last_price`'
    field_TimeOptionExpirationUTC:
      type: string
      format: date-time
      example: '2024-03-20T00:00:00.0000000'
      description: 'Только для опционов. Срок действия опциона (UTC)'
    field_TimeOrderBookEntryUnixMS:
      type: integer
      format: int64
      example: 1610982677578
      description: 'Временная метка (UTC) сообщения о состоянии биржевого стакана в формате Unix Time Milliseconds'
    field_TimeOrderGroupClosedAt:
      type: string
      format: date-time
      nullable: true
      description: 'Время выполнения/отмены группы заявок'
    field_TimeOrderGroupCreatedAt:
      type: string
      format: date-time
      nullable: false
      description: 'Время создания группы заявок'
    field_TimeTransitionUTC:
      type: string
      format: date-time
      example: '2020-06-16T23:59:59.9990000Z'
      description: 'Дата и время выставления (UTC)'
    field_TimeUnixSeconds:
      type: integer
      format: int64
      example: 1620220020
      description: 'Время (UTC) (Unix time seconds)'
    field_TimeUnixSeconds_Deprecated:
      type: number
      format: decimal
      example: 1610982677
      description: 'Deprecated. Устаревшее поле, будет удалено в будущих обновлениях. Вместо этого поля используйте поле `ms_timestamp`'
      deprecated: true
    field_TimeUnixMilliseconds:
      type: integer
      format: int64
      example: 1610982677578
      description: 'Время (UTC) в формате Unix Time Milliseconds'
    field_TimeUpdateUTC:
      type: string
      format: date-time
      example: '2020-06-16T23:59:59.9990000Z'
      description: 'Дата и время изменения статуса заявки (UTC)'
    field_TokenAccess:
      type: string
      example: eyJhbGciOiJ...
      description: |
        JWT токен для авторизации запросов к API
    field_TokenRefresh:
      type: string
      example: c29...635
      description: |
        Refresh token из кабинета разработчика. Используется для создания JWT токена
    field_TotalEntries:
      type: integer
      format: int32
      example: 23
      description: 'Количество записей'
    field_TradingStatusCode:
      type: integer
      format: int32
      example: 17
      description: |
        Торговый статус инструмента:
          * `18` — Нет торгов / торги закрыты
          * `118` — Период открытия
          * `103` — Период закрытия
          * `2` — Перерыв в торгах
          * `17` — Нормальный период торгов
          * `102` — Аукцион закрытия
          * `106` — Аукцион крупных пакетов
          * `107` — Дискретный аукцион
          * `119` — Аукцион открытия
          * `120` — Период торгов по цене аукциона закрытия
    field_TradingStatusInfo:
      type: string
      example: нормальный период торгов
      description: 'Описание торгового статуса инструмента'
      nullable: true
    field_TriggeringError:
      type: string
      description: "Причина отмены стоп-заявки"
      example: "Цена не кратна минимальному шагу цены."
    field_UnderlyingSymbol:
      type: string
      example: 'VB12000BC4'
      description: 'Только для опционов. Краткий код опциона'
    field_UnrealisedPlDaily:
      type: number
      format: decimal
      example: 1.92
      description: 'Дневная неисполненная прибыль или убыток по открытым позициям в валюте расчётов. Отображает разницу между ценой позиции на момент открытия текущей торговой сессии и её текущей ценой'
    field_UnrealisedPlTotal:
      type: number
      format: decimal
      example: 7.962
      description: 'Суммарная неисполненаня прибыль или убыток по открытым позициям в валюте расчётов. Отображает разницу между ценой позиции в момент открытия и её текущей ценой'
    field_Volatility:
      type: number
      format: decimal
      example: 0.0
      description: 'Волатильность опциона. Для прочих инструментов значение 0'
    field_VolumeByPriceAverage:
      type: number
      format: decimal
      example: 38767080
      description: 'Объём позиции в валюте расчётов, определённый по средней цене лота (`avgPrice`/`pxavg`)'
    field_VolumeByPriceCurrent:
      type: number
      format: decimal
      example: 38798790
      description: 'Объём позиции в валюте расчётов, определённый по текущей цене лота'
    field_VolumeByPriceTrade:
      type: number
      format: decimal
      example: 134.92
      description: 'Объём сделки в валюте расчётов, определённый по действовавшей на момент заключения цене лота'
    field_VolumeGeneralDecimal:
      type: number
      format: decimal
      example: 38767080
      description: 'Объём'
    field_VolumeGeneralLong:
      type: integer
      format: int64
      example: 13544356235
      description: 'Объём'
    field_VolumeNullable:
      type: number
      format: decimal
      nullable: true
      example: 2086.3
      description: 'Объем, для рыночных заявок — null'
    field_WSOperationCodeCommand:
      type: string
      description: |
        Код операции для управления заявками (/cws):
          * `authorize` — Авторизовать соединение
          * `create:limit` — Создать лимитную заявку
          * `create:market` — Создать рыночную заявку
          * `create:stop` — Создать стоп-заявку
          * `create:stopLimit` — Создать стоп-лимитную заявку
          * `delete:limit` — Отменить лимитную заявку
          * `delete:market` — Отменить рыночную заявку
          * `delete:stop` — Отменить стоп-заявку
          * `delete:stopLimit` — Отменить стоп-лимитную заявку
          * `update:limit` — Изменить лимитную заявку
          * `update:market` — Изменить рыночную заявку
          * `update:stop` — Изменить стоп-заявку
          * `update:stopLimit` — Изменить стоп-лимитную заявку
      enum:
        - authorize
        - create:limit
        - create:market
        - create:stop
        - create:stopLimit
        - delete:limit
        - delete:market
        - delete:stop
        - delete:stopLimit
        - update:limit
        - update:market
        - update:stop
        - update:stopLimit
    field_WSOperationCodeSubscription:
      type: string
      description: |
        Код операции для управления подписками (/ws):
          * `AllTradesGetAndSubscribe` — Все сделки
          * `BarsGetAndSubscribe` — История цен (свечи)
          * `InstrumentsGetAndSubscribeV2` — Изменения в информации об инструменте
          * `OrderBookGetAndSubscribe` — Биржевой стакан
          * `OrdersGetAndSubscribeV2` — Биржевые заявки выбранного портфеля
          * `PositionsGetAndSubscribeV2` — Текущие позиции портфеля в деньгах и инструментах
          * `QuotesSubscribe` — Котировки
          * `RisksGetAndSubscribe` — Портфельные риски
          * `SpectraRisksGetAndSubscribe` — Риски срочного рынка (FORTS)
          * `StopOrdersGetAndSubscribe` — Устаревшее значение, может быть удалено в будущих обновлениях. Используйте код `StopOrdersGetAndSubscribeV2`. Стоп-заявки выбранного портфеля
          * `StopOrdersGetAndSubscribeV2` — Стоп-заявки выбранного портфеля
          * `SummariesGetAndSubscribeV2` — Сводная информация по портфелю
          * `TradesGetAndSubscribeV2` — Сделки выбранного портфеля
          * `unsubscribe` — Отмена действующей подписки
      enum:
        - AllTradesGetAndSubscribe
        - BarsGetAndSubscribe
        - InstrumentsGetAndSubscribeV2
        - OrderBookGetAndSubscribe
        - OrdersGetAndSubscribeV2
        - PositionsGetAndSubscribeV2
        - QuotesSubscribe
        - RisksGetAndSubscribe
        - SpectraRisksGetAndSubscribe
        - StopOrdersGetAndSubscribe
        - StopOrdersGetAndSubscribeV2
        - SummariesGetAndSubscribeV2
        - TradesGetAndSubscribeV2
        - unsubscribe
    field_Yield_Common:
      type: number
      format: decimal
      nullable: true
      example: null
      description: 'Доходность, рассчитанная по цене сделки'
    field_Yield_Bond:
      type: number
      format: decimal
      nullable: true
      example: null
      description: 'Только для облигаций. Доходность облигации'
    ## Basic flags used in complex schemas
    flag_ActivateOrder:
      type: boolean
      default: true
      description: |
        Флаг указывает, создать активную заявку, или не активную.
        Не активная заявка отображается в системе, но не участвует в процессе выставления на биржу, пока не станет активной.
        Данный флаг необходим при создании группы заявок с типом 'TriggerBracketOrders'
      example: true
    flag_AllowMargin:
      type: boolean
      default: false
      example: false
      description: |
        Флаг, подтверждающий согласие клиента с начальным уровнем риска (КНУР) на выставление заявки с потенциальной непокрытой позицией.

        Должен быть `true`:
        * При любом выставлении или изменении биржевых заявок на срочном рынке, в том числе для закрытия ранее открытых позиций
        * При выставлении или изменении биржевых заявок на фондовом и валютном рынках, если в результате откроется новая непокрытая позиция или увеличится минус по существующей
        * При выставлении или изменении условных заявок независимо от выбранного рынка

        Может быть `false` или не указан в запросе, если:
        * Клиенту присвоен другой уровень риска
        * Подключена услуга 100% обеспечения
    flag_CheckDuplicates:
      type: boolean
      example: true
      description: 'Флаг, отвечающий за проверку уникальности команд. По умолчанию включен. При отключении ускоряет прием заявки.'
    flag_CountLimitOrders:
      type: boolean
      description: Учитывать ли лимитные заявки при расчете
      default: false
      nullable: false
    flag_Currency:
      type: boolean
      example: false
      description: '`True` для валютных остатков (денег), `false` — для торговых инструментов'
    flag_ForbiddenPositions:
      type: boolean
      example: false
      description: 'Имеются ли запретные позиции'
    flag_Limits:
      type: boolean
      example: false
      description: 'Наличие установленных денежного и залогового лимитов'
    flag_NegativeQuantity:
      type: boolean
      example: false
      description: 'Имеются ли отрицательные количества'
    flag_SkipHistory:
      type: boolean
      example: false
      default: false
      description: |
        Флаг отсеивания исторических данных:
        * `true` — отображать только новые данные
        * `false` — отображать в том числе данные из истории
    flag_Snapshot:
      type: boolean
      example: false
      description: '`True` — для данных из "снепшота", то есть из истории. `False` — для новых событий'
    flag_Snapshot_Deprecated:
      type: boolean
      example: true
      description: 'Deprecated. Устаревшее поле, будет удалено в будущих обновлениях'
      deprecated: true
    flag_SplitAdjust:
      type: boolean
      example: true
      default: true
      description: |
        Флаг коррекции исторических свечей инструмента с учётом сплитов, консолидаций и прочих факторов.
        * `true` — свечи пересчитываются с учётом дополнительных факторов;
        * `false` — свечи отображаются как есть, т.е. без корректировки.
      deprecated: false
    flag_UnitedPortfolio:
      type: boolean
      example: false
      description: |
        Флаг применения Единой Денежной Позиции (ЕДП):
        * `true` — используется ЕДП
        * `false` — используются позиции портфеля определённой биржи
      deprecated: false
    ## Basic objects used in complex schemas
    object_BuyingPowerByCurrency_Simple:
      type: object
      description: 'Сведения о покупательной способности с указанием валюты расчётов'
      properties:
        currency:
          $ref: '#/components/schemas/field_CurrencyCode'
        buyingPower:
          $ref: '#/components/schemas/field_BuyingPower'
    object_BuyingPowerByCurrency_Slim:
      type: object
      description: 'Сведения о покупательной способности с указанием валюты расчётов'
      properties:
        cr:
          $ref: '#/components/schemas/field_CurrencyCode'
        bp:
          $ref: '#/components/schemas/field_BuyingPower'
    object_EstimateOrder:
      type: object
      description: 'Модель заявки для оценки стоимости и количества в лотах'
      properties:
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        ticker:
          $ref: '#/components/schemas/field_Ticker'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        lotQuantity:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        budget:
          $ref: '#/components/schemas/field_Budget'
        board:
          $ref: '#/components/schemas/field_Board'
        includeLimitOrders:
          $ref: '#/components/schemas/flag_CountLimitOrders'
      additionalProperties: false
    object_IcebergFields_Simple:
      type: object
      description: 'Специальные поля для сделок со скрытой частью'
      properties:
        creationFixedQuantity:
          $ref: '#/components/schemas/field_QuantityFixed'
        creationVarianceQuantity:
          $ref: '#/components/schemas/field_QuantityVariance'
        visibleQuantity:
          $ref: '#/components/schemas/field_QuantityUnitsVisibleTotal'
        visibleQuantityBatch:
          $ref: '#/components/schemas/field_QuantityBatchVisibleTotal'
        visibleFilledQuantity:
          $ref: '#/components/schemas/field_QuantityUnitsVisibleFilled'
        visibleFilledQuantityBatch:
          $ref: '#/components/schemas/field_QuantityBatchVisibleFilled'
    object_IcebergFields_Slim:
      type: object
      description: 'Специальные поля для сделок со скрытой частью'
      properties:
        cf:
          $ref: '#/components/schemas/field_QuantityFixed'
        cv:
          $ref: '#/components/schemas/field_QuantityVariance'
        v:
          $ref: '#/components/schemas/field_QuantityUnitsVisibleTotal'
        vb:
          $ref: '#/components/schemas/field_QuantityBatchVisibleTotal'
        vf:
          $ref: '#/components/schemas/field_QuantityUnitsVisibleFilled'
        vfb:
          $ref: '#/components/schemas/field_QuantityBatchVisibleFilled'
    object_InstrumentFieldsSymbolExchange:
      type: object
      description: 'Информация об инструменте и бирже'
      properties:
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
    object_InstrumentFieldsSymbolExchangeGroup:
      type: object
      description: 'Информация об инструменте и бирже'
      properties:
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        instrumentGroup:
          $ref: '#/components/schemas/field_Board'
    object_OrderGroupItem:
      type: object
      description: 'Сведения о заявке, добавляемой или состоящей в группе'
      properties:
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        orderId:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        type:
          $ref: '#/components/schemas/field_OrderTypeAll'
    object_OrderGroupItems:
      type: object
      description: 'Список номеров заявок, входящих в группу'
      properties:
        orderId:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
    object_RepoFields_Simple:
      type: object
      description: 'Специальные поля для сделок РЕПО'
      properties:
        repoRate:
          $ref: '#/components/schemas/field_RepoRate'
        extRef:
          $ref: '#/components/schemas/field_RepoExternalReference'
        repoTerm:
          $ref: '#/components/schemas/field_RepoTermination'
        account:
          $ref: '#/components/schemas/field_RepoAccount'
        tradeTypeInfo:
          $ref: '#/components/schemas/field_RepoTradeType'
        value:
          $ref: '#/components/schemas/field_RepoValue'
        yield:
          $ref: '#/components/schemas/field_RepoYield'
    object_RepoFields_Slim:
      type: object
      description: 'Специальные поля для сделок РЕПО'
      properties:
        r:
          $ref: '#/components/schemas/field_RepoRate'
        exr:
          $ref: '#/components/schemas/field_RepoExternalReference'
        tm:
          $ref: '#/components/schemas/field_RepoTermination'
        a:
          $ref: '#/components/schemas/field_RepoAccount'
        t:
          $ref: '#/components/schemas/field_RepoTradeType'
        v:
          $ref: '#/components/schemas/field_RepoValue'
        y:
          $ref: '#/components/schemas/field_RepoYield'
    object_UserPortfolioAndAccount:
      type: object
      description: 'Информация о пользователе'
      properties:
        account:
          $ref: '#/components/schemas/field_IdentifierAccount'
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
    object_UserPortfolioOnly:
      type: object
      description: 'Информация о пользователе'
      properties:
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
    ## Response bodies
    response_AllTrade_Heavy:
      type: object
      description: 'Характеристики совершённой ранее сделки в формате `Heavy`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierTradeAnonymous'
        symbol:
          $ref: '#/components/schemas/field_TickerUndefined'
        board:
          $ref: '#/components/schemas/field_Board'
        qty:
          $ref: '#/components/schemas/field_QuantityCommon'
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        time:
          $ref: '#/components/schemas/field_TimeEndUTC'
        timestamp:
          $ref: '#/components/schemas/field_TimeUnixMilliseconds'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        oi:
          $ref: '#/components/schemas/field_OpenInterest'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
    response_AllTrade_Simple:
      type: object
      description: 'Характеристики совершённой ранее сделки в формате `Simple`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierTradeAnonymous'
        orderno:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        symbol:
          $ref: '#/components/schemas/field_TickerUndefined'
        board:
          $ref: '#/components/schemas/field_Board'
        qty:
          $ref: '#/components/schemas/field_QuantityCommon'
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        time:
          $ref: '#/components/schemas/field_TimeEndUTC'
        timestamp:
          $ref: '#/components/schemas/field_TimeUnixMilliseconds'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        oi:
          $ref: '#/components/schemas/field_OpenInterest'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
    response_AllTrade_Slim:
      type: object
      description: 'Характеристики совершённой ранее сделки в формате `Slim`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierTradeAnonymous'
        sym:
          $ref: '#/components/schemas/field_TickerUndefined'
        bd:
          $ref: '#/components/schemas/field_Board'
        q:
          $ref: '#/components/schemas/field_QuantityCommon'
        px:
          $ref: '#/components/schemas/field_PriceCommon'
        t:
          $ref: '#/components/schemas/field_TimeUnixMilliseconds'
        s:
          $ref: '#/components/schemas/field_SideCommon'
        oi:
          $ref: '#/components/schemas/field_OpenInterest'
        h:
          $ref: '#/components/schemas/flag_Snapshot'
    response_AllTrades_Heavy:
      type: array
      description: 'Список всех совершённых за сегодня сделок с ценными бумагами в формате `Heavy`'
      items:
        $ref: '#/components/schemas/response_AllTrade_Heavy'
    response_AllTrades_Simple:
      type: array
      description: 'Список всех совершённых за сегодня сделок с ценными бумагами в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_AllTrade_Simple'
    response_AllTrades_Slim:
      type: array
      description: 'Список всех совершённых за сегодня сделок с ценными бумагами в формате `Slim`'
      items:
        $ref: '#/components/schemas/response_AllTrade_Slim'
    response_AllTradesHistory_Heavy:
      type: object
      description: 'Количество и список всех совершённых за указанный исторический период сделок в формате `Heavy`'
      properties:
        total:
          $ref: '#/components/schemas/field_TotalEntries'
        list:
          type: array
          description: 'Список сделок в формате `Heavy`'
          items:
            $ref: '#/components/schemas/response_AllTrade_Heavy'
    response_AllTradesHistory_Simple:
      type: object
      description: 'Количество и список всех совершённых за указанный исторический период сделок в формате `Simple`'
      properties:
        total:
          $ref: '#/components/schemas/field_TotalEntries'
        list:
          type: array
          description: 'Список сделок в формате `Simple`'
          items:
            $ref: '#/components/schemas/response_AllTrade_Simple'
    response_AllTradesHistory_Slim:
      type: object
      description: 'Количество и список всех совершённых за указанный исторический период сделок в формате `Slim`'
      properties:
        total:
          $ref: '#/components/schemas/field_TotalEntries'
        list:
          type: array
          description: 'Список сделок в формате `Slim`'
          items:
            $ref: '#/components/schemas/response_AllTrade_Slim'
    response_AvailableBoards:
      type: array
      description: 'Список доступных для инструмента режимов торгов'
      items:
        $ref: '#/components/schemas/field_Board'
    response_CurrencyPair:
      type: object
      description: 'Свойства валютной пары'
      properties:
        firstCode:
          type: string
          description: 'Базовая валюта'
          example: EUR
        secondCode:
          type: string
          description: 'Котируемая валюта'
          example: RUB
        symbolTom:
          type: string
          description: 'Код валютной пары как инструмента'
          example: EUR_RUB__TOM
    response_CurrencyPairs:
      type: array
      description: 'Список валютных пар'
      items:
        $ref: '#/components/schemas/response_CurrencyPair'
    response_EstimateOrder:
      type: object
      description: 'Результата оценки стоимости и количества в лотах для одной заявки'
      properties:
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        ticker:
          $ref: '#/components/schemas/field_Ticker'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        quantityToSell:
          type: number
          description: Количество в лотах к продаже с плечом
          format: decimal
        quantityToBuy:
          type: number
          description: Количество в лотах к покупке с плечом
          format: decimal
        notMarginQuantityToSell:
          type: number
          description: Количество в лотах к продаже без плеча
          format: decimal
        notMarginQuantityToBuy:
          type: number
          description: Количество в лотах к покупке без плеча
          format: decimal
        orderEvaluation:
          type: number
          description: Стоимость заявки
          format: decimal
        commission:
          type: number
          description: Комиссия
          format: decimal
        buyPrice:
          $ref: '#/components/schemas/field_PriceBuyEstimated'
        isUnitedPortfolio:
          $ref: '#/components/schemas/flag_UnitedPortfolio'
      additionalProperties: false
    response_EstimateOrders:
      type: array
      description: 'Результат оценки стоимости и количества в лотах для нескольких заявок'
      items:
        $ref: '#/components/schemas/response_EstimateOrder'
    response_FortsRisk_Heavy:
      type: object
      description: 'Риски срочного рынка в формате `Heavy`'
      properties:
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FORTS'
        moneyFree:
          $ref: '#/components/schemas/field_MoneyFreeCalculated'
        moneyBlocked:
          $ref: '#/components/schemas/field_MoneyBlocked'
        fee:
          $ref: '#/components/schemas/field_CollectedFee'
        moneyOld:
          $ref: '#/components/schemas/field_MoneyAmountTotalInitial'
        moneyAmount:
          $ref: '#/components/schemas/field_MoneyAmountTotalCurrent'
        moneyPledgeAmount:
          $ref: '#/components/schemas/field_MoneyAmountPledged'
        vmInterCl:
          $ref: '#/components/schemas/field_MarginCleared'
        vmCurrentPositions:
          $ref: '#/components/schemas/field_MarginAgregatedByPositions'
        varMargin:
          $ref: '#/components/schemas/field_MarginTotal'
        indicativeVarMargin:
          $ref: '#/components/schemas/field_MarginIndicative'
        netOptionValue:
          $ref: '#/components/schemas/field_NetOptionValue'
        posRisk:
          $ref: '#/components/schemas/field_RiskPosition'
        isLimitsSet:
          $ref: '#/components/schemas/flag_Limits'
    response_FortsRisk_Simple:
      type: object
      description: 'Риски срочного рынка в формате `Simple`'
      properties:
        balanceMoney:
          $ref: '#/components/schemas/field_MoneyBalance_Deprecated'
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FORTS'
        moneyFree:
          $ref: '#/components/schemas/field_MoneyFreeCalculated'
        moneyBlocked:
          $ref: '#/components/schemas/field_MoneyBlocked'
        fee:
          $ref: '#/components/schemas/field_CollectedFee'
        moneyOld:
          $ref: '#/components/schemas/field_MoneyAmountTotalInitial'
        moneyAmount:
          $ref: '#/components/schemas/field_MoneyAmountTotalCurrent'
        moneyPledgeAmount:
          $ref: '#/components/schemas/field_MoneyAmountPledged'
        vmInterCl:
          $ref: '#/components/schemas/field_MarginCleared'
        vmCurrentPositions:
          $ref: '#/components/schemas/field_MarginAgregatedByPositions'
        varMargin:
          $ref: '#/components/schemas/field_MarginTotal'
        indicativeVarMargin:
          $ref: '#/components/schemas/field_MarginIndicative'
        netOptionValue:
          $ref: '#/components/schemas/field_NetOptionValue'
        posRisk:
          $ref: '#/components/schemas/field_RiskPosition'
        isLimitsSet:
          $ref: '#/components/schemas/flag_Limits'
    response_FortsRisk_Slim:
      type: object
      description: 'Риски срочного рынка в формате `Slim`'
      properties:
        p:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FORTS'
        f:
          $ref: '#/components/schemas/field_MoneyFreeCalculated'
        b:
          $ref: '#/components/schemas/field_MoneyBlocked'
        fee:
          $ref: '#/components/schemas/field_CollectedFee'
        o:
          $ref: '#/components/schemas/field_MoneyAmountTotalInitial'
        a:
          $ref: '#/components/schemas/field_MoneyAmountTotalCurrent'
        pa:
          $ref: '#/components/schemas/field_MoneyAmountPledged'
        mgc:
          $ref: '#/components/schemas/field_MarginCleared'
        mgp:
          $ref: '#/components/schemas/field_MarginAgregatedByPositions'
        ivm:
          $ref: '#/components/schemas/field_MarginIndicative'
        nov:
          $ref: '#/components/schemas/field_NetOptionValue'
        pr:
          $ref: '#/components/schemas/field_RiskPosition'
        lim:
          $ref: '#/components/schemas/flag_Limits'
    response_Futures_Heavy:
      type: object
      description: 'Котировка по фьючерсу в формате `Heavy`'
      properties:
        symbol:
          $ref: '#/components/schemas/field_FuturesNameShort'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        description:
          $ref: '#/components/schemas/field_FuturesTicker'
        currency:
          $ref: '#/components/schemas/field_CurrencyCode'
        prevClosePrice:
          $ref: '#/components/schemas/field_PreviousClosePrice'
        lastPrice:
          $ref: '#/components/schemas/field_PriceLast'
        lastPriceTimestamp:
          $ref: '#/components/schemas/field_TimeLastPriceUnix'
        highPrice:
          $ref: '#/components/schemas/field_PriceMaximum'
        lowPrice:
          $ref: '#/components/schemas/field_PriceMinimum'
        accruedInterest:
          $ref: '#/components/schemas/field_AccruedInterest'
        volume:
          $ref: '#/components/schemas/field_VolumeNullable'
        openInterest:
          $ref: '#/components/schemas/field_OpenInterest'
        ask:
          $ref: '#/components/schemas/field_AskPrice'
        bid:
          $ref: '#/components/schemas/field_BidPrice'
        askVol:
          $ref: '#/components/schemas/field_AskVolumeClosest'
        bidVol:
          $ref: '#/components/schemas/field_BidVolumeClosest'
        obMsTimestamp:
          $ref: '#/components/schemas/field_TimeOrderBookEntryUnixMS'
        openPrice:
          $ref: '#/components/schemas/field_PriceOpen'
        yield:
          $ref: '#/components/schemas/field_Yield_Common'
        lotSize:
          $ref: '#/components/schemas/field_LotSize'
        lotValue:
          $ref: '#/components/schemas/field_LotValue'
        faceValue:
          $ref: '#/components/schemas/field_FaceValue'
        type:
          $ref: '#/components/schemas/field_FuturesNameFull'
        totalBidVol:
          $ref: '#/components/schemas/field_BidVolumeTotal'
        totalAskVol:
          $ref: '#/components/schemas/field_AskVolumeTotal'
        change:
          $ref: '#/components/schemas/field_ChangeValue'
        changePercent:
          $ref: '#/components/schemas/field_ChangePercent'
    response_Futures_Simple:
      type: object
      description: 'Котировка по фьючерсу в формате `Simple`'
      properties:
        symbol:
          $ref: '#/components/schemas/field_FuturesNameShort'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        description:
          $ref: '#/components/schemas/field_FuturesTicker'
        prev_close_price:
          $ref: '#/components/schemas/field_PreviousClosePrice'
        last_price:
          $ref: '#/components/schemas/field_PriceLast'
        last_price_timestamp:
          $ref: '#/components/schemas/field_TimeLastPriceUnix'
        high_price:
          $ref: '#/components/schemas/field_PriceMaximum'
        low_price:
          $ref: '#/components/schemas/field_PriceMinimum'
        accruedInt:
          $ref: '#/components/schemas/field_AccruedInterest'
        volume:
          $ref: '#/components/schemas/field_VolumeNullable'
        open_interest:
          $ref: '#/components/schemas/field_OpenInterest'
        ask:
          $ref: '#/components/schemas/field_AskPrice'
        bid:
          $ref: '#/components/schemas/field_BidPrice'
        ask_vol:
          $ref: '#/components/schemas/field_AskVolumeClosest'
        bid_vol:
          $ref: '#/components/schemas/field_BidVolumeClosest'
        ob_ms_timestamp:
          $ref: '#/components/schemas/field_TimeOrderBookEntryUnixMS'
        open_price:
          $ref: '#/components/schemas/field_PriceOpen'
        yield:
          $ref: '#/components/schemas/field_Yield_Common'
        lotsize:
          $ref: '#/components/schemas/field_LotSize'
        lotvalue:
          $ref: '#/components/schemas/field_LotValue'
        facevalue:
          $ref: '#/components/schemas/field_FaceValue'
        type:
          $ref: '#/components/schemas/field_FuturesNameFull'
        total_bid_vol:
          $ref: '#/components/schemas/field_BidVolumeTotal'
        total_ask_vol:
          $ref: '#/components/schemas/field_AskVolumeTotal'
        accrued_interest:
          $ref: '#/components/schemas/field_AccruedInterest_Deprecated'
        change:
          $ref: '#/components/schemas/field_ChangeValue'
        change_percent:
          $ref: '#/components/schemas/field_ChangePercent'
    response_Futures_Slim:
      type: object
      description: 'Котировка по фьючерсу в формате `Slim`'
      properties:
        sym:
          $ref: '#/components/schemas/field_FuturesNameShort'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        desc:
          $ref: '#/components/schemas/field_FuturesTicker'
        tst:
          $ref: '#/components/schemas/field_TimeLastPriceUnix'
        tso:
          $ref: '#/components/schemas/field_TimeOrderBookEntryUnixMS'
        o:
          $ref: '#/components/schemas/field_PriceOpen'
        h:
          $ref: '#/components/schemas/field_PriceMaximum'
        l:
          $ref: '#/components/schemas/field_PriceMinimum'
        c:
          $ref: '#/components/schemas/field_PriceLast'
        v:
          $ref: '#/components/schemas/field_VolumeNullable'
        acci:
          $ref: '#/components/schemas/field_AccruedInterest'
        oi:
          $ref: '#/components/schemas/field_OpenInterest'
        y:
          $ref: '#/components/schemas/field_Yield_Common'
        ask:
          $ref: '#/components/schemas/field_AskPrice'
        bid:
          $ref: '#/components/schemas/field_BidPrice'
        av:
          $ref: '#/components/schemas/field_AskVolumeClosest'
        bv:
          $ref: '#/components/schemas/field_BidVolumeClosest'
        tbv:
          $ref: '#/components/schemas/field_BidVolumeTotal'
        tav:
          $ref: '#/components/schemas/field_AskVolumeTotal'
        lot:
          $ref: '#/components/schemas/field_LotSize'
        lotv:
          $ref: '#/components/schemas/field_LotValue'
        fv:
          $ref: '#/components/schemas/field_FaceValue'
        t:
          $ref: '#/components/schemas/field_FuturesNameFull'
    response_History_Heavy:
      type: object
      description: 'Исторические сведения о нескольких периодах времени в формате `Heavy`'
      properties:
        history:
          type: array
          description: 'Периоды и их исторические данные'
          items:
            $ref: '#/components/schemas/response_HistoryObject_Heavy'
        next:
          $ref: '#/components/schemas/field_CandlestickTimeNext'
        prev:
          $ref: '#/components/schemas/field_CandlestickTimePrevious'
    response_History_Simple:
      type: object
      description: 'Исторические сведения о нескольких периодах времени в формате `Simple`'
      properties:
        history:
          type: array
          description: 'Периоды и их исторические данные'
          items:
            $ref: '#/components/schemas/response_HistoryObject_Simple'
        next:
          $ref: '#/components/schemas/field_CandlestickTimeNext'
        prev:
          $ref: '#/components/schemas/field_CandlestickTimePrevious'
    response_History_Slim:
      type: object
      description: 'Исторические сведения о нескольких периодах времени в формате `Slim`'
      properties:
        history:
          type: array
          description: 'Периоды и их исторические данные'
          items:
            $ref: '#/components/schemas/response_HistoryObject_Slim'
        next:
          $ref: '#/components/schemas/field_CandlestickTimeNext'
        prev:
          $ref: '#/components/schemas/field_CandlestickTimePrevious'
    response_HistoryObject_Heavy:
      type: object
      description: 'Исторические сведения об отдельном периоде времени в формате `Heavy`'
      properties:
        time:
          $ref: '#/components/schemas/field_TimeUnixSeconds'
        close:
          $ref: '#/components/schemas/field_PriceClose'
        open:
          $ref: '#/components/schemas/field_PriceOpen'
        high:
          $ref: '#/components/schemas/field_PriceMaximum'
        low:
          $ref: '#/components/schemas/field_PriceMinimum'
        volume:
          $ref: '#/components/schemas/field_VolumeGeneralLong'
    response_HistoryObject_Simple:
      type: object
      description: 'Исторические сведения об отдельном периоде времени в формате `Simple`'
      properties:
        time:
          $ref: '#/components/schemas/field_TimeUnixSeconds'
        close:
          $ref: '#/components/schemas/field_PriceClose'
        open:
          $ref: '#/components/schemas/field_PriceOpen'
        high:
          $ref: '#/components/schemas/field_PriceMaximum'
        low:
          $ref: '#/components/schemas/field_PriceMinimum'
        volume:
          $ref: '#/components/schemas/field_VolumeGeneralLong'
    response_HistoryObject_Slim:
      type: object
      description: 'Исторические сведения об отдельном периоде времени в формате `Slim`'
      properties:
        t:
          $ref: '#/components/schemas/field_TimeUnixSeconds'
        c:
          $ref: '#/components/schemas/field_PriceClose'
        o:
          $ref: '#/components/schemas/field_PriceOpen'
        h:
          $ref: '#/components/schemas/field_PriceMaximum'
        l:
          $ref: '#/components/schemas/field_PriceMinimum'
        v:
          $ref: '#/components/schemas/field_VolumeGeneralLong'
    response_Instruments_Heavy:
      type: object
      description: 'Сведения об инструменте в формате `Heavy`'
      properties:
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        board:
          $ref: '#/components/schemas/field_Board'
        tradingStatus:
          $ref: '#/components/schemas/field_TradingStatusCode'
        tradingStatusInfo:
          $ref: '#/components/schemas/field_TradingStatusInfo'
        priceMin:
          $ref: '#/components/schemas/field_PriceMinimum'
        priceMax:
          $ref: '#/components/schemas/field_PriceMaximum'
        marginBuy:
          $ref: '#/components/schemas/field_PriceMarginBuy'
        marginSell:
          $ref: '#/components/schemas/field_PriceMarginSell'
        marginSyntetic:
          $ref: '#/components/schemas/field_PriceMarginSyntetic'
        theorPrice:
          $ref: '#/components/schemas/field_PriceTheoretical'
        theorPriceLimit:
          $ref: '#/components/schemas/field_PriceTheoreticalLimited'
        volatility:
          $ref: '#/components/schemas/field_Volatility'
    response_Instruments_Simple:
      type: object
      description: 'Сведения об инструменте в формате `Simple`'
      properties:
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        board:
          $ref: '#/components/schemas/field_Board'
        tradingStatus:
          $ref: '#/components/schemas/field_TradingStatusCode'
        tradingStatusInfo:
          $ref: '#/components/schemas/field_TradingStatusInfo'
        priceMin:
          $ref: '#/components/schemas/field_PriceMinimum'
        priceMax:
          $ref: '#/components/schemas/field_PriceMaximum'
        marginBuy:
          $ref: '#/components/schemas/field_PriceMarginBuy'
        marginSell:
          $ref: '#/components/schemas/field_PriceMarginSell'
        marginSyntetic:
          $ref: '#/components/schemas/field_PriceMarginSyntetic'
        theorPrice:
          $ref: '#/components/schemas/field_PriceTheoretical'
        theorPriceLimit:
          $ref: '#/components/schemas/field_PriceTheoreticalLimited'
        volatility:
          $ref: '#/components/schemas/field_Volatility'
    response_Instruments_Slim:
      type: object
      description: 'Сведения об инструменте в формате `Slim`'
      properties:
        sym:
          $ref: '#/components/schemas/field_Ticker'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        bd:
          $ref: '#/components/schemas/field_Board'
        st:
          $ref: '#/components/schemas/field_TradingStatusCode'
        sti:
          $ref: '#/components/schemas/field_TradingStatusInfo'
        pxmn:
          $ref: '#/components/schemas/field_PriceMinimum'
        pxmx:
          $ref: '#/components/schemas/field_PriceMaximum'
        mgb:
          $ref: '#/components/schemas/field_PriceMarginBuy'
        mgs:
          $ref: '#/components/schemas/field_PriceMarginSell'
        mgsnt:
          $ref: '#/components/schemas/field_PriceMarginSyntetic'
        pxt:
          $ref: '#/components/schemas/field_PriceTheoretical'
        pxtl:
          $ref: '#/components/schemas/field_PriceTheoreticalLimited'
        vl:
          $ref: '#/components/schemas/field_Volatility'
    response_Money_Heavy:
      type: object
      description: 'Сведения об имеющихся в портфеле деньгах в формате `Heavy`'
      properties:
        cash:
          $ref: '#/components/schemas/field_MoneyCurrent'
        used:
          $ref: '#/components/schemas/field_MoneyUsed'
        open:
          $ref: '#/components/schemas/field_MoneyOpen'
        profit:
          $ref: '#/components/schemas/field_ProfitValue'
        profitRate:
          $ref: '#/components/schemas/field_ProfitRate'
        comission:
          $ref: '#/components/schemas/field_MoneyCommission'
        changes:
          $ref: '#/components/schemas/field_MoneyChanges'
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        free:
          $ref: '#/components/schemas/field_MoneyFree'
    response_Money_Simple:
      type: object
      description: 'Сведения об имеющихся в портфеле деньгах в формате `Simple`'
      properties:
        cash:
          $ref: '#/components/schemas/field_MoneyCurrent'
        used:
          $ref: '#/components/schemas/field_MoneyUsed'
        open:
          $ref: '#/components/schemas/field_MoneyOpen'
        profit:
          $ref: '#/components/schemas/field_ProfitValue'
        profitRate:
          $ref: '#/components/schemas/field_ProfitRate'
        comission:
          $ref: '#/components/schemas/field_MoneyCommission'
        changes:
          $ref: '#/components/schemas/field_MoneyChanges'
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        free:
          $ref: '#/components/schemas/field_MoneyFree'
    response_Money_Slim:
      type: object
      description: 'Сведения об имеющихся в портфеле деньгах в формате `Slim`'
      properties:
        c:
          $ref: '#/components/schemas/field_MoneyCurrent'
        u:
          $ref: '#/components/schemas/field_MoneyUsed'
        o:
          $ref: '#/components/schemas/field_MoneyOpen'
        pf:
          $ref: '#/components/schemas/field_ProfitValue'
        pfr:
          $ref: '#/components/schemas/field_ProfitRate'
        cms:
          $ref: '#/components/schemas/field_MoneyCommission'
        ch:
          $ref: '#/components/schemas/field_MoneyChanges'
        p:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        f:
          $ref: '#/components/schemas/field_MoneyFree'
    response_Order_Heavy:
      type: object
      description: 'Сведения о ранее созданной заявке в формате `Heavy`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        board:
          $ref: '#/components/schemas/field_Board'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        comment:
          $ref: '#/components/schemas/field_CustomComment'
        type:
          $ref: '#/components/schemas/field_OrderTypeLimitMarket'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        status:
          $ref: '#/components/schemas/field_StatusOrder'
        transTime:
          $ref: '#/components/schemas/field_TimeTransitionUTC'
        updateTime:
          $ref: '#/components/schemas/field_TimeUpdateUTC'
        endTime:
          $ref: '#/components/schemas/field_TimeEndUTC'
        qtyUnits:
          $ref: '#/components/schemas/field_QuantityUnitsInt'
        qtyBatch:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        filledQtyUnits:
          $ref: '#/components/schemas/field_FilledQtyUnits'
        filledQtyBatch:
          $ref: '#/components/schemas/field_FilledQtyBatch'
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
        timeInForce:
          $ref: '#/components/schemas/field_ExecutionPeriod'
        iceberg:
          $ref: '#/components/schemas/object_IcebergFields_Simple'
        volume:
          $ref: '#/components/schemas/field_VolumeNullable'
    response_Order_Simple:
      type: object
      description: 'Сведения о ранее созданной заявке в формате `Simple`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        board:
          $ref: '#/components/schemas/field_Board'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        comment:
          $ref: '#/components/schemas/field_CustomComment'
        type:
          $ref: '#/components/schemas/field_OrderTypeLimitMarket'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        status:
          $ref: '#/components/schemas/field_StatusOrder'
        transTime:
          $ref: '#/components/schemas/field_TimeTransitionUTC'
        updateTime:
          $ref: '#/components/schemas/field_TimeUpdateUTC'
        endTime:
          $ref: '#/components/schemas/field_TimeEndUTC'
        qtyUnits:
          $ref: '#/components/schemas/field_QuantityUnitsInt'
        qtyBatch:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        qty:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        filledQtyUnits:
          $ref: '#/components/schemas/field_FilledQtyUnits'
        filledQtyBatch:
          $ref: '#/components/schemas/field_FilledQtyBatch'
        filled:
          $ref: '#/components/schemas/field_FilledQtyBatch'
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
        timeInForce:
          $ref: '#/components/schemas/field_ExecutionPeriod'
        iceberg:
          $ref: '#/components/schemas/object_IcebergFields_Simple'
        volume:
          $ref: '#/components/schemas/field_VolumeNullable'
    response_Order_Slim:
      type: object
      description: 'Сведения о ранее созданной заявке в формате `Slim`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        sym:
          $ref: '#/components/schemas/field_Ticker'
        bd:
          $ref: '#/components/schemas/field_Board'
        tic:
          $ref: '#/components/schemas/field_BrokerSymbol'
        p:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        cmt:
          $ref: '#/components/schemas/field_CustomComment'
        t:
          $ref: '#/components/schemas/field_OrderTypeLimitMarket'
        s:
          $ref: '#/components/schemas/field_SideCommon'
        st:
          $ref: '#/components/schemas/field_StatusOrder'
        tt:
          $ref: '#/components/schemas/field_TimeTransitionUTC'
        ut:
          $ref: '#/components/schemas/field_TimeUpdateUTC'
        et:
          $ref: '#/components/schemas/field_TimeEndUTC'
        q:
          $ref: '#/components/schemas/field_QuantityUnitsInt'
        qb:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        fq:
          $ref: '#/components/schemas/field_FilledQtyUnits'
        fqb:
          $ref: '#/components/schemas/field_FilledQtyBatch'
        px:
          $ref: '#/components/schemas/field_PriceCommon'
        h:
          $ref: '#/components/schemas/flag_Snapshot'
        tf:
          $ref: '#/components/schemas/field_ExecutionPeriod'
        i:
          $ref: '#/components/schemas/object_IcebergFields_Slim'
        v:
          $ref: '#/components/schemas/field_VolumeNullable'
    response_OrderActionCode400:
      #using same schema for  
      #limit=market
      type: object
      description: 'Пример текстового сообщения с HTTP-кодом `400`'
      properties:
        message:
          allOf:
            - $ref: '#/components/schemas/field_Message'
            - example: Заявка не может быть принята из-за возможного недопустимого снижения уровня маржи.
    response_OrderActionCode400_CommandAPI:
      type: object
      description: 'Пример текстового сообщения с HTTP-кодом `400`'
      properties:
        message:
          allOf:
            - $ref: '#/components/schemas/field_Message'
            - example: Request with such X-ALOR-REQID was already handled. We return the response to that request.
        oldResponse:
          type: object
          description: 'Сообщение, полученное в ответ на предыдущий запрос с таким же значением `X-ALOR-REQID`'
          properties:
            statusCode:
              $ref: '#/components/schemas/field_HTTPCode400'
            body:
              type: object
              description: 'Содержимое тела ответа'
              properties:
                message:
                  allOf:
                    - $ref: '#/components/schemas/field_Message'
                    - example: success
                orderNumber:
                  $ref: '#/components/schemas/field_IdentifierOrderCommon'
    response_OrderActionLimitMarket:
      #using same schema for  
      #limit=market
      type: object
      description: 'Пример ответа на успешный запрос на создание заявки'
      properties:
        message:
          allOf:
            - $ref: '#/components/schemas/field_Message'
            - example: (162) Заявка на покупку N 9763124 зарегистрирована (1 удовлетворено).
        orderNumber:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
    response_OrderActionLimitMarket_CommandAPI:
      type: object
      description: 'Пример ответа на успешный запрос на создание заявки'
      properties:
        message:
          allOf:
            - $ref: '#/components/schemas/field_Message'
            - example: success
        orderNumber:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
    response_OrderActionStopProfitLoss:
      #same shema for
      #stop=stoplimit=stoploss=takeprofit=takeprofitlimit
      type: object
      description: 'Пример ответа на успешный запрос на создание заявки'
      properties:
        message:
          allOf:
            - $ref: '#/components/schemas/field_Message'
            - example: Succeeded, OrderNo=326123, EndTime={08.08.18  23:59:59}, OrderEndTime=(None)
        orderNumber:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
    response_OrderActionStopProfitLoss_CommandAPI:
      type: object
      description: 'Пример ответа на успешный запрос на создание заявки'
      properties:
        message:
          allOf:
            - $ref: '#/components/schemas/field_Message'
            - example: Succeeded, OrderNo=326123, EndTime={08.08.18  23:59:59}
        orderNumber:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
    response_OrderBook_Ask_Simple:
      type: object
      description: 'Данные об аске в биржевом стакане'
      properties:
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        volume:
          $ref: '#/components/schemas/field_VolumeGeneralLong'
    response_OrderBook_Ask_Slim:
      type: object
      description: 'Данные об аске в биржевом стакане'
      properties:
        p:
          $ref: '#/components/schemas/field_PriceCommon'
        v:
          $ref: '#/components/schemas/field_VolumeGeneralLong'
        y:
          $ref: '#/components/schemas/field_Yield_Bond'
    response_OrderBook_Bid_Simple:
      type: object
      description: 'Данные о биде в биржевом стакане'
      properties:
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        volume:
          $ref: '#/components/schemas/field_VolumeGeneralLong'
    response_OrderBook_Bid_Slim:
      type: object
      description: 'Данные о биде в биржевом стакане'
      properties:
        p:
          $ref: '#/components/schemas/field_PriceCommon'
        v:
          $ref: '#/components/schemas/field_VolumeGeneralLong'
        y:
          $ref: '#/components/schemas/field_Yield_Bond'
    response_OrderBook_Heavy:
      type: object
      description: 'Данные о "биржевом стакане" в формате `Heavy`'
      properties:
        bids:
          $ref: '#/components/schemas/array_Bids_Simple'
        asks:
          $ref: '#/components/schemas/array_Asks_Simple'
        msTimestamp:
          $ref: '#/components/schemas/field_TimeUnixMilliseconds'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
    response_OrderBook_Simple:
      type: object
      description: 'Данные о "биржевом стакане" в формате `Simple`'
      properties:
        snapshot:
          $ref: '#/components/schemas/flag_Snapshot_Deprecated'
        bids:
          $ref: '#/components/schemas/array_Bids_Simple'
        asks:
          $ref: '#/components/schemas/array_Asks_Simple'
        timestamp:
          $ref: '#/components/schemas/field_TimeUnixSeconds_Deprecated'
        ms_timestamp:
          $ref: '#/components/schemas/field_TimeUnixMilliseconds'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
    response_OrderBook_Slim:
      type: object
      description: 'Данные о "биржевом стакане" в формате `Slim`'
      properties:
        b:
          $ref: '#/components/schemas/array_Bids_Slim'
        a:
          $ref: '#/components/schemas/array_Asks_Slim'
        t:
          $ref: '#/components/schemas/field_TimeUnixMilliseconds'
        h:
          $ref: '#/components/schemas/flag_Snapshot'
    response_OrderGroupCreationError:
      type: object
      description: 'Пример ответа на некорректный запрос на создание группы заявок'
      properties:
        title:
          type: string
          description: 'Описание кода ошибки'
          example: BadRequest
        status:
          $ref: '#/components/schemas/field_HTTPCode400'
        detail:
          type: string
          description: 'Описание ошибки'
          example: Forbidden attempt to modify an order (3625092321506) not owned by the user
    response_OrderGroupCreationSuccess:
      type: object
      description: 'Пример ответа на успешный запрос на создание группы заявок'
      properties:
        message:
          allOf:
            - $ref: '#/components/schemas/field_Message'
            - example: success
        groupId:
          $ref: '#/components/schemas/field_IdentifierOrderGroup'
    response_OrderGroupInfo:
      type: object
      description: 'Сведения о выбранной группе заявок'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierOrderGroup'
        login:
          $ref: '#/components/schemas/field_IdentifierLogin'
        orders:
          type: array
          description: 'Список заявок, входящих в группу заявок'
          items:
            $ref: '#/components/schemas/object_OrderGroupItems'
        executionPolicy:
          $ref: '#/components/schemas/field_ExecutionPolicy'
        status:
          $ref: '#/components/schemas/field_StatusOrderGroup'
        createdAt:
          $ref: '#/components/schemas/field_TimeOrderGroupCreatedAt'
        closedAt:
          $ref: '#/components/schemas/field_TimeOrderGroupClosedAt'
    response_OrderGroupsInfo:
      type: array
      description: 'Сведения о выбранных группах заявок'
      items:
        $ref: '#/components/schemas/response_OrderGroupInfo'
    response_Orders_Heavy:
      type: array
      description: 'Список ранее созданных заявок с их характеристиками в формате `Heavy`'
      items:
        $ref: '#/components/schemas/response_Order_Heavy'
    response_Orders_Simple:
      type: array
      description: 'Список ранее созданных заявок с их характеристиками в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_Order_Simple'
    response_Orders_Slim:
      type: array
      description: 'Список ранее созданных заявок с их характеристиками в формате `Slim`'
      items:
        $ref: '#/components/schemas/response_Order_Slim'
    response_Position_Heavy:
      type: object
      description: 'Сведения об отдельной позиции в портфеле в формате `Heavy`'
      properties:
        volume:
          $ref: '#/components/schemas/field_VolumeByPriceAverage'
        currentVolume:
          $ref: '#/components/schemas/field_VolumeByPriceCurrent'
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        avgPrice:
          $ref: '#/components/schemas/field_PriceAverage'
        qtyUnits:
          $ref: '#/components/schemas/field_QuantityUnitsDec'
        openUnits:
          $ref: '#/components/schemas/field_QuantityUnitsOpen'
        lotSize:
          $ref: '#/components/schemas/field_LotSize'
        shortName:
          $ref: '#/components/schemas/field_ShortName'
        qtyT0:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedT0'
        qtyT1:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedT1'
        qtyT2:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedT2'
        qtyTFuture:
          $ref: '#/components/schemas/field_QuantityUnitsDec'
        qtyT0Batch:
          $ref: '#/components/schemas/field_QuantityBatchAgregatedT0'
        qtyT1Batch:
          $ref: '#/components/schemas/field_QuantityBatchAgregatedT1'
        qtyT2Batch:
          $ref: '#/components/schemas/field_QuantityBatchAgregatedT2'
        qtyTFutureBatch:
          $ref: '#/components/schemas/field_QuantityBatchAgregatedTFuture'
        openQtyBatch:
          $ref: '#/components/schemas/field_QuantityBatchAgregatedOpen'
        dailyUnrealisedPl:
          $ref: '#/components/schemas/field_UnrealisedPlDaily'
        unrealisedPl:
          $ref: '#/components/schemas/field_UnrealisedPlTotal'
        isCurrency:
          $ref: '#/components/schemas/flag_Currency'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
    response_Position_Simple:
      type: object
      description: 'Сведения об отдельной позиции в портфеле в формате `Simple`'
      properties:
        volume:
          $ref: '#/components/schemas/field_VolumeByPriceAverage'
        currentVolume:
          $ref: '#/components/schemas/field_VolumeByPriceCurrent'
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        avgPrice:
          $ref: '#/components/schemas/field_PriceAverage'
        qtyUnits:
          $ref: '#/components/schemas/field_QuantityUnitsDec'
        openUnits:
          $ref: '#/components/schemas/field_QuantityUnitsOpen'
        lotSize:
          $ref: '#/components/schemas/field_LotSize'
        shortName:
          $ref: '#/components/schemas/field_ShortName'
        qtyT0:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedT0'
        qtyT1:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedT1'
        qtyT2:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedT2'
        qtyTFuture:
          $ref: '#/components/schemas/field_QuantityUnitsDec'
        qtyT0Batch:
          $ref: '#/components/schemas/field_QuantityBatchAgregatedT0'
        qtyT1Batch:
          $ref: '#/components/schemas/field_QuantityBatchAgregatedT1'
        qtyT2Batch:
          $ref: '#/components/schemas/field_QuantityBatchAgregatedT2'
        qtyTFutureBatch:
          $ref: '#/components/schemas/field_QuantityBatchAgregatedTFuture'
        qtyBatch:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedTFuture'
        openQtyBatch:
          $ref: '#/components/schemas/field_QuantityBatchAgregatedOpen'
        qty:
          $ref: '#/components/schemas/field_QuantityBatchAgregated'
        open:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedOpen'
        dailyUnrealisedPl:
          $ref: '#/components/schemas/field_UnrealisedPlDaily'
        unrealisedPl:
          $ref: '#/components/schemas/field_UnrealisedPlTotal'
        isCurrency:
          $ref: '#/components/schemas/flag_Currency'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
    response_Position_Slim:
      type: object
      description: 'Сведения об отдельной позиции в портфеле в формате `Slim`'
      properties:
        v:
          $ref: '#/components/schemas/field_VolumeByPriceAverage'
        cv:
          $ref: '#/components/schemas/field_VolumeByPriceCurrent'
        sym:
          $ref: '#/components/schemas/field_Ticker'
        tic:
          $ref: '#/components/schemas/field_BrokerSymbol'
        p:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        pxavg:
          $ref: '#/components/schemas/field_PriceAverage'
        q:
          $ref: '#/components/schemas/field_QuantityUnitsDec'
        o:
          $ref: '#/components/schemas/field_QuantityUnitsOpen'
        lot:
          $ref: '#/components/schemas/field_LotSize'
        n:
          $ref: '#/components/schemas/field_ShortName'
        q0:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedT0'
        q1:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedT1'
        q2:
          $ref: '#/components/schemas/field_QuantityUnitsAgregatedT2'
        qf:
          $ref: '#/components/schemas/field_QuantityUnitsDec'
        upd:
          $ref: '#/components/schemas/field_UnrealisedPlDaily'
        up:
          $ref: '#/components/schemas/field_UnrealisedPlTotal'
        cur:
          $ref: '#/components/schemas/flag_Currency'
        h:
          $ref: '#/components/schemas/flag_Snapshot'
    response_Positions_Heavy:
      type: array
      description: 'Сведения обо всех позициях в портфеле в формате `Heavy`'
      items:
        $ref: '#/components/schemas/response_Position_Heavy'
    response_Positions_Simple:
      type: array
      description: 'Сведения обо всех позициях в портфеле в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_Position_Simple'
    response_Positions_Slim:
      type: array
      description: 'Сведения обо всех позициях в портфеле в формате `Slim`'
      items:
        $ref: '#/components/schemas/response_Position_Slim'
    response_Risk_Heavy:
      type: object
      description: 'Сведения о рисках в формате `Heavy`'
      properties:
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        portfolioEvaluation:
          $ref: '#/components/schemas/field_PortfolioEvaluationValue'
        portfolioLiquidationValue:
          $ref: '#/components/schemas/field_PortfolioLiquidationValue'
        initialMargin:
          $ref: '#/components/schemas/field_MarginInitial'
        minimalMargin:
          $ref: '#/components/schemas/field_MarginMinimal'
        correctedMargin:
          $ref: '#/components/schemas/field_MarginCorrected'
        riskCoverageRatioOne:
          $ref: '#/components/schemas/field_RiskCoverageRatioOne'
        riskCoverageRatioTwo:
          $ref: '#/components/schemas/field_RiskCoverageRatioTwo'
        riskCategoryId:
          $ref: '#/components/schemas/field_IdentifierRiskCategory'
        clientType:
          $ref: '#/components/schemas/field_ClientType'
        hasForbiddenPositions:
          $ref: '#/components/schemas/flag_ForbiddenPositions'
        hasNegativeQuantity:
          $ref: '#/components/schemas/flag_NegativeQuantity'
        riskStatus:
          $ref: '#/components/schemas/field_RiskStatus'
        calculationTime:
          $ref: '#/components/schemas/field_CalculationTime'
    response_Risk_Simple:
      type: object
      description: 'Сведения о рисках в формате `Simple`'
      properties:
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        portfolioEvaluation:
          $ref: '#/components/schemas/field_PortfolioEvaluationValue'
        portfolioLiquidationValue:
          $ref: '#/components/schemas/field_PortfolioLiquidationValue'
        initialMargin:
          $ref: '#/components/schemas/field_MarginInitial'
        minimalMargin:
          $ref: '#/components/schemas/field_MarginMinimal'
        correctedMargin:
          $ref: '#/components/schemas/field_MarginCorrected'
        riskCoverageRatioOne:
          $ref: '#/components/schemas/field_RiskCoverageRatioOne'
        riskCoverageRatioTwo:
          $ref: '#/components/schemas/field_RiskCoverageRatioTwo'
        riskCategoryId:
          $ref: '#/components/schemas/field_IdentifierRiskCategory'
        clientType:
          $ref: '#/components/schemas/field_ClientType'
        hasForbiddenPositions:
          $ref: '#/components/schemas/flag_ForbiddenPositions'
        hasNegativeQuantity:
          $ref: '#/components/schemas/flag_NegativeQuantity'
        riskStatus:
          $ref: '#/components/schemas/field_RiskStatus'
        calculationTime:
          $ref: '#/components/schemas/field_CalculationTime'
    response_Risk_Slim:
      type: object
      description: 'Сведения о рисках в формате `Slim`'
      properties:
        p:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        pe:
          $ref: '#/components/schemas/field_PortfolioEvaluationValue'
        plv:
          $ref: '#/components/schemas/field_PortfolioLiquidationValue'
        mgi:
          $ref: '#/components/schemas/field_MarginInitial'
        mgmn:
          $ref: '#/components/schemas/field_MarginMinimal'
        mgc:
          $ref: '#/components/schemas/field_MarginCorrected'
        r1:
          $ref: '#/components/schemas/field_RiskCoverageRatioOne'
        r2:
          $ref: '#/components/schemas/field_RiskCoverageRatioTwo'
        rid:
          $ref: '#/components/schemas/field_IdentifierRiskCategory'
        ct:
          $ref: '#/components/schemas/field_ClientType'
        fpos:
          $ref: '#/components/schemas/flag_ForbiddenPositions'
        nq:
          $ref: '#/components/schemas/flag_NegativeQuantity'
        rst:
          $ref: '#/components/schemas/field_RiskStatus'
        t:
          $ref: '#/components/schemas/field_CalculationTime'
    response_RiskRate:
      type: object
      description: 'Ставки риска для одного инструмента'
      properties:
        id:
          type: integer
          format: int64
          example: 22229
          description: Id записи
        instrument:
          $ref: '#/components/schemas/field_Ticker'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        riskCategoryId:
          $ref: '#/components/schemas/field_IdentifierRiskCategory'
        securityRiskCategoryId:
          type: number
          format: decimal
          nullable: true
          example: 1
          description: Id категории бумаги для категоризации
        assetType:
          type: string
          example: stock
          description: Тип актива
        underlyingAsset:
          type: string
          example: SBER
          nullable: true
          description: "Базовый актив запрошенного инструмента. Для непроизводных инструментов — `null`"
        setName:
          type: string
          example: SBER
          nullable: true
          description: Чаще всего будет null. Поле показывает к какому множеству инструментов принадлежит данный инструмент
        isin:
          $ref: '#/components/schemas/field_ISIN'
        currencyCode:
          $ref: '#/components/schemas/field_CurrencyCode'
        rateUp:
          type: number
          format: decimal
          example: 20
          description: Ставка риска повышения цены. Применяется для шортов
        rateDown:
          type: number
          format: decimal
          example: 10
          description: Ставка риска понижения цены. Применяется для лонгов
        rateSymmetric:
          type: number
          format: decimal
          example: 10
          description: Симметричная ставка риска. Приведена для справки, не используется
        isShortSellPossible:
          type: boolean
          example: true
          description: Разрешен ли шорт по бумаге. True если да
        isMarginal:
          type: boolean
          example: true
          description: Доступен ли данный инструмент в маржу. Т.е. есть ли он в списке маржинальных инструментов брокера
        setRate:
          type: number
          format: decimal
          example: 0
          description: Ставка риска множества
        sgnR:
          $ref: '#/components/schemas/field_Sgnr'
    response_RiskRates:
      type: object
      description: 'Ставки риска для множества инструментов'
      properties:
        list:
          type: array
          description: 'Список ставок риска'
          items:
            $ref: '#/components/schemas/response_RiskRate'
        total:
          $ref: '#/components/schemas/field_TotalEntries'
    response_Securities_Heavy:
      type: array
      description: 'Список отвечающих запросу инструментов со сведениями о них в формате `Heavy`'
      items:
        $ref: '#/components/schemas/response_Security_Heavy'
    response_Securities_Simple:
      type: array
      description: 'Список отвечающих запросу инструментов со сведениями о них в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_Security_Simple'
    response_Securities_Slim:
      type: array
      description: 'Список отвечающих запросу инструментов со сведениями о них в формате `Slim`'
      items:
        $ref: '#/components/schemas/response_Security_Slim'
    response_Security_Heavy:
      type: object
      description: 'Сведения о выбранном инструменте в формате `Heavy`'
      properties:
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        shortName:
          $ref: '#/components/schemas/field_ShortName'
        description:
          $ref: '#/components/schemas/field_Description'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        market:
          $ref: '#/components/schemas/field_MarketCode'
        type:
          $ref: '#/components/schemas/field_InstrumentType'
        lotSize:
          $ref: '#/components/schemas/field_LotSize'
        faceValue:
          $ref: '#/components/schemas/field_FaceValue'
        cfiCode:
          $ref: '#/components/schemas/field_CFICode'
        cancellation:
          $ref: '#/components/schemas/field_TimeEndUTC'
        minStep:
          $ref: '#/components/schemas/field_PriceMinimalStep'
        roundTo:
          $ref: '#/components/schemas/field_RoundTo'
        rating:
          $ref: '#/components/schemas/field_RatingCommon'
        marginBuy:
          $ref: '#/components/schemas/field_PriceMarginBuy'
        marginSell:
          $ref: '#/components/schemas/field_PriceMarginSell'
        marginRate:
          $ref: '#/components/schemas/field_RatingMargin'
        priceStep:
          $ref: '#/components/schemas/field_PriceMinimalStepByCurrency'
        priceMax:
          $ref: '#/components/schemas/field_PriceMaximum'
        priceMin:
          $ref: '#/components/schemas/field_PriceMinimum'
        theorPrice:
          $ref: '#/components/schemas/field_PriceTheoretical'
        theorPriceLimit:
          $ref: '#/components/schemas/field_PriceTheoreticalLimited'
        volatility:
          $ref: '#/components/schemas/field_Volatility'
        currency:
          $ref: '#/components/schemas/field_CurrencyCode'
        ISIN:
          $ref: '#/components/schemas/field_ISIN'
        yield:
          $ref: '#/components/schemas/field_Yield_Common'
        board:
          $ref: '#/components/schemas/field_Board'
        primaryBoard:
          $ref: '#/components/schemas/field_Board'
        tradingStatus:
          $ref: '#/components/schemas/field_TradingStatusCode'
        tradingStatusInfo:
          $ref: '#/components/schemas/field_TradingStatusInfo'
        complexProductCategory:
          $ref: '#/components/schemas/field_ComplexProductCategory'
        priceMultiplier:
          $ref: '#/components/schemas/field_PriceMultiplier'
        priceShownUnits:
          $ref: '#/components/schemas/field_PriceShownUnits'
        strikePrice:
          $ref: '#/components/schemas/field_PriceStrike'
        endExpiration:
          $ref: '#/components/schemas/field_TimeOptionExpirationUTC'
        fixedSpotDiscount:
          $ref: '#/components/schemas/field_FixedSpotDiscount'
        projectedSpotDiscount:
          $ref: '#/components/schemas/field_ProjectedSpotDiscount'
        underlyingSymbol:
          $ref: '#/components/schemas/field_UnderlyingSymbol'
        optionSide:
          $ref: '#/components/schemas/field_SideOption'
        initialMarginLowRiskLong:
          $ref: '#/components/schemas/field_MarginInitialRiskLowLong'
        initialMarginLowRiskShort:
          $ref: '#/components/schemas/field_MarginInitialRiskLowShort'
        initialMarginStandardRiskLong:
          $ref: '#/components/schemas/field_MarginInitialRiskStandardLong'
        initialMarginStandardRiskShort:
          $ref: '#/components/schemas/field_MarginInitialRiskStandardShort'
        initialMarginHighRiskLong:
          $ref: '#/components/schemas/field_MarginInitialRiskHighLong'
        initialMarginHighRiskShort:
          $ref: '#/components/schemas/field_MarginInitialRiskHighShort'
        initialMarginSpecialRiskLong:
          $ref: '#/components/schemas/field_MarginInitialRiskSpecialLong'
        initialMarginSpecialRiskShort:
          $ref: '#/components/schemas/field_MarginInitialRiskSpecialShort'
    response_Security_Simple:
      type: object
      description: 'Сведения о выбранном инструменте в формате `Simple`'
      properties:
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        shortname:
          $ref: '#/components/schemas/field_ShortName'
        description:
          $ref: '#/components/schemas/field_Description'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        market:
          $ref: '#/components/schemas/field_MarketCode'
        type:
          $ref: '#/components/schemas/field_InstrumentType'
        lotsize:
          $ref: '#/components/schemas/field_LotSize'
        facevalue:
          $ref: '#/components/schemas/field_FaceValue'
        cfiCode:
          $ref: '#/components/schemas/field_CFICode'
        cancellation:
          $ref: '#/components/schemas/field_TimeEndUTC'
        minstep:
          $ref: '#/components/schemas/field_PriceMinimalStep'
        rating:
          $ref: '#/components/schemas/field_RatingCommon'
        marginbuy:
          $ref: '#/components/schemas/field_PriceMarginBuy'
        marginsell:
          $ref: '#/components/schemas/field_PriceMarginSell'
        marginrate:
          $ref: '#/components/schemas/field_RatingMargin'
        pricestep:
          $ref: '#/components/schemas/field_PriceMinimalStepByCurrency'
        priceMax:
          $ref: '#/components/schemas/field_PriceMaximum'
        priceMin:
          $ref: '#/components/schemas/field_PriceMinimum'
        theorPrice:
          $ref: '#/components/schemas/field_PriceTheoretical'
        theorPriceLimit:
          $ref: '#/components/schemas/field_PriceTheoreticalLimited'
        volatility:
          $ref: '#/components/schemas/field_Volatility'
        currency:
          $ref: '#/components/schemas/field_CurrencyCode'
        ISIN:
          $ref: '#/components/schemas/field_ISIN'
        yield:
          $ref: '#/components/schemas/field_Yield_Common'
        board:
          $ref: '#/components/schemas/field_Board'
        primary_board:
          $ref: '#/components/schemas/field_Board'
        tradingStatus:
          $ref: '#/components/schemas/field_TradingStatusCode'
        tradingStatusInfo:
          $ref: '#/components/schemas/field_TradingStatusInfo'
        complexProductCategory:
          $ref: '#/components/schemas/field_ComplexProductCategory'
        priceMultiplier:
          $ref: '#/components/schemas/field_PriceMultiplier'
        priceShownUnits:
          $ref: '#/components/schemas/field_PriceShownUnits'
        strikePrice:
          $ref: '#/components/schemas/field_PriceStrike'
        endExpiration:
          $ref: '#/components/schemas/field_TimeOptionExpirationUTC'
        fixedSpotDiscount:
          $ref: '#/components/schemas/field_FixedSpotDiscount'
        projectedSpotDiscount:
          $ref: '#/components/schemas/field_ProjectedSpotDiscount'
        underlyingSymbol:
          $ref: '#/components/schemas/field_UnderlyingSymbol'
        optionSide:
          $ref: '#/components/schemas/field_SideOption'
    response_Security_Slim:
      type: object
      description: 'Сведения о выбранном инструменте в формате `Slim`'
      properties:
        sym:
          $ref: '#/components/schemas/field_Ticker'
        n:
          $ref: '#/components/schemas/field_ShortName'
        desc:
          $ref: '#/components/schemas/field_Description'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        t:
          $ref: '#/components/schemas/field_InstrumentType'
        lot:
          $ref: '#/components/schemas/field_LotSize'
        fv:
          $ref: '#/components/schemas/field_FaceValue'
        cfi:
          $ref: '#/components/schemas/field_CFICode'
        cncl:
          $ref: '#/components/schemas/field_TimeEndUTC'
        stp:
          $ref: '#/components/schemas/field_PriceMinimalStep'
        rt:
          $ref: '#/components/schemas/field_RatingCommon'
        mgb:
          $ref: '#/components/schemas/field_PriceMarginBuy'
        mgs:
          $ref: '#/components/schemas/field_PriceMarginSell'
        mgrt:
          $ref: '#/components/schemas/field_RatingMargin'
        stppx:
          $ref: '#/components/schemas/field_PriceMinimalStepByCurrency'
        pxmx:
          $ref: '#/components/schemas/field_PriceMaximum'
        pxmn:
          $ref: '#/components/schemas/field_PriceMinimum'
        pxt:
          $ref: '#/components/schemas/field_PriceTheoretical'
        pxtl:
          $ref: '#/components/schemas/field_PriceTheoreticalLimited'
        pxmu:
          $ref: '#/components/schemas/field_PriceMultiplier'
        pxu:
          $ref: '#/components/schemas/field_PriceShownUnits'
        vl:
          $ref: '#/components/schemas/field_Volatility'
        cur:
          $ref: '#/components/schemas/field_CurrencyCode'
        isin:
          $ref: '#/components/schemas/field_ISIN'
        yld:
          $ref: '#/components/schemas/field_Yield_Common'
        bd:
          $ref: '#/components/schemas/field_Board'
        pbd:
          $ref: '#/components/schemas/field_Board'
        st:
          $ref: '#/components/schemas/field_TradingStatusCode'
        sti:
          $ref: '#/components/schemas/field_TradingStatusInfo'
        cpct:
          $ref: '#/components/schemas/field_ComplexProductCategory'
        pxs:
          $ref: '#/components/schemas/field_PriceStrike'
        exp:
          $ref: '#/components/schemas/field_TimeOptionExpirationUTC'
        fdis:
          $ref: '#/components/schemas/field_FixedSpotDiscount'
        pdis:
          $ref: '#/components/schemas/field_ProjectedSpotDiscount'
        usym:
          $ref: '#/components/schemas/field_UnderlyingSymbol'
        osd:
          $ref: '#/components/schemas/field_SideOption'
    response_StopOrder_Heavy:
      type: object
      description: 'Сведения о стоп-заявке в формате `Heavy`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierOrderStop'
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        board:
          $ref: '#/components/schemas/field_Board'
        type:
          $ref: '#/components/schemas/field_OrderTypeStopLimit'
        stopPrice:
          $ref: '#/components/schemas/field_PriceTrigger'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        status:
          $ref: '#/components/schemas/field_StatusOrder'
        endTime:
          $ref: '#/components/schemas/field_TimeEndUTC'
        qty:
          $ref: '#/components/schemas/field_QuantityCommon'
        filledQtyBatch:
          $ref: '#/components/schemas/field_FilledQtyBatch'
        price:
          $ref: '#/components/schemas/field_PriceLimit'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
    response_StopOrder_Simple:
      type: object
      description: 'Сведения о стоп-заявке в формате `Simple`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierOrderStop'
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        board:
          $ref: '#/components/schemas/field_Board'
        type:
          $ref: '#/components/schemas/field_OrderTypeStopLimit'
        stopPrice:
          $ref: '#/components/schemas/field_PriceTrigger'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        status:
          $ref: '#/components/schemas/field_StatusOrder'
        endTime:
          $ref: '#/components/schemas/field_TimeEndUTC'
        qty:
          $ref: '#/components/schemas/field_QuantityCommon'
        filledQtyBatch:
          $ref: '#/components/schemas/field_FilledQtyBatch'
        price:
          $ref: '#/components/schemas/field_PriceLimit'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
    response_StopOrder_Slim:
      type: object
      description: 'Сведения о стоп-заявке в формате `Slim`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierOrderStop'
        sym:
          $ref: '#/components/schemas/field_Ticker'
        tic:
          $ref: '#/components/schemas/field_BrokerSymbol'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        bd:
          $ref: '#/components/schemas/field_Board'
        t:
          $ref: '#/components/schemas/field_OrderTypeStopLimit'
        pxs:
          $ref: '#/components/schemas/field_PriceTrigger'
        s:
          $ref: '#/components/schemas/field_SideCommon'
        st:
          $ref: '#/components/schemas/field_StatusOrder'
        exp:
          $ref: '#/components/schemas/field_TimeEndUTC'
        q:
          $ref: '#/components/schemas/field_QuantityCommon'
        fqb:
          $ref: '#/components/schemas/field_FilledQtyBatch'
        px:
          $ref: '#/components/schemas/field_PriceLimit'
        e:
          $ref: '#/components/schemas/flag_Snapshot'
    response_StopOrders_Heavy:
      type: array
      description: 'Список стоп-заявок со сведениями о них в формате `Heavy`'
      items:
        $ref: '#/components/schemas/response_StopOrder_Heavy'
    response_StopOrders_Simple:
      type: array
      description: 'Список стоп-заявок со сведениями о них в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_StopOrder_Simple'
    response_StopOrders_Slim:
      type: array
      description: 'Список стоп-заявок со сведениями о них в формате `Slim`'
      items:
        $ref: '#/components/schemas/response_StopOrder_Slim'
    response_StopOrder_Warp_Heavy:
      type: object
      description: 'Сведения о стоп-заявке в формате `Heavy`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierOrderStop'
        exchangeOrderId:
          $ref: '#/components/schemas/field_IdentifierOrderExchange'
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        comment:
          $ref: '#/components/schemas/field_CustomComment'
        board:
          $ref: '#/components/schemas/field_Board'
        type:
          $ref: '#/components/schemas/field_OrderTypeStopLimit'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        condition:
          $ref: '#/components/schemas/field_ExecutionCondition'
        status:
          $ref: '#/components/schemas/field_StatusOrder'
        transTime:
          $ref: '#/components/schemas/field_TimeTransitionUTC'
        updateTime:
          $ref: '#/components/schemas/field_TimeUpdateUTC'
        endTime:
          $ref: '#/components/schemas/field_TimeEndUTC'
        error:
          $ref: '#/components/schemas/field_TriggeringError'
        qtyUnits:
          $ref: '#/components/schemas/field_QuantityUnitsDec'
        qtyBatch:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        filledQtyUnits:
          $ref: '#/components/schemas/field_FilledQtyUnits'
        filledQtyBatch:
          $ref: '#/components/schemas/field_FilledQtyBatch'
        price:
          $ref: '#/components/schemas/field_PriceLimit'
        avgPrice:
          $ref: '#/components/schemas/field_PriceAverage'
        stopPrice:
          $ref: '#/components/schemas/field_PriceTrigger'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
        timeInForce:
          $ref: '#/components/schemas/field_ExecutionPeriod'
        iceberg:
          $ref: '#/components/schemas/object_IcebergFields_Simple'
        volume:
          $ref: '#/components/schemas/field_VolumeNullable'
        protectingSeconds:
          $ref: '#/components/schemas/field_ProtectingSeconds'
    response_StopOrder_Warp_Simple:
      type: object
      description: 'Сведения о стоп-заявке в формате `Simple`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierOrderStop'
        exchangeOrderId:
          $ref: '#/components/schemas/field_IdentifierOrderExchange'
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        portfolio:
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        comment:
          $ref: '#/components/schemas/field_CustomComment'
        board:
          $ref: '#/components/schemas/field_Board'
        type:
          $ref: '#/components/schemas/field_OrderTypeStopLimit'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        condition:
          $ref: '#/components/schemas/field_ExecutionCondition'
        status:
          $ref: '#/components/schemas/field_StatusOrder'
        transTime:
          $ref: '#/components/schemas/field_TimeTransitionUTC'
        updateTime:
          $ref: '#/components/schemas/field_TimeUpdateUTC'
        endTime:
          $ref: '#/components/schemas/field_TimeEndUTC'
        error:
          $ref: '#/components/schemas/field_TriggeringError'
        qtyUnits:
          $ref: '#/components/schemas/field_QuantityUnitsDec'
        qtyBatch:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        qty:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        filled:
          $ref: '#/components/schemas/field_QuantityFilled_Deprecated'
        filledQtyUnits:
          $ref: '#/components/schemas/field_FilledQtyUnits'
        filledQtyBatch:
          $ref: '#/components/schemas/field_FilledQtyBatch'
        price:
          $ref: '#/components/schemas/field_PriceLimit'
        avg_price:
          $ref: '#/components/schemas/field_PriceAverage'
        stopPrice:
          $ref: '#/components/schemas/field_PriceTrigger'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
        timeInForce:
          $ref: '#/components/schemas/field_ExecutionPeriod'
        iceberg:
          $ref: '#/components/schemas/object_IcebergFields_Simple'
        volume:
          $ref: '#/components/schemas/field_VolumeNullable'
        protectingSeconds:
          $ref: '#/components/schemas/field_ProtectingSeconds'
    response_StopOrder_Warp_Slim:
      type: object
      description: 'Сведения о стоп-заявке в формате `Slim`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierOrderStop'
        eid:
          $ref: '#/components/schemas/field_IdentifierOrderExchange'
        sym:
          $ref: '#/components/schemas/field_Ticker'
        tic:
          $ref: '#/components/schemas/field_BrokerSymbol'
        p: 
          $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        cmt:
          $ref: '#/components/schemas/field_CustomComment'
        bd:
          $ref: '#/components/schemas/field_Board'
        t:
          $ref: '#/components/schemas/field_OrderTypeStopLimit'
        s:
          $ref: '#/components/schemas/field_SideCommon'
        cnd:
          $ref: '#/components/schemas/field_ExecutionCondition'
        st:
          $ref: '#/components/schemas/field_StatusOrder'
        tt:
          $ref: '#/components/schemas/field_TimeTransitionUTC'
        ut:
          $ref: '#/components/schemas/field_TimeUpdateUTC'
        et:
          $ref: '#/components/schemas/field_TimeEndUTC'
        err:
          $ref: '#/components/schemas/field_TriggeringError'
        q:
          $ref: '#/components/schemas/field_QuantityUnitsDec'
        qb:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        fq:
          $ref: '#/components/schemas/field_FilledQtyUnits'
        fqb:
          $ref: '#/components/schemas/field_FilledQtyBatch'
        px:
          $ref: '#/components/schemas/field_PriceLimit'
        pxavg:
          $ref: '#/components/schemas/field_PriceAverage'
        pxs:
          $ref: '#/components/schemas/field_PriceTrigger'
        h:
          $ref: '#/components/schemas/flag_Snapshot'
        tf:
          $ref: '#/components/schemas/field_ExecutionPeriod'
        i:
          $ref: '#/components/schemas/object_IcebergFields_Slim'
        v:
          $ref: '#/components/schemas/field_VolumeNullable'
        psec:
          $ref: '#/components/schemas/field_ProtectingSeconds'
    response_StopOrders_Warp_Heavy:
      type: array
      description: 'Список стоп-заявок со сведениями о них в формате `Heavy`'
      items:
        $ref: '#/components/schemas/response_StopOrder_Warp_Heavy'
    response_StopOrders_Warp_Simple:
      type: array
      description: 'Список стоп-заявок со сведениями о них в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_StopOrder_Warp_Simple'
    response_StopOrders_Warp_Slim:
      type: array
      description: 'Список стоп-заявок со сведениями о них в формате `Slim`'
      items:
        $ref: '#/components/schemas/response_StopOrder_Warp_Slim'
    response_Summary_Heavy:
      type: object
      description: 'Сведения об указанном портфеле в формате `Heavy`'
      properties:
        buyingPowerAtMorning:
          $ref: '#/components/schemas/field_BuyingPowerAtMorning'
        buyingPower:
          $ref: '#/components/schemas/field_BuyingPower'
        profit:
          $ref: '#/components/schemas/field_ProfitDailyValue'
        profitRate:
          $ref: '#/components/schemas/field_ProfitDailyRate'
        portfolioEvaluation:
          $ref: '#/components/schemas/field_PortfolioEvaluationValue'
        portfolioLiquidationValue:
          $ref: '#/components/schemas/field_PortfolioLiquidationValue'
        initialMargin:
          $ref: '#/components/schemas/field_MarginInitial'
        correctedMargin:
          $ref: '#/components/schemas/field_MarginCorrected'
        riskBeforeForcePositionClosing:
          $ref: '#/components/schemas/field_RiskBeforeForcePositionClosing'
        commission:
          $ref: '#/components/schemas/field_Commission'
        buyingPowerByCurrency:
          $ref: '#/components/schemas/array_BuyingPowerByCurrency_Simple'
    response_Summary_Simple:
      type: object
      description: 'Сведения об указанном портфеле в формате `Simple`'
      properties:
        buyingPowerAtMorning:
          $ref: '#/components/schemas/field_BuyingPowerAtMorning'
        buyingPower:
          $ref: '#/components/schemas/field_BuyingPower'
        profit:
          $ref: '#/components/schemas/field_ProfitDailyValue'
        profitRate:
          $ref: '#/components/schemas/field_ProfitDailyRate'
        portfolioEvaluation:
          $ref: '#/components/schemas/field_PortfolioEvaluationValue'
        portfolioLiquidationValue:
          $ref: '#/components/schemas/field_PortfolioLiquidationValue'
        initialMargin:
          $ref: '#/components/schemas/field_MarginInitial'
        correctedMargin:
          $ref: '#/components/schemas/field_MarginCorrected'
        riskBeforeForcePositionClosing:
          $ref: '#/components/schemas/field_RiskBeforeForcePositionClosing'
        commission:
          $ref: '#/components/schemas/field_Commission'
        buyingPowerByCurrency:
          $ref: '#/components/schemas/array_BuyingPowerByCurrency_Simple'
    response_Summary_Slim:
      type: object
      description: 'Сведения об указанном портфеле в формате `Slim`'
      properties:
        bpm:
          $ref: '#/components/schemas/field_BuyingPowerAtMorning'
        bp:
          $ref: '#/components/schemas/field_BuyingPower'
        p:
          $ref: '#/components/schemas/field_ProfitDailyValue'
        pr:
          $ref: '#/components/schemas/field_ProfitDailyRate'
        pe:
          $ref: '#/components/schemas/field_PortfolioEvaluationValue'
        plv:
          $ref: '#/components/schemas/field_PortfolioLiquidationValue'
        im:
          $ref: '#/components/schemas/field_MarginInitial'
        mgc:
          $ref: '#/components/schemas/field_MarginCorrected'
        r:
          $ref: '#/components/schemas/field_RiskBeforeForcePositionClosing'
        cms:
          $ref: '#/components/schemas/field_Commission'
        bpv2:
          $ref: '#/components/schemas/array_BuyingPowerByCurrency_Slim'
    response_Symbol_Heavy:
      type: object
      description: 'Котировка выбранного инструмента в формате `Heavy`'
      properties:
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        description:
          $ref: '#/components/schemas/field_Description'
        currency:
          $ref: '#/components/schemas/field_CurrencyCode'
        prevClosePrice:
          $ref: '#/components/schemas/field_PreviousClosePrice'
        lastPrice:
          $ref: '#/components/schemas/field_PriceLast'
        lastPriceTimestamp:
          $ref: '#/components/schemas/field_TimeLastPriceUnix'
        highPrice:
          $ref: '#/components/schemas/field_PriceMaximum'
        lowPrice:
          $ref: '#/components/schemas/field_PriceMinimum'
        accruedInterest:
          $ref: '#/components/schemas/field_AccruedInterest'
        volume:
          $ref: '#/components/schemas/field_VolumeGeneralDecimal'
        openInterest:
          $ref: '#/components/schemas/field_OpenInterest'
        ask:
          $ref: '#/components/schemas/field_AskPrice'
        bid:
          $ref: '#/components/schemas/field_BidPrice'
        askVol:
          $ref: '#/components/schemas/field_AskVolumeClosest'
        bidVol:
          $ref: '#/components/schemas/field_BidVolumeClosest'
        obMsTimestamp:
          $ref: '#/components/schemas/field_TimeOrderBookEntryUnixMS'
        openPrice:
          $ref: '#/components/schemas/field_PriceOpen'
        yield:
          $ref: '#/components/schemas/field_Yield_Common'
        lotSize:
          $ref: '#/components/schemas/field_LotSize'
        lotValue:
          $ref: '#/components/schemas/field_LotValue'
        faceValue:
          $ref: '#/components/schemas/field_FaceValue'
        type:
          $ref: '#/components/schemas/field_InstrumentType'
        totalBidVol:
          $ref: '#/components/schemas/field_BidVolumeTotal'
        totalAskVol:
          $ref: '#/components/schemas/field_AskVolumeTotal'
        change:
          $ref: '#/components/schemas/field_ChangeValue'
        changePercent:
          $ref: '#/components/schemas/field_ChangePercent'
    response_Symbol_Simple:
      type: object
      description: 'Котировка выбранного инструмента в формате `Simple`'
      properties:
        symbol:
          $ref: '#/components/schemas/field_Ticker'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        description:
          $ref: '#/components/schemas/field_Description'
        prev_close_price:
          $ref: '#/components/schemas/field_PreviousClosePrice'
        last_price:
          $ref: '#/components/schemas/field_PriceLast'
        last_price_timestamp:
          $ref: '#/components/schemas/field_TimeLastPriceUnix'
        high_price:
          $ref: '#/components/schemas/field_PriceMaximum'
        low_price:
          $ref: '#/components/schemas/field_PriceMinimum'
        accruedInt:
          $ref: '#/components/schemas/field_AccruedInterest'
        volume:
          $ref: '#/components/schemas/field_VolumeGeneralDecimal'
        open_interest:
          $ref: '#/components/schemas/field_OpenInterest'
        ask:
          $ref: '#/components/schemas/field_AskPrice'
        bid:
          $ref: '#/components/schemas/field_BidPrice'
        ask_vol:
          $ref: '#/components/schemas/field_AskVolumeClosest'
        bid_vol:
          $ref: '#/components/schemas/field_BidVolumeClosest'
        ob_ms_timestamp:
          $ref: '#/components/schemas/field_TimeOrderBookEntryUnixMS'
        open_price:
          $ref: '#/components/schemas/field_PriceOpen'
        yield:
          $ref: '#/components/schemas/field_Yield_Common'
        lotsize:
          $ref: '#/components/schemas/field_LotSize'
        lotvalue:
          $ref: '#/components/schemas/field_LotValue'
        facevalue:
          $ref: '#/components/schemas/field_FaceValue'
        type:
          $ref: '#/components/schemas/field_InstrumentType'
        total_bid_vol:
          $ref: '#/components/schemas/field_BidVolumeTotal'
        total_ask_vol:
          $ref: '#/components/schemas/field_AskVolumeTotal'
        accrued_interest:
          $ref: '#/components/schemas/field_AccruedInterest_Deprecated'
        change:
          $ref: '#/components/schemas/field_ChangeValue'
        change_percent:
          $ref: '#/components/schemas/field_ChangePercent'
    response_Symbol_Slim:
      type: object
      description: 'Котировка выбранного инструмента в формате `Slim`'
      properties:
        sym:
          $ref: '#/components/schemas/field_Ticker'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        desc:
          $ref: '#/components/schemas/field_Description'
        tst:
          $ref: '#/components/schemas/field_TimeLastPriceUnix'
        tso:
          $ref: '#/components/schemas/field_TimeOrderBookEntryUnixMS'
        o:
          $ref: '#/components/schemas/field_PriceOpen'
        h:
          $ref: '#/components/schemas/field_PriceMaximum'
        l:
          $ref: '#/components/schemas/field_PriceMinimum'
        c:
          $ref: '#/components/schemas/field_PriceLast'
        v:
          $ref: '#/components/schemas/field_VolumeGeneralDecimal'
        acci:
          $ref: '#/components/schemas/field_AccruedInterest'
        oi:
          $ref: '#/components/schemas/field_OpenInterest'
        y:
          $ref: '#/components/schemas/field_Yield_Common'
        ask:
          $ref: '#/components/schemas/field_AskPrice'
        bid:
          $ref: '#/components/schemas/field_BidPrice'
        av:
          $ref: '#/components/schemas/field_AskVolumeClosest'
        bv:
          $ref: '#/components/schemas/field_BidVolumeClosest'
        tbv:
          $ref: '#/components/schemas/field_BidVolumeTotal'
        tav:
          $ref: '#/components/schemas/field_AskVolumeTotal'
        lot:
          $ref: '#/components/schemas/field_LotSize'
        lotv:
          $ref: '#/components/schemas/field_LotValue'
        fv:
          $ref: '#/components/schemas/field_FaceValue'
        t:
          $ref: '#/components/schemas/field_InstrumentType'
    response_Symbols_Heavy:
      type: array
      description: 'Список котировок по заданным условиям в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_Symbol_Heavy'
    response_Symbols_Simple:
      type: array
      description: 'Список котировок по заданным условиям в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_Symbol_Simple'
    response_Symbols_Slim:
      type: array
      description: 'Список котировок по заданным условиям в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_Symbol_Slim'
    response_Time:
      type: integer
      format: int64
      example: 1532944071
      description: Текущее время (UTC) в формате Unix time seconds
    response_Trade_Heavy:
      type: object
      description: 'Сведения о совершённой ранее сделке в формате `Heavy`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierTradePortfolio'
        orderNo:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        comment:
          $ref: '#/components/schemas/field_CustomComment'
        symbol:
          $ref: '#/components/schemas/field_TickerUndefined'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        date:
          $ref: '#/components/schemas/field_TimeEndUTC'
        board:
          $ref: '#/components/schemas/field_Board'
        qtyUnits:
          $ref: '#/components/schemas/field_QuantityUnitsInt'
        qtyBatch:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        qty:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        accruedInt:
          $ref: '#/components/schemas/field_AccruedInterest'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
        commission:
          $ref: '#/components/schemas/field_Commission'
        repoSpecificFields:
          $ref: '#/components/schemas/object_RepoFields_Simple'
        volume:
          $ref: '#/components/schemas/field_VolumeByPriceTrade'
        settleDate:
          $ref: '#/components/schemas/field_SettlementDate'
    response_Trade_Simple:
      type: object
      description: 'Сведения о совершённой ранее сделке в формате `Simple`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierTradePortfolio'
        orderno:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        comment:
          $ref: '#/components/schemas/field_CustomComment'
        symbol:
          $ref: '#/components/schemas/field_TickerUndefined'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        date:
          $ref: '#/components/schemas/field_TimeEndUTC'
        board:
          $ref: '#/components/schemas/field_Board'
        qtyUnits:
          $ref: '#/components/schemas/field_QuantityUnitsInt'
        qtyBatch:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        qty:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        accruedInt:
          $ref: '#/components/schemas/field_AccruedInterest'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
        commission:
          $ref: '#/components/schemas/field_Commission'
        repoSpecificFields:
          $ref: '#/components/schemas/object_RepoFields_Simple'
        volume:
          $ref: '#/components/schemas/field_VolumeByPriceTrade'
    response_Trade_Slim:
      type: object
      description: 'Сведения о совершённой ранее сделке в формате `Slim`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierTradePortfolio'
        eid:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        cmt:
          $ref: '#/components/schemas/field_CustomComment'
        sym:
          $ref: '#/components/schemas/field_TickerUndefined'
        tic:
          $ref: '#/components/schemas/field_BrokerSymbol'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        d:
          $ref: '#/components/schemas/field_TimeEndUTC'
        b:
          $ref: '#/components/schemas/field_Board'
        q:
          $ref: '#/components/schemas/field_QuantityUnitsInt'
        qb:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        px:
          $ref: '#/components/schemas/field_PriceCommon'
        ai:
          $ref: '#/components/schemas/field_AccruedInterest'
        s:
          $ref: '#/components/schemas/field_SideCommon'
        h:
          $ref: '#/components/schemas/flag_Snapshot'
        cms:
          $ref: '#/components/schemas/field_Commission'
        r:
          $ref: '#/components/schemas/object_RepoFields_Slim'
        v:
          $ref: '#/components/schemas/field_VolumeByPriceTrade'
    response_Trade_V2_Heavy:
      type: object
      description: 'Сведения о совершённой ранее сделке в формате `Heavy`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierTradePortfolio'
        orderNo:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        comment:
          $ref: '#/components/schemas/field_CustomComment'
        symbol:
          $ref: '#/components/schemas/field_TickerUndefined'
        shortName:
          $ref: '#/components/schemas/field_ShortName'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        date:
          $ref: '#/components/schemas/field_TimeEndUTC'
        board:
          $ref: '#/components/schemas/field_Board'
        qtyUnits:
          $ref: '#/components/schemas/field_QuantityUnitsInt'
        qtyBatch:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        qty:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        currency:
          $ref: '#/components/schemas/field_CurrencyCode'
        accruedInt:
          $ref: '#/components/schemas/field_AccruedInterest'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
        commission:
          $ref: '#/components/schemas/field_Commission'
        repoSpecificFields:
          $ref: '#/components/schemas/object_RepoFields_Simple'
        volume:
          $ref: '#/components/schemas/field_VolumeByPriceTrade'
        settleDate:
          $ref: '#/components/schemas/field_SettlementDate'
    response_Trade_V2_Simple:
      type: object
      description: 'Сведения о совершённой ранее сделке в формате `Simple`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierTradePortfolio'
        orderno:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        comment:
          $ref: '#/components/schemas/field_CustomComment'
        symbol:
          $ref: '#/components/schemas/field_TickerUndefined'
        brokerSymbol:
          $ref: '#/components/schemas/field_BrokerSymbol'
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        date:
          $ref: '#/components/schemas/field_TimeEndUTC'
        board:
          $ref: '#/components/schemas/field_Board'
        qtyUnits:
          $ref: '#/components/schemas/field_QuantityUnitsInt'
        qtyBatch:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        qty:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        price:
          $ref: '#/components/schemas/field_PriceCommon'
        accruedInt:
          $ref: '#/components/schemas/field_AccruedInterest'
        side:
          $ref: '#/components/schemas/field_SideCommon'
        existing:
          $ref: '#/components/schemas/flag_Snapshot'
        commission:
          $ref: '#/components/schemas/field_Commission'
        repoSpecificFields:
          $ref: '#/components/schemas/object_RepoFields_Simple'
        volume:
          $ref: '#/components/schemas/field_VolumeByPriceTrade'
    response_Trade_V2_Slim:
      type: object
      description: 'Сведения о совершённой ранее сделке в формате `Slim`'
      properties:
        id:
          $ref: '#/components/schemas/field_IdentifierTradePortfolio'
        eid:
          $ref: '#/components/schemas/field_IdentifierOrderCommon'
        cmt:
          $ref: '#/components/schemas/field_CustomComment'
        sym:
          $ref: '#/components/schemas/field_TickerUndefined'
        tic:
          $ref: '#/components/schemas/field_BrokerSymbol'
        ex:
          $ref: '#/components/schemas/field_ExchangeCode'
        d:
          $ref: '#/components/schemas/field_TimeEndUTC'
        b:
          $ref: '#/components/schemas/field_Board'
        q:
          $ref: '#/components/schemas/field_QuantityUnitsInt'
        qb:
          $ref: '#/components/schemas/field_QuantityBatchCommon'
        px:
          $ref: '#/components/schemas/field_PriceCommon'
        ai:
          $ref: '#/components/schemas/field_AccruedInterest'
        s:
          $ref: '#/components/schemas/field_SideCommon'
        h:
          $ref: '#/components/schemas/flag_Snapshot'
        cms:
          $ref: '#/components/schemas/field_Commission'
        r:
          $ref: '#/components/schemas/object_RepoFields_Slim'
        v:
          $ref: '#/components/schemas/field_VolumeByPriceTrade'
    response_Trades_Heavy:
      type: array
      description: 'Список сделок со сведениями о них в формате `Heavy`'
      items:
        $ref: '#/components/schemas/response_Trade_Heavy'
    response_Trades_Simple:
      type: array
      description: 'Список сделок со сведениями о них в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_Trade_Simple'
    response_Trades_Slim:
      type: array
      description: 'Список сделок со сведениями о них в формате `Slim`'
      items:
        $ref: '#/components/schemas/response_Trade_Slim'
    response_Trades_V2_Heavy:
      type: array
      description: 'Список сделок со сведениями о них в формате `Heavy`'
      items:
        $ref: '#/components/schemas/response_Trade_V2_Heavy'
    response_Trades_V2_Simple:
      type: array
      description: 'Список сделок со сведениями о них в формате `Simple`'
      items:
        $ref: '#/components/schemas/response_Trade_V2_Simple'
    response_Trades_V2_Slim:
      type: array
      description: 'Список сделок со сведениями о них в формате `Slim`'
      items:
        $ref: '#/components/schemas/response_Trade_V2_Slim'
    response_TradingSession_Heavy:
      type: object
      description: 'Сведения о текущем состоянии торговой сессии в формате `Heavy`'
      properties:
        code:
          $ref: '#/components/schemas/field_MarketCode'
        status:
          $ref: '#/components/schemas/field_SessionStatus'
    response_TradingSession_Simple:
      type: object
      description: 'Сведения о текущем состоянии торговой сессии в формате `Simple`'
      properties:
        code:
          $ref: '#/components/schemas/field_MarketCode'
        status:
          $ref: '#/components/schemas/field_SessionStatus'
    response_TradingSession_Slim:
      type: object
      description: 'Сведения о текущем состоянии торговой сессии в формате `Slim`'
      properties:
        code:
          $ref: '#/components/schemas/field_MarketCode'
        status:
          $ref: '#/components/schemas/field_SessionStatus'
    ## WebSocket response bodies
    ### Request body base object
    ws_request_sub_BaseObject:
      type: object
      properties:
        exchange:
          $ref: '#/components/schemas/field_ExchangeCode'
        format:
          $ref: '#/components/schemas/field_Format'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
        token:
          $ref: '#/components/schemas/field_TokenAccess'
    ### Subscription response bodies
    ws_response_sub_AllTradesGetAndSubscribe_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_AllTrade_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_AllTradesGetAndSubscribe_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_AllTrade_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_AllTradesGetAndSubscribe_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_AllTrade_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_BarsGetAndSubscribe_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_HistoryObject_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_BarsGetAndSubscribe_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_HistoryObject_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_BarsGetAndSubscribe_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_HistoryObject_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_InstrumentsGetAndSubscribeV2_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Instruments_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_InstrumentsGetAndSubscribeV2_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Instruments_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_InstrumentsGetAndSubscribeV2_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Instruments_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_OrderBookGetAndSubscribe_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_OrderBook_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_OrderBookGetAndSubscribe_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_OrderBook_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_OrderBookGetAndSubscribe_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_OrderBook_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_OrdersGetAndSubscribe_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Order_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_OrdersGetAndSubscribe_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Order_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_OrdersGetAndSubscribe_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Order_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_PositionsGetAndSubscribe_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Position_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_PositionsGetAndSubscribe_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Position_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_PositionsGetAndSubscribe_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Position_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_QuotesSubscribe_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Symbol_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_QuotesSubscribe_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Symbol_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_QuotesSubscribe_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Symbol_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_RisksGetAndSubscribe_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Risk_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_RisksGetAndSubscribe_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Risk_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_RisksGetAndSubscribe_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Risk_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_SpectraRisksGetAndSubscribe_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_FortsRisk_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_SpectraRisksGetAndSubscribe_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_FortsRisk_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_SpectraRisksGetAndSubscribe_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_FortsRisk_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_StopOrdersGetAndSubscribe_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_StopOrder_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_StopOrdersGetAndSubscribe_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_StopOrder_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_StopOrdersGetAndSubscribe_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_StopOrder_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_StopOrdersGetAndSubscribeWarp_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_StopOrder_Warp_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_StopOrdersGetAndSubscribeWarp_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_StopOrder_Warp_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_StopOrdersGetAndSubscribeWarp_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_StopOrder_Warp_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_SummariesGetAndSubscribeV2_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Summary_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_SummariesGetAndSubscribeV2_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Summary_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_SummariesGetAndSubscribeV2_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Summary_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_TradesGetAndSubscribe_Heavy:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Trade_Heavy'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_TradesGetAndSubscribe_Simple:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Trade_Simple'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
    ws_response_sub_TradesGetAndSubscribe_Slim:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/response_Trade_Slim'
        guid:
          $ref: '#/components/schemas/field_GuidWs'
  requestBodies:
    ## REST
    EstimateOrder:
      description: 'Параметры заявки'
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/object_EstimateOrder'
    EstimateOrders:
      description: 'Список параметров заявок'
      required: true
      content:
        application/json:
          schema:
            type: array
            description: 'Список заявок для оценки стоимости и количества в лотах'
            items:
              $ref: '#/components/schemas/object_EstimateOrder'
    OrderGroupCreate:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса для объединения заявок в группу'
            properties:
              orders:
                type: array
                description: 'Заявки, из которых будет состоять группа'
                items:
                  $ref: '#/components/schemas/object_OrderGroupItem'
              executionPolicy:
                $ref: '#/components/schemas/field_ExecutionPolicy'
            required:
              - Orders
              - ExecutionPolicy
    OrderGroupModify:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса для изменения существующей группы заявок'
            properties:
              orders:
                type: array
                description: 'Заявки, из которых будет состоять группа'
                items:
                  $ref: '#/components/schemas/object_OrderGroupItem'
              executionPolicy:
                $ref: '#/components/schemas/field_ExecutionPolicy'
            required:
              - ExecutionPolicy
    OrdersActionsLimitTVPost:
      description: 'Тело заявки'
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на создание новой лимитной заявки'
            properties:
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              price:
                $ref: '#/components/schemas/field_PriceCommon'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              timeInForce:
                $ref: '#/components/schemas/field_ExecutionPeriod'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              icebergFixed:
                $ref: '#/components/schemas/field_QuantityFixed'
              icebergVariance:
                $ref: '#/components/schemas/field_QuantityVariance'
    OrdersActionsLimitTVPut:
      description: 'Тело заявки'
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на изменение лимитной заявки'
            properties:
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              price:
                $ref: '#/components/schemas/field_PriceCommon'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              icebergFixed:
                $ref: '#/components/schemas/field_QuantityFixed'
    OrdersActionsMarketTV:
      description: 'Тело заявки'
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на создание новой рыночной заявки'
            properties:
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              timeInForce:
                $ref: '#/components/schemas/field_ExecutionPeriod'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
    OrdersActionsStop:
      description: 'Тело заявки'
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на создание новой стоп-заявки'
            properties:
              Quantity:
                $ref: '#/components/schemas/field_QuantityCommon'
              Side:
                $ref: '#/components/schemas/field_SideCommon'
              TriggerPrice:
                $ref: '#/components/schemas/field_PriceTrigger'
              Instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchange'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              User:
                $ref: '#/components/schemas/object_UserPortfolioAndAccount'
              OrderEndUnixTime:
                $ref: '#/components/schemas/field_TimeEndUnix'
    OrdersActionsStopLimit:
      description: 'Тело заявки'
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на создание новой стоп-лимитной заявки'
            properties:
              Quantity:
                $ref: '#/components/schemas/field_QuantityCommon'
              Side:
                $ref: '#/components/schemas/field_SideCommon'
              TriggerPrice:
                $ref: '#/components/schemas/field_PriceTrigger'
              Price:
                $ref: '#/components/schemas/field_PriceCommon'
              Instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchange'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              User:
                $ref: '#/components/schemas/object_UserPortfolioAndAccount'
              OrderEndUnixTime:
                $ref: '#/components/schemas/field_TimeEndUnix'
              timeInForce:
                $ref: '#/components/schemas/field_ExecutionPeriod'
              icebergFixed:
                $ref: '#/components/schemas/field_QuantityFixed'
              icebergVariance:
                $ref: '#/components/schemas/field_QuantityVariance'
    OrdersActionsStopLimitTVWarpPost:
      description: 'Тело заявки'
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на создание новой стоп-лимитной заявки'
            properties:
              side:
                $ref: '#/components/schemas/field_SideCommon'
              condition:
                $ref: '#/components/schemas/field_ExecutionCondition'
              triggerPrice:
                $ref: '#/components/schemas/field_PriceTrigger'
              stopEndUnixTime:
                $ref: '#/components/schemas/field_TimeEndUnix'
              price:
                $ref: '#/components/schemas/field_PriceLimit'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              timeInForce:
                $ref: '#/components/schemas/field_ExecutionPeriod'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              icebergFixed:
                $ref: '#/components/schemas/field_QuantityFixed'
              icebergVariance:
                $ref: '#/components/schemas/field_QuantityVariance'
              protectingSeconds:
                $ref: '#/components/schemas/field_ProtectingSeconds'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              activate:
                $ref: '#/components/schemas/flag_ActivateOrder'
    OrdersActionsStopLimitTVWarpPut:
      description: 'Тело заявки'
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на изменение стоп-лимитной заявки'
            properties:
              side:
                $ref: '#/components/schemas/field_SideCommon'
              condition:
                $ref: '#/components/schemas/field_ExecutionCondition'
              triggerPrice:
                $ref: '#/components/schemas/field_PriceTrigger'
              stopEndUnixTime:
                $ref: '#/components/schemas/field_TimeEndUnix'
              price:
                $ref: '#/components/schemas/field_PriceLimit'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              timeInForce:
                $ref: '#/components/schemas/field_ExecutionPeriod'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              icebergFixed:
                $ref: '#/components/schemas/field_QuantityFixed'
              protectingSeconds:
                $ref: '#/components/schemas/field_ProtectingSeconds'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              activate:
                $ref: '#/components/schemas/flag_ActivateOrder'
    OrdersActionsStopMarketTVWarp:
      description: 'Тело заявки'
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на создание новой стоп-заявки'
            properties:
              side:
                $ref: '#/components/schemas/field_SideCommon'
              condition:
                $ref: '#/components/schemas/field_ExecutionCondition'
              triggerPrice:
                $ref: '#/components/schemas/field_PriceTrigger'
              stopEndUnixTime:
                $ref: '#/components/schemas/field_TimeEndUnix'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              protectingSeconds:
                $ref: '#/components/schemas/field_ProtectingSeconds'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              activate:
                $ref: '#/components/schemas/flag_ActivateOrder'
    RefreshAccessToken:
      description: 'Тело запроса на обновление JWT токена'
      required: false
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на обновление JWT токена'
            required:
              - token
            properties:
              token:
                $ref: '#/components/schemas/field_TokenRefresh'
              allowedPortfolios:
                $ref: '#/components/schemas/array_AllowedPortfolios'
    ## WebSocket
    ### CommandWS request bodies
    ws_cmd_Authorize:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на авторизацию соединения'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: authorize
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              token:
                $ref: '#/components/schemas/field_TokenAccess'
    ws_cmd_CreateOrder_Limit:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на создание новой лимитной заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: create:limit
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              price:
                $ref: '#/components/schemas/field_PriceCommon'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              timeInForce:
                $ref: '#/components/schemas/field_ExecutionPeriod'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              icebergFixed:
                $ref: '#/components/schemas/field_QuantityFixed'
              icebergVariance:
                $ref: '#/components/schemas/field_QuantityVariance'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
    ws_cmd_CreateOrder_Market:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на создание новой рыночной заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: create:market
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              timeInForce:
                $ref: '#/components/schemas/field_ExecutionPeriod'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
    ws_cmd_CreateOrder_Stop:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на создание новой стоп-заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: create:stop
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              condition:
                $ref: '#/components/schemas/field_ExecutionCondition'
              triggerPrice:
                $ref: '#/components/schemas/field_PriceTrigger'
              stopEndUnixTime:
                $ref: '#/components/schemas/field_TimeEndUnix'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
              protectingSeconds:
                $ref: '#/components/schemas/field_ProtectingSeconds'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              activate:
                $ref: '#/components/schemas/flag_ActivateOrder'
    ws_cmd_CreateOrder_StopLimit:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на создание новой стоп-лимитной заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: create:stopLimit
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              price:
                $ref: '#/components/schemas/field_PriceCommon'
              condition:
                $ref: '#/components/schemas/field_ExecutionCondition'
              triggerPrice:
                $ref: '#/components/schemas/field_PriceTrigger'
              stopEndUnixTime:
                $ref: '#/components/schemas/field_TimeEndUnix'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              timeInForce:
                $ref: '#/components/schemas/field_ExecutionPeriod'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              icebergFixed:
                $ref: '#/components/schemas/field_QuantityFixed'
              icebergVariance:
                $ref: '#/components/schemas/field_QuantityVariance'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
              protectingSeconds:
                $ref: '#/components/schemas/field_ProtectingSeconds'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              activate:
                $ref: '#/components/schemas/flag_ActivateOrder'
    ws_cmd_DeleteOrder_Limit:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на снятие лимитной заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: delete:limit
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              orderId:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
              exchange:
                $ref: '#/components/schemas/field_ExchangeCode'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
    ws_cmd_DeleteOrder_Market:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на снятие рыночной заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: delete:market
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              orderId:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
              exchange:
                $ref: '#/components/schemas/field_ExchangeCode'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
    ws_cmd_DeleteOrder_Stop:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на снятие стоп-заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: delete:stop
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              orderId:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
              exchange:
                $ref: '#/components/schemas/field_ExchangeCode'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
    ws_cmd_DeleteOrder_StopLimit:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на снятие стоп-лимитной заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: delete:stopLimit
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              orderId:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
              exchange:
                $ref: '#/components/schemas/field_ExchangeCode'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
    ws_cmd_UpdateOrder_Limit:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на изменение ранее созданной лимитной заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: update:limit
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              orderId:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              price:
                $ref: '#/components/schemas/field_PriceCommon'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              icebergFixed:
                $ref: '#/components/schemas/field_QuantityFixed'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
    ws_cmd_UpdateOrder_Market:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на изменение ранее созданной рыночной заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: update:market
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              orderId:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              timeInForce:
                $ref: '#/components/schemas/field_ExecutionPeriod'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
    ws_cmd_UpdateOrder_Stop:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на изменение ранее созданной стоп-заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: update:stop
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              orderId:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              condition:
                $ref: '#/components/schemas/field_ExecutionCondition'
              triggerPrice:
                $ref: '#/components/schemas/field_PriceTrigger'
              stopEndUnixTime:
                $ref: '#/components/schemas/field_TimeEndUnix'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
              protectingSeconds:
                $ref: '#/components/schemas/field_ProtectingSeconds'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              activate:
                $ref: '#/components/schemas/flag_ActivateOrder'
    ws_cmd_UpdateOrder_StopLimit:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: 'Тело запроса на изменение ранее созданной стоп-лимитной заявки'
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeCommand'
                  - example: update:stopLimit
              guid:
                $ref: '#/components/schemas/field_GuidCws'
              orderId:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
              side:
                $ref: '#/components/schemas/field_SideCommon'
              quantity:
                $ref: '#/components/schemas/field_QuantityBatchCommon'
              price:
                $ref: '#/components/schemas/field_PriceCommon'
              condition:
                $ref: '#/components/schemas/field_ExecutionCondition'
              triggerPrice:
                $ref: '#/components/schemas/field_PriceTrigger'
              stopEndUnixTime:
                $ref: '#/components/schemas/field_TimeEndUnix'
              instrument:
                $ref: '#/components/schemas/object_InstrumentFieldsSymbolExchangeGroup'
              user:
                $ref: '#/components/schemas/object_UserPortfolioOnly'
              timeInForce:
                $ref: '#/components/schemas/field_ExecutionPeriod'
              allowMargin:
                $ref: '#/components/schemas/flag_AllowMargin'
              icebergFixed:
                $ref: '#/components/schemas/field_QuantityFixed'
              checkDuplicates:
                $ref: '#/components/schemas/flag_CheckDuplicates'
              protectingSeconds:
                $ref: '#/components/schemas/field_ProtectingSeconds'
              comment:
                $ref: '#/components/schemas/field_CustomComment'
              activate:
                $ref: '#/components/schemas/flag_ActivateOrder'
    ### Subscription request bodies
    ws_sub_AllTradesGetAndSubscribe:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: AllTradesGetAndSubscribe
                  token:
                    $ref: '#/components/schemas/field_TokenAccess'
                  depth:
                    description: |
                      Если указать, то перед актуальными данными придут данные о последних N сделках.
                    type: integer
                    format: int32
                    example: 50
                    maximum: 5000
                  includeVirtualTrades:
                    description: Указывает, нужно ли отправлять виртуальные (индикативные) сделки
                    type: boolean
                    example: false
                  code:
                    $ref: '#/components/schemas/field_Ticker'
                  instrumentGroup:
                    $ref: '#/components/schemas/field_Board'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_BarsGetAndSubscribe:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: BarsGetAndSubscribe
                  code:
                    $ref: '#/components/schemas/field_Ticker'
                  instrumentGroup:
                    $ref: '#/components/schemas/field_Board'
                  tf:
                    description: |
                      Длительность таймфрейма. В качестве значения можно указать точное количество секунд или код таймфрейма:
                      * `15` — 15 секунд
                      * `60` — 60 секунд или 1 минута
                      * `3600` — 3600 секунд или 1 час
                      * `D` — сутки (соответствует значению 86400)
                      * `W` — неделя (соответствует значению 604800)
                      * `M` — месяц (соответствует значению 2592000)
                      * `Y` — год (соответствует значению 31536000)
                    type: string
                    example: "60"
                  from:
                    description: Дата и время (UTC) для первой запрашиваемой свечи
                    type: integer
                    format: int64
                    example: 1536557084
                  skipHistory:
                    $ref: '#/components/schemas/flag_SkipHistory'
                  splitAdjust:
                    $ref: '#/components/schemas/flag_SplitAdjust'
                  frequency:
                    $ref: '#/components/schemas/field_Frequency'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_InstrumentsGetAndSubscribeV2:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: InstrumentsGetAndSubscribeV2
                  code:
                    $ref: '#/components/schemas/field_Ticker'
                  instrumentGroup:
                    $ref: '#/components/schemas/field_Board'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_OrderBookGetAndSubscribe:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: OrderBookGetAndSubscribe
                    example: OrderBookGetAndSubscribe
                  code:
                    $ref: '#/components/schemas/field_Ticker'
                  instrumentGroup:
                    $ref: '#/components/schemas/field_Board'
                  depth:
                    $ref: '#/components/schemas/field_Depth'
                  frequency:
                    $ref: '#/components/schemas/field_Frequency'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_OrdersGetAndSubscribe:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: OrdersGetAndSubscribeV2
                  portfolio:
                    $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
                  orderStatuses:
                    description: 'Опциональный фильтр по статусам заявок. Влияет только на фильтрацию первичных исторических данных при подписке'
                    type: array
                    items:
                      $ref: '#/components/schemas/field_StatusOrder'
                  skipHistory:
                    $ref: '#/components/schemas/flag_SkipHistory'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_PositionsGetAndSubscribe:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: PositionsGetAndSubscribeV2
                  portfolio:
                    $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
                  skipHistory:
                    $ref: '#/components/schemas/flag_SkipHistory'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_QuotesSubscribe:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: QuotesSubscribe
                    example: QuotesSubscribe
                  code:
                    $ref: '#/components/schemas/field_Ticker'
                  instrumentGroup:
                    $ref: '#/components/schemas/field_Board'
                  frequency:
                    $ref: '#/components/schemas/field_Frequency'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_RisksGetAndSubscribe:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: RisksGetAndSubscribe
                  portfolio:
                    $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
                  skipHistory:
                    $ref: '#/components/schemas/flag_SkipHistory'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_SpectraRisksGetAndSubscribe:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: SpectraRisksGetAndSubscribe
                  portfolio:
                    $ref: '#/components/schemas/field_IdentifierPortfolio_FORTS'
                  skipHistory:
                    $ref: '#/components/schemas/flag_SkipHistory'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_StopOrdersGetAndSubscribe:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: StopOrdersGetAndSubscribe
                  portfolio:
                    $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_StopOrdersGetAndSubscribeV2:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: StopOrdersGetAndSubscribeV2
                  portfolio:
                    $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
                  orderStatuses:
                    description: 'Опциональный фильтр по статусам заявок. Влияет только на фильтрацию первичных исторических данных при подписке'
                    type: array
                    items:
                      $ref: '#/components/schemas/field_StatusOrder'
                  skipHistory:
                    $ref: '#/components/schemas/flag_SkipHistory'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_SummariesGetAndSubscribeV2:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: SummariesGetAndSubscribeV2
                  portfolio:
                    $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
                  skipHistory:
                    $ref: '#/components/schemas/flag_SkipHistory'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_TradesGetAndSubscribe:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  opcode:
                    allOf:
                      - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                      - example: TradesGetAndSubscribeV2
                  portfolio:
                    $ref: '#/components/schemas/field_IdentifierPortfolio_FOND'
                  skipHistory:
                    $ref: '#/components/schemas/flag_SkipHistory'
              - $ref: '#/components/schemas/ws_request_sub_BaseObject'
    ws_sub_Unsubscribe:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              opcode:
                allOf:
                  - $ref: '#/components/schemas/field_WSOperationCodeSubscription'
                  - example: unsubscribe
              token:
                $ref: '#/components/schemas/field_TokenAccess'
              guid:
                description: Уникальный идентификатор подписки, от которой отписываемся.
                type: string
                example: f35a2373-612c-4518-54af-72025384f59b
  responses:
    ## REST
    200_AllTrades:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_AllTrades_Simple'
              - $ref: '#/components/schemas/response_AllTrades_Slim'
              - $ref: '#/components/schemas/response_AllTrades_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/AllTrades_Simple'
            Пример Slim:
              $ref: '#/components/examples/AllTrades_Slim'
            Пример Heavy:
              $ref: '#/components/examples/AllTrades_Heavy'
    200_AllTradesHistory:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_AllTradesHistory_Simple'
              - $ref: '#/components/schemas/response_AllTradesHistory_Slim'
              - $ref: '#/components/schemas/response_AllTradesHistory_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/AllTradesHistory_Simple'
            Пример Slim:
              $ref: '#/components/examples/AllTradesHistory_Slim'
            Пример Heavy:
              $ref: '#/components/examples/AllTradesHistory_Heavy'
    200_AvailableBoards:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_AvailableBoards'
          examples:
            Пример ответа:
              $ref: '#/components/examples/AvailableBoards'
    200_CurrencyPairs:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_CurrencyPairs'
          examples:
            Пример:
              $ref: '#/components/examples/CurrencyPairs'
    200_EstimateOrder:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_EstimateOrder'
          examples:
            Пример:
              $ref: '#/components/examples/EstimateOrder'
    200_EstimateOrders:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_EstimateOrders'
          examples:
            Пример:
              $ref: '#/components/examples/EstimateOrders'
    200_FortsRisk:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_FortsRisk_Simple'
              - $ref: '#/components/schemas/response_FortsRisk_Slim'
              - $ref: '#/components/schemas/response_FortsRisk_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/FortsRisk_Simple'
            Пример Slim:
              $ref: '#/components/examples/FortsRisk_Slim'
            Пример Heavy:
              $ref: '#/components/examples/FortsRisk_Heavy'
    200_Futures:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Futures_Simple'
              - $ref: '#/components/schemas/response_Futures_Slim'
              - $ref: '#/components/schemas/response_Futures_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Futures_Simple'
            Пример Slim:
              $ref: '#/components/examples/Futures_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Futures_Heavy'
    200_History:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_History_Simple'
              - $ref: '#/components/schemas/response_History_Slim'
              - $ref: '#/components/schemas/response_History_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/History_Simple'
            Пример Slim:
              $ref: '#/components/examples/History_Slim'
            Пример Heavy:
              $ref: '#/components/examples/History_Heavy'
    200_Money:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Money_Simple'
              - $ref: '#/components/schemas/response_Money_Slim'
              - $ref: '#/components/schemas/response_Money_Heavy'
          example:
            cash: 25614.89
            used: 45536.11
            open: 45536.11
            profit: -354.7
            profitRate: -354.7
            comission: 2
            changes: 525.21
            portfolio: 525.56
            free: 525.25
    200_Order:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Order_Simple'
              - $ref: '#/components/schemas/response_Order_Slim'
              - $ref: '#/components/schemas/response_Order_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Order_Simple'
            Пример Slim:
              $ref: '#/components/examples/Order_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Order_Heavy'
    200_OrderAction_Delete:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/field_Message'
              - example: Succeeded
    200_OrderActionLimitMarket:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_OrderActionLimitMarket'
          examples:
            Пример:
              $ref: '#/components/examples/OrderActionLimitMarket'
    200_OrderActionLimitMarket_CommandAPI:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_OrderActionLimitMarket_CommandAPI'
          examples:
            Пример:
              $ref: '#/components/examples/OrderActionLimitMarket_CommandAPI'
    200_OrderActionStopProfitLoss:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_OrderActionStopProfitLoss'
    200_OrderBook:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_OrderBook_Simple'
              - $ref: '#/components/schemas/response_OrderBook_Slim'
              - $ref: '#/components/schemas/response_OrderBook_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/OrderBook_Simple'
            Пример Slim (Общий):
              $ref: '#/components/examples/OrderBook_Common_Slim'
            Пример Slim (Облигации):
              $ref: '#/components/examples/OrderBook_Bonds_Slim'
            Пример Heavy:
              $ref: '#/components/examples/OrderBook_Heavy'
    200_OrderGroup_Creation:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_OrderGroupCreationSuccess'
    200_OrderGroup_Info:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_OrderGroupInfo'
          examples:
            Пример:
              $ref: '#/components/examples/OrderGroupInfo'
    200_OrderGroup_PutDelete:
      description: 'Запрос успешно обработан'
      content:
        text/plain:
          schema:
            allOf:
              - $ref: '#/components/schemas/field_Message'
              - example: success
          examples:
            Пример:
              $ref: '#/components/examples/MessageSuccessCommonText'
    200_OrderGroups_Info:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_OrderGroupsInfo'
          examples:
            Пример:
              $ref: '#/components/examples/OrderGroupsInfo'
    200_Orders:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Orders_Simple'
              - $ref: '#/components/schemas/response_Orders_Slim'
              - $ref: '#/components/schemas/response_Orders_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Orders_Simple'
            Пример Slim:
              $ref: '#/components/examples/Orders_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Orders_Heavy'
    200_Position:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Position_Simple'
              - $ref: '#/components/schemas/response_Position_Slim'
              - $ref: '#/components/schemas/response_Position_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Position_Simple'
            Пример Slim:
              $ref: '#/components/examples/Position_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Position_Heavy'
    200_Positions:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Positions_Simple'
              - $ref: '#/components/schemas/response_Positions_Slim'
              - $ref: '#/components/schemas/response_Positions_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Positions_Simple'
            Пример Slim:
              $ref: '#/components/examples/Positions_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Positions_Heavy'
    200_Risk:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Risk_Simple'
              - $ref: '#/components/schemas/response_Risk_Slim'
              - $ref: '#/components/schemas/response_Risk_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Risk_Simple'
            Пример Slim:
              $ref: '#/components/examples/Risk_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Risk_Heavy'
    200_RiskRates:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_RiskRates'
          examples:
            Пример:
              $ref: '#/components/examples/RiskRates'
    200_Securities:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Securities_Simple'
              - $ref: '#/components/schemas/response_Securities_Slim'
              - $ref: '#/components/schemas/response_Securities_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Securities_Simple'
            Пример Slim:
              $ref: '#/components/examples/Securities_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Securities_Heavy'
    200_Security:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Security_Simple'
              - $ref: '#/components/schemas/response_Security_Slim'
              - $ref: '#/components/schemas/response_Security_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Security_Simple'
            Пример Slim:
              $ref: '#/components/examples/Security_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Security_Heavy'
    200_StopOrder_Warp:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_StopOrder_Warp_Simple'
              - $ref: '#/components/schemas/response_StopOrder_Warp_Slim'
              - $ref: '#/components/schemas/response_StopOrder_Warp_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/StopOrder_Warp_Simple'
            Пример Slim:
              $ref: '#/components/examples/StopOrder_Warp_Slim'
            Пример Heavy:
              $ref: '#/components/examples/StopOrder_Warp_Heavy'
    200_StopOrders_Warp:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_StopOrders_Warp_Simple'
              - $ref: '#/components/schemas/response_StopOrders_Warp_Slim'
              - $ref: '#/components/schemas/response_StopOrders_Warp_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/StopOrders_Warp_Simple'
            Пример Slim:
              $ref: '#/components/examples/StopOrders_Warp_Slim'
            Пример Heavy:
              $ref: '#/components/examples/StopOrders_Warp_Heavy'
    200_Summary:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Summary_Simple'
              - $ref: '#/components/schemas/response_Summary_Slim'
              - $ref: '#/components/schemas/response_Summary_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Summary_Simple'
            Пример Slim:
              $ref: '#/components/examples/Summary_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Summary_Heavy'
    200_Symbols:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Symbols_Simple'
              - $ref: '#/components/schemas/response_Symbols_Slim'
              - $ref: '#/components/schemas/response_Symbols_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Symbols_Simple'
            Пример Slim:
              $ref: '#/components/examples/Symbols_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Symbols_Heavy'
    200_Time:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_Time'
          examples:
            Пример:
              $ref: '#/components/examples/Time'
    200_Trades:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Trades_Simple'
              - $ref: '#/components/schemas/response_Trades_Slim'
              - $ref: '#/components/schemas/response_Trades_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Trade_Simple'
            Пример Slim:
              $ref: '#/components/examples/Trade_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Trade_Heavy'
    200_Trades_V2:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_Trades_V2_Simple'
              - $ref: '#/components/schemas/response_Trades_V2_Slim'
              - $ref: '#/components/schemas/response_Trades_V2_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/Trades_V2_Simple'
            Пример Slim:
              $ref: '#/components/examples/Trades_V2_Slim'
            Пример Heavy:
              $ref: '#/components/examples/Trades_V2_Heavy'
    200_TradingSession:
      description: 'Запрос успешно обработан'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/response_TradingSession_Simple'
              - $ref: '#/components/schemas/response_TradingSession_Slim'
              - $ref: '#/components/schemas/response_TradingSession_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/TradingSession_Simple'
            Пример Slim:
              $ref: '#/components/examples/TradingSession_Slim'
            Пример Heavy:
              $ref: '#/components/examples/TradingSession_Heavy'
    400_Get:
      description: 'Не удалось выполнить запрос. Проверьте синтаксис запроса и корректность заданных значений'
    400_OrderGroup_Creation:
      description: Не удалось выполнить запрос. Проверьте синтаксис запроса и корректность заданных значений
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_OrderGroupCreationError'
    400_Post_Put:
      description: Не удалось выполнить запрос. Проверьте синтаксис запроса и корректность заданных значений
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_OrderActionCode400_CommandAPI'
          examples:
            Пример:
              $ref: '#/components/examples/OrderActionCode400_CommandAPI'
    400_Post_Put_Deprecated:
      description: Не удалось выполнить запрос. Проверьте синтаксис запроса и корректность заданных значений
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/response_OrderActionCode400'
    '401':
      description: 'Не удалось авторизовать запрос — `JWT` не указан в заголовке запроса, срок его действия истёк или он относится к другому контуру системы'
    '403':
      description: 'Недостаточно прав для получения информации. Проверьте корректность заданных значений'
    '404':
      description: 'Не удалось найти ресурс с указанными параметрами. Проверьте корректность заданных значений'
    '429':
      description: 'Превышен лимит одновременно выполняемых запросов'
    '500':
      description: 'Не удалось выполнить запрос. Проверьте корректность указанных данных и синтаксиса, и повторите запрос позднее'
    ## WebSocket
    ### Commands
    ws_Commands_200_Authorize:
      description: 'OK' 
      content:
        application/json:
          schema:
            type: object
            description: 'Пример ответа на успешный запрос на авторизацию соединения'
            properties:
              requestGuid:
                $ref: '#/components/schemas/field_GuidCws'
              httpCode:
                $ref: '#/components/schemas/field_HTTPCode200'
              message:
                allOf:
                  - $ref: '#/components/schemas/field_Message'
                  - example: The connection has been initialized.
    ws_Commands_200_Create:
      description: 'Заявка успешно создана' 
      content:
        application/json:
          schema:
            type: object
            description: 'Пример ответа на успешный запрос на создание заявки'
            properties:
              requestGuid:
                $ref: '#/components/schemas/field_GuidCws'
              httpCode:
                $ref: '#/components/schemas/field_HTTPCode200'
              message:
                allOf:
                  - $ref: '#/components/schemas/field_Message'
                  - example: An order '12345' has been created.
              orderNumber:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
    ws_Commands_200_Delete:
      description: 'Заявка успешно отменена' 
      content:
        application/json:
          schema:
            type: object
            description: 'Пример ответа на успешный запрос на удаление заявки'
            properties:
              requestGuid:
                $ref: '#/components/schemas/field_GuidCws'
              httpCode:
                $ref: '#/components/schemas/field_HTTPCode200'
              message:
                allOf:
                  - $ref: '#/components/schemas/field_Message'
                  - example: An order '12345' has been deleted.
              orderNumber:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
    ws_Commands_200_Update:
      description: 'Заявка успешно изменена' 
      content:
        application/json:
          schema:
            type: object
            description: 'Пример ответа на успешный запрос на изменение заявки'
            properties:
              requestGuid:
                $ref: '#/components/schemas/field_GuidCws'
              httpCode:
                $ref: '#/components/schemas/field_HTTPCode200'
              message:
                allOf:
                  - $ref: '#/components/schemas/field_Message'
                  - example: An order has been updated. New order Id is '12345'.
              orderNumber:
                $ref: '#/components/schemas/field_IdentifierOrderCommon'
    ws_Commands_400:
      description: 'Bad request' 
      content:
        application/json:
          schema:
            type: object
            description: 'Пример ответа на некорректный запрос'
            properties:
              requestGuid:
                $ref: '#/components/schemas/field_GuidCws'
              httpCode:
                $ref: '#/components/schemas/field_HTTPCode400'
              message:
                allOf:
                  - $ref: '#/components/schemas/field_Message'
                  - example: Invalid or unsupported quantity
    ### Subscriptions
    ws_Subscription_100_AllTradesGetAndSubscribe:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_AllTradesGetAndSubscribe_Simple'
              - $ref: '#/components/schemas/ws_response_sub_AllTradesGetAndSubscribe_Slim'
              - $ref: '#/components/schemas/ws_response_sub_AllTradesGetAndSubscribe_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_AllTradesGetAndSubscribe_Simple'
            Пример Slim:
              $ref: '#/components/examples/ws_AllTradesGetAndSubscribe_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_AllTradesGetAndSubscribe_Heavy'
    ws_Subscription_100_BarsGetAndSubscribe:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_BarsGetAndSubscribe_Simple'
              - $ref: '#/components/schemas/ws_response_sub_BarsGetAndSubscribe_Slim'
              - $ref: '#/components/schemas/ws_response_sub_BarsGetAndSubscribe_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_BarsGetAndSubscribe_Simple'
            Пример Slim:
              $ref: '#/components/examples/ws_BarsGetAndSubscribe_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_BarsGetAndSubscribe_Heavy'
    ws_Subscription_100_InstrumentsGetAndSubscribeV2:
      description: 'В первом ответе сервер возвращает полную информацию о выбранном инструменте. Последующие сообщения содержат только те поля, значение которых изменилось. Запросить текущее состояние по всем полям возможно через вызов группы `/securities`'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_InstrumentsGetAndSubscribeV2_Simple'
              - $ref: '#/components/schemas/ws_response_sub_InstrumentsGetAndSubscribeV2_Slim'
              - $ref: '#/components/schemas/ws_response_sub_InstrumentsGetAndSubscribeV2_Heavy'
          examples:
            Полный ответ Simple:
              $ref: '#/components/examples/ws_InstrumentsGetAndSubscribeV2_Full_Simple'
            Полный ответ Slim:
              $ref: '#/components/examples/ws_InstrumentsGetAndSubscribeV2_Full_Slim'
            Полный ответ Heavy:
              $ref: '#/components/examples/ws_InstrumentsGetAndSubscribeV2_Full_Heavy'
            Частичный ответ Simple:
              $ref: '#/components/examples/ws_InstrumentsGetAndSubscribeV2_Partial_Simple'
            Частичный ответ Slim:
              $ref: '#/components/examples/ws_InstrumentsGetAndSubscribeV2_Partial_Slim'
            Частичный ответ Heavy:
              $ref: '#/components/examples/ws_InstrumentsGetAndSubscribeV2_Partial_Heavy'
    ws_Subscription_100_OrderBookGetAndSubscribe:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_OrderBookGetAndSubscribe_Simple'
              - $ref: '#/components/schemas/ws_response_sub_OrderBookGetAndSubscribe_Slim'
              - $ref: '#/components/schemas/ws_response_sub_OrderBookGetAndSubscribe_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_OrderBookGetAndSubscribe_Simple'
            Пример Slim (Общий):
              $ref: '#/components/examples/ws_OrderBookGetAndSubscribe_Common_Slim'
            Пример Slim (Облигации):
              $ref: '#/components/examples/ws_OrderBookGetAndSubscribe_Bonds_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_OrderBookGetAndSubscribe_Heavy'
    ws_Subscription_100_OrdersGetAndSubscribe:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_OrdersGetAndSubscribe_Simple'
              - $ref: '#/components/schemas/ws_response_sub_OrdersGetAndSubscribe_Slim'
              - $ref: '#/components/schemas/ws_response_sub_OrdersGetAndSubscribe_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_OrdersGetAndSubscribe_Simple'
            Пример Slim:
              $ref: '#/components/examples/ws_OrdersGetAndSubscribe_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_OrdersGetAndSubscribe_Heavy'
    ws_Subscription_100_PositionsGetAndSubscribe:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_PositionsGetAndSubscribe_Simple'
              - $ref: '#/components/schemas/ws_response_sub_PositionsGetAndSubscribe_Slim'
              - $ref: '#/components/schemas/ws_response_sub_PositionsGetAndSubscribe_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_PositionsGetAndSubscribe_Simple'
            Пример Slim:
              $ref: '#/components/examples/ws_PositionsGetAndSubscribe_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_PositionsGetAndSubscribe_Heavy'
    ws_Subscription_100_QuotesSubscribe:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_QuotesSubscribe_Simple'
              - $ref: '#/components/schemas/ws_response_sub_QuotesSubscribe_Slim'
              - $ref: '#/components/schemas/ws_response_sub_QuotesSubscribe_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_QuotesSubscribe_Simple'
            Пример Slim:
              $ref: '#/components/examples/ws_QuotesSubscribe_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_QuotesSubscribe_Heavy'
    ws_Subscription_100_RisksGetAndSubscribe:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_RisksGetAndSubscribe_Simple'
              - $ref: '#/components/schemas/ws_response_sub_RisksGetAndSubscribe_Slim'
              - $ref: '#/components/schemas/ws_response_sub_RisksGetAndSubscribe_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_RisksGetAndSubscribe_Simple'
            Пример Slim:
              $ref: '#/components/examples/ws_RisksGetAndSubscribe_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_RisksGetAndSubscribe_Heavy'
    ws_Subscription_100_SpectraRisksGetAndSubscribe:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_SpectraRisksGetAndSubscribe_Simple'
              - $ref: '#/components/schemas/ws_response_sub_SpectraRisksGetAndSubscribe_Slim'
              - $ref: '#/components/schemas/ws_response_sub_SpectraRisksGetAndSubscribe_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_SpectraRisksGetAndSubscribe_Simple'
            Пример Slim:
              $ref: '#/components/examples/ws_SpectraRisksGetAndSubscribe_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_SpectraRisksGetAndSubscribe_Heavy'
    ws_Subscription_100_StopOrdersGetAndSubscribe:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_StopOrdersGetAndSubscribe_Simple'
              - $ref: '#/components/schemas/ws_response_sub_StopOrdersGetAndSubscribe_Slim'
              - $ref: '#/components/schemas/ws_response_sub_StopOrdersGetAndSubscribe_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_StopOrdersGetAndSubscribe_Heavy'
            Пример Slim:
              $ref: '#/components/examples/ws_StopOrdersGetAndSubscribe_Simple'
            Пример Heavy:
              $ref: '#/components/examples/ws_StopOrdersGetAndSubscribe_Slim'
    ws_Subscription_100_StopOrdersGetAndSubscribeWarp:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_StopOrdersGetAndSubscribeWarp_Simple'
              - $ref: '#/components/schemas/ws_response_sub_StopOrdersGetAndSubscribeWarp_Slim'
              - $ref: '#/components/schemas/ws_response_sub_StopOrdersGetAndSubscribeWarp_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_StopOrdersGetAndSubscribeV2_Simple'
            Пример Slim:
              $ref: '#/components/examples/ws_StopOrdersGetAndSubscribeV2_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_StopOrdersGetAndSubscribeV2_Heavy'
    ws_Subscription_100_SummariesGetAndSubscribeV2:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_SummariesGetAndSubscribeV2_Simple'
              - $ref: '#/components/schemas/ws_response_sub_SummariesGetAndSubscribeV2_Slim'
              - $ref: '#/components/schemas/ws_response_sub_SummariesGetAndSubscribeV2_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_SummariesGetAndSubscribeV2_Simple'
            Пример Slim:
              $ref: '#/components/examples/ws_SummariesGetAndSubscribeV2_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_SummariesGetAndSubscribeV2_Heavy'
    ws_Subscription_100_TradesGetAndSubscribe:
      description: 'В качестве ответа приходят объекты как в этой схеме'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ws_response_sub_TradesGetAndSubscribe_Simple'
              - $ref: '#/components/schemas/ws_response_sub_TradesGetAndSubscribe_Slim'
              - $ref: '#/components/schemas/ws_response_sub_TradesGetAndSubscribe_Heavy'
          examples:
            Пример Simple:
              $ref: '#/components/examples/ws_TradesGetAndSubscribe_Simple'
            Пример Slim:
              $ref: '#/components/examples/ws_TradesGetAndSubscribe_Slim'
            Пример Heavy:
              $ref: '#/components/examples/ws_TradesGetAndSubscribe_Heavy'
    ws_Subscription_200:
      description: 'Сообщение о результатах обработки запроса на подписку'
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                allOf:
                  - $ref: '#/components/schemas/field_Message'
                  - example: Handled successfully
              httpCode:
                $ref: '#/components/schemas/field_HTTPCode200'
              requestGuid:
                $ref: '#/components/schemas/field_GuidWs'
          examples:
            Пример:
              $ref: '#/components/examples/ws_HandledSuccessfully'
    ws_Subscription_401:
      description: 'Не удалось авторизовать запрос — `JWT` не указан в теле запроса, срок его действия истёк или он относится к другому контуру системы'
      content:
        application/json:
          schema:
            type: object
            properties:
              requestGuid:
                $ref: '#/components/schemas/field_GuidWs'
              httpCode:
                $ref: '#/components/schemas/field_HTTPCode401'
              message:
                allOf:
                  - $ref: '#/components/schemas/field_Message'
                  - example: Invalid JWT token!
          examples:
            Пример:
              $ref: '#/components/examples/ws_InvalidJWT'
  examples:
    # Response examples referenced in paths
    ## HTTP API response examples
    AllTrades_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        - id: 159
          symbol: SBER
          board: TQBR
          qty: 1
          price: 142.52
          time: '2018-08-07T08:40:03.445Z'
          timestamp: 1611158710768
          side: buy
          oi: 523920
          existing: false  
    AllTrades_Simple:
      summary: Пример ответа в формате Simple
      value:
        - id: 159
          orderno: 0
          symbol: SBER
          board: TQBR
          qty: 1
          price: 142.52
          time: '2018-08-07T08:40:03.445Z'
          timestamp: 1611158710768
          side: buy
          oi: 523920
          existing: false
    AllTrades_Slim:
      summary: Пример ответа в формате Slim
      value:
        - id: 159
          sym: SBER
          bd: TQBR
          q: 1
          px: 142.52
          t: 1611158710768
          s: buy
          oi: 523920
          h: false  
    AllTradesHistory_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        total: 23
        list:
          id: 159
          symbol: SBER
          board: TQBR
          qty: 1
          price: 142.52
          time: '2018-08-07T08:40:03.445Z'
          timestamp: 1611158710768
          side: buy
          oi: 523920
          existing: false
    AllTradesHistory_Simple:
      summary: Пример ответа в формате Simple
      value:
        total: 23
        list:
          id: 159
          orderno: 0
          symbol: SBER
          board: TQBR
          qty: 1
          price: 142.52
          time: '2018-08-07T08:40:03.445Z'
          timestamp: 1611158710768
          side: buy
          oi: 523920
          existing: false
    AllTradesHistory_Slim:
      summary: Пример ответа в формате Slim
      value:
        total: 23
        list:
          id: 159
          sym: SBER
          bd: TQBR
          q: 1
          px: 142.52
          t: 1611158710768
          s: buy
          oi: 523920
          h: false  
    AvailableBoards:
      summary: Пример ответа
      value:
        - RPEU
        - EQWD
        - EQRP
        - SPEQ
        - LIQR
        - PSRD
        - PSEQ
        - EQWY
        - RPEY
        - PSRY
        - PSRE
        - LIQB
        - EQWE
        - PTEQ
        - TQBR
        - EQRD
        - MPTR
        - RPEO
        - EQWP
        - RPMO
        - EQRY
        - PSRP
        - TQDP
        - EQRE
    CurrencyPairs:
      summary: Пример ответа
      value:
        - firstCode: EUR
          secondCode: RUB
          symbolTom: EUR_RUB__TOM
    EstimateOrder:
      summary: Пример ответа
      value:
        portfolio: D39004
        ticker: SBER
        exchange: MOEX
        board: TQBR
        quantityToSell: 45
        quantityToBuy: 67
        notMarginQuantityToSell: 0
        notMarginQuantityToBuy: 32
        orderEvaluation: 11080
        commission: 5.54
        buyPrice:
        isUnitedPortfolio: false
    EstimateOrders:
      summary: Пример ответа
      value:
        - portfolio: D39004
          ticker: SBER
          exchange: MOEX
          board: TQBR
          quantityToSell: 45
          quantityToBuy: 67
          notMarginQuantityToSell: 0
          notMarginQuantityToBuy: 32
          orderEvaluation: 11080
          commission: 5.54
          buyPrice:
          isUnitedPortfolio: false
    FortsRisk_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        portfolio: 7500GHC
        moneyFree: 452404
        moneyBlocked: 12560
        fee: 651717
        moneyOld: 651717
        moneyAmount: 199313
        moneyPledgeAmount: 552061
        vmInterCl: 651717
        vmCurrentPositions: 199313
        varMargin: 552061
        indicativeVarMargin: 1720.32124
        netOptionValue: 0
        posRisk: 0
        isLimitsSet: false
    FortsRisk_Simple:
      summary: Пример ответа в формате Simple
      value:
        balanceMoney: 0
        portfolio: 7500GHC
        moneyFree: 452404
        moneyBlocked: 12560
        fee: 651717
        moneyOld: 651717
        moneyAmount: 199313
        moneyPledgeAmount: 552061
        vmInterCl: 651717
        vmCurrentPositions: 199313
        varMargin: 552061
        indicativeVarMargin: 1720.32124
        netOptionValue: 0
        posRisk: 0
        isLimitsSet: false
    FortsRisk_Slim:
      summary: Пример ответа в формате Slim
      value:
        p: 7500GHC
        f: 452404
        b: 12560
        fee: 651717
        o: 651717
        a: 199313
        pa: 552061
        mgc: 651717
        mgp: 199313
        ivm: 1720.32124
        nov: 0
        pr: 0
        lim: false
    Futures_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        symbol: SBRF-12.23
        exchange: MOEX
        description: SRZ3
        currency: RUB
        prevClosePrice: 26822
        lastPrice: 26908
        lastPriceTimestamp: 1702673398
        highPrice: 26964
        lowPrice: 26794
        accruedInterest:
        volume: 26200
        openInterest: 620868
        ask: 26954
        bid: 26883
        askVol: 19
        bidVol: 5
        obMsTimestamp: 0
        openPrice: 26823
        yield:
        lotSize: 1
        lotValue: 26908
        faceValue: 100
        type: Фьючерсный контракт SBRF-12.23
        totalBidVol: 10096
        totalAskVol: 8090
        change: 86
        changePercent: 0.32
    Futures_Simple:
      summary: Пример ответа в формате Simple
      value:
        symbol: SBRF-12.23
        exchange: MOEX
        description: SRZ3
        prev_close_price: 26822
        last_price: 26908
        last_price_timestamp: 1702673398
        high_price: 26964
        low_price: 26794
        accruedInt:
        volume: 26200
        open_interest: 620868
        ask: 26954
        bid: 26883
        ask_vol: 19
        bid_vol: 5
        ob_ms_timestamp: 0
        open_price: 26823
        yield:
        lotsize: 1
        lotvalue: 26908
        facevalue: 100
        type: Фьючерсный контракт SBRF-12.23
        total_bid_vol: 10096
        total_ask_vol: 8090
        accrued_interest:
        change: 86
        change_percent: 0.32
    Futures_Slim:
      summary: Пример ответа в формате Slim
      value:
        sym: SBRF-12.23
        ex: MOEX
        desc: SRZ3
        tst: 1702673398
        tso: 0
        o: 26823
        h: 26964
        l: 26794
        c: 26908
        v: 26200
        acci:
        oi: 620868
        y:
        ask: 26954
        bid: 26883
        av: 19
        bv: 5
        tbv: 10096
        tav: 8090
        lot: 1
        lotv: 26908
        fv: 100
        t: Фьючерсный контракт SBRF-12.23
    History_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        history:
        - time: 1701068400
          close: 287.79
          open: 287.41
          high: 287.9
          low: 287
          volume: 174466
        next: 1701069000
        prev: 1701068100
    History_Simple:
      summary: Пример ответа в формате Simple
      value:
        history:
        - time: 1701068400
          close: 287.79
          open: 287.41
          high: 287.9
          low: 287
          volume: 174466
        next: 1701069000
        prev: 1701068100
    History_Slim:
      summary: Пример ответа в формате Slim
      value:
        h:
        - t: 1701068400
          c: 287.79
          o: 287.41
          h: 287.9
          l: 287
          v: 174466
        next: 1701069000
        prev: 1701068100
    HistoryObject_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        time: 1701068400
        close: 287.79
        open: 287.41
        high: 287.9
        low: 287
        volume: 174466
    HistoryObject_Simple:
      summary: Пример ответа в формате Simple
      value:
        time: 1701068400
        close: 287.79
        open: 287.41
        high: 287.9
        low: 287
        volume: 174466
    HistoryObject_Slim:
      summary: Пример ответа в формате Slim
      value:
        t: 1701068400
        c: 287.79
        o: 287.41
        h: 287.9
        l: 287
        v: 174466
    MessageSuccessCommonText:
      summary: Заявка успешно снята
      value:
        success
    Order_Heavy:
      summary: 'Пример ответа в формате Heavy'
      value:
        id: '41423837024'
        symbol: GAZP
        board: TQBR
        brokerSymbol: MOEX:GAZP
        portfolio: D00013
        exchange: MOEX
        comment: Приказ на продажу
        type: limit
        side: buy
        status: working
        transTime: '2023-12-11T07:02:48.0000000Z'
        updateTime: '2023-12-11T07:02:48.0000000Z'
        endTime: '2023-12-11T23:59:59.9990000Z'
        qtyUnits: 10
        qtyBatch: 1
        filledQtyUnits: 0
        filledQtyBatch: 0
        price: 161.15
        existing: true
        timeInForce: fillorkill
        iceberg:
        volume: 1611.5
    Order_Simple:
      summary: Пример ответа в формате Simple
      value:
        id: '41423837024'
        symbol: GAZP
        board: TQBR
        brokerSymbol: MOEX:GAZP
        portfolio: D00013
        exchange: MOEX
        comment: Приказ на продажу
        type: limit
        side: buy
        status: working
        transTime: '2023-12-11T07:02:48.0000000Z'
        updateTime: '2023-12-11T07:02:48.0000000Z'
        endTime: '2023-12-11T23:59:59.9990000Z'
        qtyUnits: 10
        qtyBatch: 1
        qty: 1
        filledQtyUnits: 0
        filledQtyBatch: 0
        filled: 0
        price: 161.15
        existing: true
        timeInForce: oneday
        iceberg:
        volume: 1611.5
    Order_Slim:
      summary: 'Пример ответа в формате Slim'
      value:
        id: '41423837024'
        sym: GAZP
        bd: TQBR
        tic: MOEX:GAZP
        p: D00013
        ex: MOEX
        cmt: Приказ на продажу
        t: limit
        s: buy
        st: working
        tt: '2023-12-11T07:02:48.0000000Z'
        ut: '2023-12-11T07:02:48.0000000Z'
        et: '2023-12-11T23:59:59.9990000'
        q: 10
        qb: 1
        fq: 0
        fqb: 0
        px: 161.15
        h: true
        tf: fillorkill
        i:
        v: 1611.5
    OrderActionCode400_CommandAPI:
      summary: Заявка с указанным 'X-ALOR-REQID' уже существует
      value:
        message: Request with such X-ALOR-REQID was already handled.
        oldResponse:
          statusCode: 200
          body:
            message: success
            orderNumber: '409...153'
    OrderActionLimitMarket:
      summary: Заявка успешно изменена
      value:
        message: success
        orderNumber: '409...153'
    OrderActionLimitMarket_CommandAPI:
      summary: Заявка успешно сформирована
      value:
        message: success
        orderNumber: '409...153'
    OrderBook_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        bids:
        - price: 281.98
          volume: 36
        asks:
        - price: 281.99
          volume: 11
        msTimestamp: 1701105939395
        existing: true
    OrderBook_Simple:
      summary: Пример ответа в формате Simple
      value:
        snapshot: true
        bids:
        - price: 281.98
          volume: 36
        asks:
        - price: 281.99
          volume: 11
        timestamp: 1701105939
        ms_timestamp: 1701105939395
        existing: true
    OrderBook_Common_Slim:
      summary: Пример ответа в формате Slim (Общий)
      value:
        b:
        - p: 281.98
          v: 36
        a:
        - p: 281.99
          v: 11
        t: 1701105939395
        h: true
    OrderBook_Bonds_Slim:
      summary: Пример ответа в формате Slim (Облигации)
      value:
        b:
        - p: 70.589
          v: 146
          y: 16.21
        a:
        - p: 70.772
          v: 10
          y: 16.14
        t: 1721372266417
        h: false
    OrderGroupInfo:
      summary: Пример ответа с информацией о группе заявок
      value:
        id: 'daf88a4b-4393-4710-bff0-db98e679b375'
        login: 'P039004'
        orders:
        - orderId: '33977952408'
        executionPolicy: 'TriggerBracketOrders'
        status: 'Active'
        createdAt: '2023-10-30T05:26:25.1177405Z'
        closedAt: null
    OrderGroupsInfo:
      summary: Пример ответа с информацией о группе заявок
      value:
        - id: 'daf88a4b-4393-4710-bff0-db98e679b375'
          login: 'P039004'
          orders:
          - orderId: '33977952408'
          executionPolicy: 'TriggerBracketOrders'
          status: 'Active'
          createdAt: '2023-10-30T05:26:25.1177405Z'
          closedAt: null
    Orders_Heavy:
      summary: 'Пример ответа в формате Heavy'
      value:
        - id: '41423837024'
          symbol: GAZP
          brokerSymbol: MOEX:GAZP
          portfolio: D00013
          exchange: MOEX
          comment: Приказ на продажу
          type: limit
          side: buy
          status: working
          transTime: '2023-12-11T07:02:48.0000000Z'
          updateTime: '2023-12-11T07:02:48.0000000Z'
          endTime: '2023-12-11T23:59:59.9990000Z'
          qtyUnits: 10
          qtyBatch: 1
          filledQtyUnits: 0
          filledQtyBatch: 0
          price: 161.15
          existing: true
          timeInForce: fillorkill
          iceberg:
          volume: 1611.5
    Orders_Simple:
      summary: Пример ответа в формате Simple
      value:
        - id: '41423837024'
          symbol: GAZP
          brokerSymbol: MOEX:GAZP
          portfolio: D00013
          exchange: MOEX
          comment: Приказ на продажу
          type: limit
          side: buy
          status: working
          transTime: '2023-12-11T07:02:48.0000000Z'
          updateTime: '2023-12-11T07:02:48.0000000Z'
          endTime: '2023-12-11T23:59:59.9990000Z'
          qtyUnits: 10
          qtyBatch: 1
          qty: 1
          filledQtyUnits: 0
          filledQtyBatch: 0
          filled: 0
          price: 161.15
          existing: true
          timeInForce: oneday
          iceberg:
          volume: 1611.5
    Orders_Slim:
      summary: 'Пример ответа в формате Slim'
      value:
        - id: '41423837024'
          sym: GAZP
          tic: MOEX:GAZP
          p: D00013
          ex: MOEX
          cmt: Приказ на продажу
          t: limit
          s: buy
          st: working
          tt: '2023-12-11T07:02:48.0000000Z'
          ut: '2023-12-11T07:02:48.0000000Z'
          et: '2023-12-11T23:59:59.9990000'
          q: 10
          qb: 1
          fq: 0
          fqb: 0
          px: 161.15
          h: true
          tf: fillorkill
          i:
          v: 1611.5
    Position_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        volume: 549.198
        currentVolume: 555.24
        symbol: APTK
        brokerSymbol: MOEX:APTK
        portfolio: D00013
        exchange: MOEX
        avgPrice: 9.1533
        qtyUnits: 60
        openUnits: 60
        lotSize: 10
        shortName: Аптеки36и6
        qtyT0: 60
        qtyT1: 60
        qtyT2: 60
        qtyTFuture: 60
        qtyT0Batch: 6
        qtyT1Batch: 6
        qtyT2Batch: 6
        qtyTFutureBatch: 6
        openQtyBatch: 6
        dailyUnrealisedPl: 1.92
        unrealisedPl: 7.962
        isCurrency: false
        existing: true
    Position_Simple:
      summary: Пример ответа в формате Simple
      value:
        volume: 549.198
        currentVolume: 555.24
        symbol: APTK
        brokerSymbol: MOEX:APTK
        portfolio: D00013
        exchange: MOEX
        avgPrice: 9.1533
        qtyUnits: 60
        openUnits: 60
        lotSize: 10
        shortName: Аптеки36и6
        qtyT0: 60
        qtyT1: 60
        qtyT2: 60
        qtyTFuture: 60
        qtyT0Batch: 6
        qtyT1Batch: 6
        qtyT2Batch: 6
        qtyTFutureBatch: 6
        qtyBatch: 6
        openQtyBatch: 6
        qty: 6
        open: 6
        dailyUnrealisedPl: 1.92
        unrealisedPl: 7.962
        isCurrency: false
        existing: true
    Position_Slim:
      summary: Пример ответа в формате Slim
      value:
        v: 549.198
        cv: 555.24
        sym: APTK
        tic: MOEX:APTK
        p: D00013
        ex: MOEX
        pxavg: 9.1533
        q: 60
        o: 60
        lot: 10
        n: Аптеки36и6
        q0: 60
        q1: 60
        q2: 60
        qf: 60
        upd: 1.92
        up: 7.962
        cur: false
        h: true
    Positions_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        - volume: 549.198
          currentVolume: 555.24
          symbol: APTK
          brokerSymbol: MOEX:APTK
          portfolio: D00013
          exchange: MOEX
          avgPrice: 9.1533
          qtyUnits: 60
          openUnits: 60
          lotSize: 10
          shortName: Аптеки36и6
          qtyT0: 60
          qtyT1: 60
          qtyT2: 60
          qtyTFuture: 60
          qtyT0Batch: 6
          qtyT1Batch: 6
          qtyT2Batch: 6
          qtyTFutureBatch: 6
          openQtyBatch: 6
          dailyUnrealisedPl: 1.92
          unrealisedPl: 7.962
          isCurrency: false
          existing: true
    Positions_Simple:
      summary: Пример ответа в формате Simple
      value:
        - volume: 549.198
          currentVolume: 555.24
          symbol: APTK
          brokerSymbol: MOEX:APTK
          portfolio: D00013
          exchange: MOEX
          avgPrice: 9.1533
          qtyUnits: 60
          openUnits: 60
          lotSize: 10
          shortName: Аптеки36и6
          qtyT0: 60
          qtyT1: 60
          qtyT2: 60
          qtyTFuture: 60
          qtyT0Batch: 6
          qtyT1Batch: 6
          qtyT2Batch: 6
          qtyTFutureBatch: 6
          qtyBatch: 6
          openQtyBatch: 6
          qty: 6
          open: 6
          dailyUnrealisedPl: 1.92
          unrealisedPl: 7.962
          isCurrency: false
          existing: true
    Positions_Slim:
      summary: Пример ответа в формате Slim
      value:
        - v: 549.198
          cv: 555.24
          sym: APTK
          tic: MOEX:APTK
          p: D00013
          ex: MOEX
          pxavg: 9.1533
          q: 60
          o: 60
          lot: 10
          n: Аптеки36и6
          q0: 60
          q1: 60
          q2: 60
          qf: 60
          upd: 1.92
          up: 7.962
          cur: false
          h: true
    Risk_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        portfolio: 7500GHC
        exchange: MOEX
        portfolioEvaluation: 646270.9
        portfolioLiquidationValue: 646270.9
        initialMargin: 15752.115
        minimalMargin: 65177.0575
        correctedMargin: 15752.115
        riskCoverageRatioOne: 630518.785
        riskCoverageRatioTwo: 2557.0824546
        riskCategoryId: 2
        clientType: StandardRisk
        hasForbiddenPositions: false
        hasNegativeQuantity: false
        riskStatus: Ok
        calculationTime: '2025-04-19T10:17:54.8283796Z'
    Risk_Simple:
      summary: Пример ответа в формате Simple
      value:
        portfolio: 7500GHC
        exchange: MOEX
        portfolioEvaluation: 646270.9
        portfolioLiquidationValue: 646270.9
        initialMargin: 15752.115
        minimalMargin: 65177.0575
        correctedMargin: 15752.115
        riskCoverageRatioOne: 630518.785
        riskCoverageRatioTwo: 638394.8425
        riskCategoryId: 2
        clientType: StandardRisk
        hasForbiddenPositions: false
        hasNegativeQuantity: false
        riskStatus: Ok
        calculationTime: '2025-04-19T10:17:54.8283796Z'
    Risk_Slim:
      summary: Пример ответа в формате Slim
      value:
        p: 7500GHC
        ex: MOEX
        pe: 646270.9
        plv: 646270.9
        mgi: 15752.115
        mgmn: 65177.0575
        mgc: 15752.115
        r1: 630518.785
        r2: 638394.8425
        rid: 2
        ct: StandardRisk
        fpos: false
        nq: false
        rst: Ok
        t: '2025-04-19T10:17:54.8283796Z'
    RiskRates:
      summary: Пример ответа
      value:
        id: 65419
        instrument: SBER
        exchange: MOEX
        riskCategoryId: 5
        securityRiskCategoryId: 2
        assetType: stock
        underlyingAsset:
        setName:
        isin: RU0009029540
        currencyCode: RUB
        rateUp: 12.403999999999998
        rateDown: 5.795999999999999
        rateSymmetric: 13.089999999999998
        isShortSellPossible: true
        isMarginal: true
        setRate: 0
        sgnR: 0
    Securities_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        - symbol: CNY-6.25
          shortName: CRM5
          description: CRM5
          exchange: MOEX
          market: FORTS
          type: Фьючерсный контракт CNY-6.25
          lotSize: 1
          faceValue: 1000
          cfiCode: FFXCSX
          cancellation: '2025-06-19T00:00:00.0000000'
          minStep: 0.001
          roundTo: 3
          rating: 4952434
          marginBuy: 986.39
          marginSell: 1004.16
          marginRate: 0
          priceStep: 1
          priceMax: 11.868
          priceMin: 10.774
          theorPrice: 0
          theorPriceLimit: 0
          volatility: 0
          currency: RUB
          nominalCurrency: RUB
          settlementCurrency: null
          underlyingCurrency: null
          ISIN: null
          yield: null
          board: RFUD
          primaryBoard: RFUD
          tradingStatus: 17
          tradingStatusInfo: нормальный период торгов
          complexProductCategory: '2'
          priceMultiplier: 1
          priceShownUnits: 1
          initialMarginLowRiskLong: 2401.94
          initialMarginLowRiskShort: 2446.65
          initialMarginStandardRiskLong: 1799.81
          initialMarginStandardRiskShort: 1833.06
          initialMarginHighRiskLong: 988.4
          initialMarginHighRiskShort: 1006.2
          initialMarginSpecialRiskLong: 988.4
          initialMarginSpecialRiskShort: 1006.2
    Securities_Simple:
      summary: Пример ответа в формате Simple
      value:
        - symbol: CNY-6.25
          shortname: CRM5
          description: CRM5
          exchange: MOEX
          market: FORTS
          type: Фьючерсный контракт CNY-6.25
          lotsize: 1
          facevalue: 1000
          cfiCode: FFXCSX
          cancellation: '2025-06-19T00:00:00.0000000'
          minstep: 0.001
          rating: 4952434
          marginbuy: 986.39
          marginsell: 1004.16
          marginrate: 0
          pricestep: 1
          priceMax: 11.868
          priceMin: 10.774
          theorPrice: 0
          theorPriceLimit: 0
          volatility: 0
          currency: RUB
          ISIN: null
          yield: null
          board: RFUD
          primary_board: RFUD
          tradingStatus: 17
          tradingStatusInfo: нормальный период торгов
          complexProductCategory: '2'
          priceMultiplier: 1
          priceShownUnits: 1
    Securities_Slim:
      summary: Пример ответа в формате Slim
      value:
        - sym: CNY-6.25
          n: CRM5
          desc: CRM5
          ex: MOEX
          t: Фьючерсный контракт CNY-6.25
          lot: 1
          fv: 1000
          cfi: FFXCSX
          stp: 0.001
          cncl: '2025-06-19T00:00:00.0000000'
          rt: 4952434
          mgb: 986.39
          mgs: 1004.16
          mgrt: 0
          stppx: 1
          pxmx: 11.868
          pxmn: 10.774
          pxt: 0
          pxtl: 0
          pxmu: 1
          pxu: 1
          vl: 0
          cur: RUB
          isin: null
          yld: null
          bd: RFUD
          pbd: RFUD
          st: 17
          sti: нормальный период торгов
          cpct: '2'
    Security_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        symbol: CNY-6.25
        shortName: CRM5
        description: CRM5
        exchange: MOEX
        market: FORTS
        type: Фьючерсный контракт CNY-6.25
        lotSize: 1
        faceValue: 1000
        cfiCode: FFXCSX
        cancellation: '2025-06-19T00:00:00.0000000'
        minStep: 0.001
        roundTo: 3
        rating: 4952434
        marginBuy: 986.39
        marginSell: 1004.16
        marginRate: 0
        priceStep: 1
        priceMax: 11.868
        priceMin: 10.774
        theorPrice: 0
        theorPriceLimit: 0
        volatility: 0
        currency: RUB
        nominalCurrency: RUB
        settlementCurrency: null
        underlyingCurrency: null
        ISIN: null
        yield: null
        board: RFUD
        primaryBoard: RFUD
        tradingStatus: 17
        tradingStatusInfo: нормальный период торгов
        complexProductCategory: '2'
        priceMultiplier: 1
        priceShownUnits: 1
        initialMarginLowRiskLong: 2401.94
        initialMarginLowRiskShort: 2446.65
        initialMarginStandardRiskLong: 1799.81
        initialMarginStandardRiskShort: 1833.06
        initialMarginHighRiskLong: 988.4
        initialMarginHighRiskShort: 1006.2
        initialMarginSpecialRiskLong: 988.4
        initialMarginSpecialRiskShort: 1006.2
    Security_Simple:
      summary: Пример ответа в формате Simple
      value:
        symbol: CNY-6.25
        shortname: CRM5
        description: CRM5
        exchange: MOEX
        market: FORTS
        type: Фьючерсный контракт CNY-6.25
        lotsize: 1
        facevalue: 1000
        cfiCode: FFXCSX
        cancellation: '2025-06-19T00:00:00.0000000'
        minstep: 0.001
        rating: 4952434
        marginbuy: 986.39
        marginsell: 1004.16
        marginrate: 0
        pricestep: 1
        priceMax: 11.868
        priceMin: 10.774
        theorPrice: 0
        theorPriceLimit: 0
        volatility: 0
        currency: RUB
        ISIN: null
        yield: null
        board: RFUD
        primary_board: RFUD
        tradingStatus: 17
        tradingStatusInfo: нормальный период торгов
        complexProductCategory: '2'
        priceMultiplier: 1
        priceShownUnits: 1
    Security_Slim:
      summary: Пример ответа в формате Slim
      value:
        sym: CNY-6.25
        n: CRM5
        desc: CRM5
        ex: MOEX
        t: Фьючерсный контракт CNY-6.25
        lot: 1
        fv: 1000
        cfi: FFXCSX
        stp: 0.001
        cncl: '2025-06-19T00:00:00.0000000'
        rt: 4952434
        mgb: 986.39
        mgs: 1004.16
        mgrt: 0
        stppx: 1
        pxmx: 11.868
        pxmn: 10.774
        pxt: 0
        pxtl: 0
        pxmu: 1
        pxu: 1
        vl: 0
        cur: RUB
        isin: null
        yld: null
        bd: RFUD
        pbd: RFUD
        st: 17
        sti: нормальный период торгов
        cpct: '2'
    StopOrder_Warp_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        id: 347499
        exchangeOrderId: 425242362
        symbol: SBER
        brokerSymbol: MOEX:LKOH
        portfolio: D39004
        exchange: MOEX
        comment: null
        board: TQBR
        type: stop
        side: buy
        condition: LessOrEqual
        status: working
        transTime: '2020-05-16T23:59:59.9990000Z'
        updateTime:
        endTime: '2020-06-16T23:59:59.9990000Z'
        error: null
        qtyUnits: 10
        qtyBatch: 1
        filledQtyUnits: 0
        filledQtyBatch: 0
        price: 0
        avgPrice: 0
        stopPrice: 208.6
        existing: true
        timeInForce: oneday
        iceberg:
        volume: 2086.1
        protectingSeconds: 15
    StopOrder_Warp_Simple:
      summary: Пример ответа в формате Simple
      value:
        id: 347499
        exchangeOrderId: 425242362
        symbol: SBER
        brokerSymbol: MOEX:LKOH
        portfolio: D39004
        exchange: MOEX
        comment: null
        board: TQBR
        type: stop
        side: buy
        condition: LessOrEqual
        status: working
        transTime: '2020-05-16T23:59:59.9990000Z'
        updateTime:
        endTime: '2020-06-16T23:59:59.9990000Z'
        error: null
        qtyUnits: 10
        qtyBatch: 1
        qty: 1
        filled: 0
        filledQtyUnits: 0
        filledQtyBatch: 0
        price: 0
        avg_price: 0
        stopPrice: 208.6
        existing: true
        timeInForce: oneday
        iceberg:
        volume: 2086.1
        protectingSeconds: 15
    StopOrder_Warp_Slim:
      summary: Пример ответа в формате Slim
      value:
        id: 347499
        eid: 425242362
        sym: SBER
        tic: MOEX:LKOH
        p: D39004
        ex: MOEX
        cmt: null
        bd: TQBR
        t: stop
        s: buy
        cnd: LessOrEqual
        st: working
        tt: '2020-05-16T23:59:59.9990000Z'
        ut:
        et: '2020-06-16T23:59:59.9990000Z'
        err: null
        q: 10
        qb: 1
        fq: 0
        fqb: 0
        px: 0
        pxavg: 0
        pxs: 208.6
        h: true
        tf: oneday
        i:
        v: 2086.1
        psec: 15
    StopOrders_Warp_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        - id: 347499
          exchangeOrderId: 425242362
          symbol: SBER
          brokerSymbol: MOEX:LKOH
          portfolio: D39004
          exchange: MOEX
          comment: null
          board: TQBR
          type: stop
          side: buy
          condition: LessOrEqual
          status: working
          transTime: '2020-05-16T23:59:59.9990000Z'
          updateTime:
          endTime: '2020-06-16T23:59:59.9990000Z'
          error: null
          qtyUnits: 10
          qtyBatch: 1
          filledQtyUnits: 0
          filledQtyBatch: 0
          price: 0
          avgPrice: 0
          stopPrice: 208.6
          existing: true
          timeInForce: oneday
          iceberg:
          volume: 2086.1
          protectingSeconds: 15
    StopOrders_Warp_Simple:
      summary: Пример ответа в формате Simple
      value:
        - id: 347499
          exchangeOrderId: 425242362
          symbol: SBER
          brokerSymbol: MOEX:LKOH
          portfolio: D39004
          exchange: MOEX
          comment: null
          board: TQBR
          type: stop
          side: buy
          condition: LessOrEqual
          status: working
          transTime: '2020-05-16T23:59:59.9990000Z'
          updateTime:
          endTime: '2020-06-16T23:59:59.9990000Z'
          error: null
          qtyUnits: 10
          qtyBatch: 1
          qty: 1
          filled: 0
          filledQtyUnits: 0
          filledQtyBatch: 0
          price: 0
          avg_price: 0
          stopPrice: 208.6
          existing: true
          timeInForce: oneday
          iceberg:
          volume: 2086.1
          protectingSeconds: 15
    StopOrders_Warp_Slim:
      summary: Пример ответа в формате Slim
      value:
        - id: 347499
          eid: 425242362
          sym: SBER
          tic: MOEX:LKOH
          p: D39004
          ex: MOEX
          cmt: null
          bd: TQBR
          t: stop
          s: buy
          cnd: LessOrEqual
          st: working
          tt: '2020-05-16T23:59:59.9990000Z'
          ut:
          et: '2020-06-16T23:59:59.9990000Z'
          err: null
          q: 10
          qb: 1
          fq: 0
          fqb: 0
          px: 0
          pxavg: 0
          pxs: 208.6
          h: true
          tf: oneday
          i:
          v: 2086.1
          psec: 15
    Summary_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        buyingPowerAtMorning: 439844.15
        buyingPower: 452404
        profit: 12560
        profitRate: 1.93
        portfolioEvaluation: 651717
        portfolioLiquidationValue: 651717
        initialMargin: 199313
        correctedMargin: 15752.115
        riskBeforeForcePositionClosing: 552061
        commission: 24.21
        buyingPowerByCurrency:
        - currency: RUB
          buyingPower: 452404.2194509200
    Summary_Simple:
      summary: Пример ответа в формате Simple
      value:
        buyingPowerAtMorning: 439844.15
        buyingPower: 452404
        profit: 12560
        profitRate: 1.93
        portfolioEvaluation: 651717
        portfolioLiquidationValue: 651717
        initialMargin: 199313
        correctedMargin: 15752.115
        riskBeforeForcePositionClosing: 552061
        commission: 24.21
        buyingPowerByCurrency:
        - currency: RUB
          buyingPower: 452404.2194509200
    Summary_Slim:
      summary: Пример ответа в формате Slim
      value:
        bpm: 439844.15
        bp: 452404
        p: 12560
        pr: 1.93
        pe: 651717
        plv: 651717
        im: 199313
        mgc: 15752.115
        r: 552061
        cms: 24.21
        bpv2:
        - cr: RUB
          bp: 452404.2194509200
    Symbol_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        symbol: SBER
        exchange: MOEX
        description: Сбербанк России ПАО ао
        currency: RUB
        prevClosePrice: 286.85
        lastPrice: 286.85
        lastPriceTimestamp: 1700858993
        highPrice: 287.5
        lowPrice: 285.11
        accruedInterest: 0
        volume: 0
        openInterest:
        ask: 286.85
        bid: 286.84
        askVol: 107
        bidVol: 5
        obMsTimestamp:
        openPrice: 286.49
        yield:
        lotSize: 10
        lotValue: 2868.5
        faceValue: 3
        type: CS
        totalBidVol: 0
        totalAskVol: 0
        change: 0
        changePercent: 0
    Symbol_Simple:
      summary: Пример ответа в формате Simple
      value:
        symbol: SBER
        exchange: MOEX
        description: Сбербанк России ПАО ао
        prev_close_price: 286.85
        last_price: 286.85
        last_price_timestamp: 1700858993
        high_price: 287.5
        low_price: 285.11
        accruedInt: 0
        volume: 0
        open_interest:
        ask: 286.85
        bid: 286.84
        ask_vol: 107
        bid_vol: 5
        ob_ms_timestamp:
        open_price: 286.49
        yield:
        lotsize: 10
        lotvalue: 2868.5
        facevalue: 3
        type: CS
        total_bid_vol: 0
        total_ask_vol: 0
        accrued_interest: 0
        change: 0
        change_percent: 0
    Symbol_Slim:
      summary: Пример ответа в формате Slim
      value:
        sym: SBER
        ex: MOEX
        desc: Сбербанк России ПАО ао
        tst: 1700858993
        tso:
        o: 286.49
        h: 287.5
        l: 285.11
        c: 286.85
        v: 0
        acci: 0
        oi:
        y:
        ask: 286.85
        bid: 286.84
        av: 107
        bv: 5
        tbv: 0
        tav: 0
        lot: 10
        lotv: 2868.5
        fv: 3
        t: CS
    Symbols_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        - symbol: SBER
          exchange: MOEX
          description: Сбербанк России ПАО ао
          currency: RUB
          prevClosePrice: 313.49
          lastPrice: 314.51
          lastPriceTimestamp: 1715603781
          highPrice: 315.7
          lowPrice: 314.04
          accruedInterest: 0
          volume: 15237560
          openInterest: 
          ask: 314.99
          bid: 314.98
          askVol: 576
          bidVol: 49
          obMsTimestamp: 
          openPrice: 314.1
          yield: 
          lotSize: 10
          lotValue: 3145.1
          faceValue: 3
          type: CS
          totalBidVol: 360177
          totalAskVol: 617847
          change: 1.02
          changePercent: 0.33
    Symbols_Simple:
      summary: Пример ответа в формате Simple
      value:
        - symbol: SBER
          exchange: MOEX
          description: Сбербанк России ПАО ао
          prev_close_price: 313.49
          last_price: 314.51
          last_price_timestamp: 1715603781
          high_price: 315.7
          low_price: 314.04
          accruedInt: 0
          volume: 15237560
          open_interest: 
          ask: 314.71
          bid: 314.7
          ask_vol: 276
          bid_vol: 305
          ob_ms_timestamp: 
          open_price: 314.1
          yield: 
          lotsize: 10
          lotvalue: 3145.1
          facevalue: 3
          type: CS
          total_bid_vol: 361175
          total_ask_vol: 614990
          accrued_interest: 0
          change: 1.02
          change_percent: 0.33
    Symbols_Slim:
      summary: Пример ответа в формате Slim
      value:
        - sym: SBER
          ex: MOEX
          desc: Сбербанк России ПАО ао
          tst: 1715603781
          tso: 
          o: 314.1
          h: 315.7
          l: 314.04
          c: 314.51
          v: 15237560
          acci: 0
          oi: 
          "y": 
          ask: 314.99
          bid: 314.98
          av: 576
          bv: 49
          tbv: 360177
          tav: 617847
          lot: 10
          lotv: 3145.1
          fv: 3
          t: CS
    Time:
      summary: Пример ответа
      value:
        1701235956
    Trade_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        id: '9055212111'
        orderNo: '41129409599'
        symbol: APTK
        brokerSymbol: MOEX:APTK
        exchange: MOEX
        date: '2023-11-28T07:52:36.0000000Z'
        board: TQBR
        qtyUnits: 10
        qtyBatch: 1
        qty: 1
        price: 13.492
        accruedInt: 0
        side: buy
        existing: false
        commission: 0.10746
        repoSpecificFields:
        volume: 134.92
        settleDate: '2024-12-31T23:59:59.0000000Z'
    Trade_Simple:
      summary: Пример ответа в формате Simple
      value:
        id: '9055212111'
        orderno: '41129409599'
        comment:
        symbol: APTK
        brokerSymbol: MOEX:APTK
        exchange: MOEX
        date: '2023-11-28T07:52:36.0000000Z'
        board: TQBR
        qtyUnits: 10
        qtyBatch: 1
        qty: 1
        price: 13.492
        accruedInt: 0
        side: buy
        existing: false
        commission: 0.10746
        repoSpecificFields:
        volume: 134.92
    Trade_Slim:
      summary: Пример ответа в формате Slim
      value:
        id: '9055212111'
        eid: '41129409599'
        sym: APTK
        tic: MOEX:APTK
        ex: MOEX
        d: '2023-11-28T07:52:36.0000000Z'
        b: TQBR
        q: 10
        qb: 1
        px: 13.492
        ai: 0
        s: buy
        h: false
        cms: 0.10746
        r:
        v: 134.92
    Trade_V2_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        id: '9055212111'
        orderNo: '41129409599'
        comment: null
        symbol: APTK
        shortName: Аптеки36и6
        brokerSymbol: MOEX:APTK
        exchange: MOEX
        date: '2023-11-28T07:52:36.0000000Z'
        board: TQBR
        qtyUnits: 10
        qtyBatch: 1
        qty: 1
        price: 13.492
        currency: RUB
        accruedInt: 0
        side: buy
        existing: false
        commission: 0.10746
        repoSpecificFields:
        volume: 134.92
        settleDate: '2024-12-31T23:59:59.0000000Z'
    Trade_V2_Simple:
      summary: Пример ответа в формате Simple
      value:
        id: '9055212111'
        orderno: '41129409599'
        comment: null
        symbol: APTK
        brokerSymbol: MOEX:APTK
        exchange: MOEX
        date: '2023-11-28T07:52:36.0000000Z'
        board: TQBR
        qtyUnits: 10
        qtyBatch: 1
        qty: 1
        price: 13.492
        accruedInt: 0
        side: buy
        existing: false
        commission: 0.10746
        repoSpecificFields:
        volume: 134.92
    Trade_V2_Slim:
      summary: Пример ответа в формате Slim
      value:
        id: '9055212111'
        eid: '41129409599'
        cmt: null
        sym: APTK
        tic: MOEX:APTK
        ex: MOEX
        d: '2023-11-28T07:52:36.0000000Z'
        b: TQBR
        q: 10
        qb: 1
        px: 13.492
        ai: 0
        s: buy
        h: false
        cms: 0.10746
        r:
        v: 134.92
    Trades_V2_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        - id: '9055212111'
          orderNo: '41129409599'
          comment: null
          symbol: APTK
          shortName: Аптеки36и6
          brokerSymbol: MOEX:APTK
          exchange: MOEX
          date: '2023-11-28T07:52:36.0000000Z'
          board: TQBR
          qtyUnits: 10
          qtyBatch: 1
          qty: 1
          price: 13.492
          currency: RUB
          accruedInt: 0
          side: buy
          existing: false
          commission: 0.10746
          repoSpecificFields:
          volume: 134.92
          settleDate: '2024-12-31T23:59:59.0000000Z'
    Trades_V2_Simple:
      summary: Пример ответа в формате Simple
      value:
        - id: '9055212111'
          orderno: '41129409599'
          comment: null
          symbol: APTK
          brokerSymbol: MOEX:APTK
          exchange: MOEX
          date: '2023-11-28T07:52:36.0000000Z'
          board: TQBR
          qtyUnits: 10
          qtyBatch: 1
          qty: 1
          price: 13.492
          accruedInt: 0
          side: buy
          existing: false
          commission: 0.10746
          repoSpecificFields:
          volume: 134.92
    Trades_V2_Slim:
      summary: Пример ответа в формате Slim
      value:
        - id: '9055212111'
          eid: '41129409599'
          cmt: null
          sym: APTK
          tic: MOEX:APTK
          ex: MOEX
          d: '2023-11-28T07:52:36.0000000Z'
          b: TQBR
          q: 10
          qb: 1
          px: 13.492
          ai: 0
          s: buy
          h: false
          cms: 0.10746
          r:
          v: 134.92
    TradingSession_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        code: FOND
        status: open
    TradingSession_Simple:
      summary: Пример ответа в формате Simple
      value:
        code: FOND
        status: open
    TradingSession_Slim:
      summary: Пример ответа в формате Slim
      value:
        code: FOND
        status: open
    ## WebSocket response examples
    ws_AllTradesGetAndSubscribe_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          id: 9237394357
          symbol: SBER
          board: TQBR
          qty: 79
          price: 267.92
          time: '2023-12-19T07:00:08.9878590Z'
          timestamp: 1702969208987
          oi: 0
          existing: false
          side: sell
        guid: f16e5045-253d-4a50-9419-0c61a6474109
    ws_AllTradesGetAndSubscribe_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          id: 9237394357
          orderno: 0
          symbol: SBER
          board: TQBR
          qty: 79
          price: 267.92
          time: '2023-12-19T07:00:08.9878590Z'
          timestamp: 1702969208987
          oi: 0
          existing: false
          side: sell
        guid: f16e5045-253d-4a50-9419-0c61a6474109
    ws_AllTradesGetAndSubscribe_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          id: 9237394357
          sym: SBER
          bd: TQBR
          q: 79
          px: 267.92
          t: 1702969208987
          oi: 0
          h: false
          s: sell
        guid: f16e5045-253d-4a50-9419-0c61a6474109
    ws_BarsGetAndSubscribe_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          time: 1537529040
          close: 192.15
          open: 192.18
          high: 192.2
          low: 192.15
          volume: 1960
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_BarsGetAndSubscribe_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          time: 1537529040
          close: 192.15
          open: 192.18
          high: 192.2
          low: 192.15
          volume: 1960
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_BarsGetAndSubscribe_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          t: 1537529040
          c: 192.15
          o: 192.18
          h: 192.2
          l: 192.15
          v: 1960
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_HandledSuccessfully:
      summary: Пример ответа
      value:
        message: Handled successfully
        httpCode: 200
        requestGuid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_InstrumentsGetAndSubscribeV2_Full_Heavy:
      summary: Полный ответ Heavy
      value:
        data:
          symbol: SBER
          exchange: MOEX
          board: TQBR
          tradingStatus: 17
          tradingStatusInfo: нормальный период торгов
          priceMin: 228.78
          priceMax: 279.96
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_InstrumentsGetAndSubscribeV2_Full_Simple:
      summary: Полный ответ Simple
      value:
        data:
          symbol: SBER
          exchange: MOEX
          board: TQBR
          tradingStatus: 17
          tradingStatusInfo: нормальный период торгов
          priceMin: 228.78
          priceMax: 279.96
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_InstrumentsGetAndSubscribeV2_Full_Slim:
      summary: Полный ответ Slim
      value:
        data:
          sym: SBER
          ex: MOEX
          bd: TQBR
          st: 17
          sti: нормальный период торгов
          pxmn: 228.78
          pxmx: 279.96
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_InstrumentsGetAndSubscribeV2_Partial_Heavy:
      summary: Частичный ответ Heavy
      value:
        data:
          symbol: SBER
          priceMin: 228.78
          priceMax: 279.96
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_InstrumentsGetAndSubscribeV2_Partial_Simple:
      summary: Частичный ответ Simple
      value:
        data:
          symbol: SBER
          priceMin: 228.78
          priceMax: 279.96
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_InstrumentsGetAndSubscribeV2_Partial_Slim:
      summary: Частичный ответ Slim
      value:
        data:
          sym: SBER
          pxmn: 228.78
          pxmx: 279.96
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_InvalidJWT:
      summary: Пример ответа
      value:
        requestGuid: c328fcf1-e495-408a-a0ed-e20f95d6b813
        httpCode: 401
        message: Invalid JWT token!
    ws_OrderBookGetAndSubscribe_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          bids:
          - price: 257.7
            volume: 157
          asks:
          - price: 257.71
            volume: 288
          msTimestamp: 1702631123780
          existing: false
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_OrderBookGetAndSubscribe_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          snapshot: true
          bids:
          - price: 257.7
            volume: 157
          asks:
          - price: 257.71
            volume: 288
          timestamp: 1702631123
          ms_timestamp: 1702631123780
          existing: true
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_OrderBookGetAndSubscribe_Common_Slim:
      summary: Пример ответа в формате Slim (Общий)
      value:
        data:
          b:
          - p: 257.7
            v: 157
          a:
          - p: 257.71
            v: 288
          t: 1702631123780
          h: false
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_OrderBookGetAndSubscribe_Bonds_Slim:
      summary: Пример ответа в формате Slim (Облигации)
      value:
        data:
          b:
          - p: 70.589
            v: 146
            y: 16.21
          a:
          - p: 70.772
            v: 10
            y: 16.14
          t: 1721372266417
          h: false
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_OrdersGetAndSubscribe_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          id: '2006665023417483347'
          symbol: ALRS-3.24
          board: RFUD
          brokerSymbol: MOEX:ALRS-3.24
          portfolio: D39004
          exchange: MOEX
          comment:
          type: limit
          side: buy
          status: working
          transTime: '2024-01-08T15:57:12.2911671Z'
          updateTime: '2024-01-08T15:57:12.2911671Z'
          endTime: '2024-12-27T23:59:59.9990000Z'
          qtyUnits: 1
          qtyBatch: 1
          filledQtyUnits: 0
          filledQtyBatch: 0
          price: 6400
          existing: true
          timeInForce: oneday
          iceberg:
          volume: 6400
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_OrdersGetAndSubscribe_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          id: '2006665023417483347'
          symbol: ALRS-3.24
          board: RFUD
          brokerSymbol: MOEX:ALRS-3.24
          portfolio: D39004
          exchange: MOEX
          comment:
          type: limit
          side: buy
          status: working
          transTime: '2024-01-08T15:57:12.2911671Z'
          updateTime: '2024-01-08T15:57:12.2911671Z'
          endTime: '2024-12-27T23:59:59.9990000Z'
          qtyUnits: 1
          qtyBatch: 1
          qty: 1
          filledQtyUnits: 0
          filledQtyBatch: 0
          filled: 0
          price: 6400
          existing: true
          timeInForce: oneday
          iceberg:
          volume: 6400
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_OrdersGetAndSubscribe_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          id: '2006665023417483347'
          sym: ALRS-3.24
          bd: RFUD
          tic: MOEX:ALRS-3.24
          p: D39004
          ex: MOEX
          cmt:
          t: limit
          s: buy
          st: working
          tt: '2024-01-08T15:57:12.2911671Z'
          ut: '2024-01-08T15:57:12.2911671Z'
          et: '2024-12-27T23:59:59.9990000'
          q: 1
          qb: 1
          fq: 0
          fqb: 0
          px: 6400
          h: true
          tf: oneday
          i:
          v: 6400
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_PositionsGetAndSubscribe_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          volume: 549.198
          currentVolume: 555.24
          symbol: APTK
          brokerSymbol: MOEX:APTK
          portfolio: D00013
          exchange: MOEX
          avgPrice: 9.1533
          qtyUnits: 60
          openUnits: 60
          lotSize: 10
          shortName: Аптеки36и6
          qtyT0: 60
          qtyT1: 60
          qtyT2: 60
          qtyTFuture: 60
          qtyT0Batch: 6
          qtyT1Batch: 6
          qtyT2Batch: 6
          qtyTFutureBatch: 6
          openQtyBatch: 6
          dailyUnrealisedPl: 1.92
          unrealisedPl: 7.962
          isCurrency: false
          existing: true
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_PositionsGetAndSubscribe_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          volume: 549.198
          currentVolume: 555.24
          symbol: APTK
          brokerSymbol: MOEX:APTK
          portfolio: D00013
          exchange: MOEX
          avgPrice: 9.1533
          qtyUnits: 60
          openUnits: 60
          lotSize: 10
          shortName: Аптеки36и6
          qtyT0: 60
          qtyT1: 60
          qtyT2: 60
          qtyTFuture: 60
          qtyT0Batch: 6
          qtyT1Batch: 6
          qtyT2Batch: 6
          qtyTFutureBatch: 6
          qtyBatch: 6
          openQtyBatch: 6
          qty: 6
          open: 6
          dailyUnrealisedPl: 1.92
          unrealisedPl: 7.962
          isCurrency: false
          existing: true
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_PositionsGetAndSubscribe_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          v: 549.198
          cv: 555.24
          sym: APTK
          tic: MOEX:APTK
          p: D00013
          ex: MOEX
          pxavg: 9.1533
          q: 60
          o: 60
          lot: 10
          n: Аптеки36и6
          q0: 60
          q1: 60
          q2: 60
          qf: 60
          upd: 1.92
          up: 7.962
          cur: false
          h: true
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_QuotesSubscribe_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          symbol: SBER
          exchange: MOEX
          description: Сбербанк России ПАО ао
          currency: RUB
          prevClosePrice: 271.74
          lastPrice: 272
          lastPriceTimestamp: 1703844426
          highPrice: 272.59
          lowPrice: 271.48
          accruedInterest: 0
          volume: 5614360
          openInterest:
          ask: 272
          bid: 271.99
          askVol: 4097
          bidVol: 237
          obMsTimestamp:
          openPrice: 272.19
          yield:
          lotSize: 10
          lotValue: 2720
          faceValue: 3
          type: CS
          totalBidVol: 328865
          totalAskVol: 543594
          change: 0.26
          changePercent: 0.1
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_QuotesSubscribe_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          symbol: SBER
          exchange: MOEX
          description: Сбербанк России ПАО ао
          prev_close_price: 271.74
          last_price: 272
          last_price_timestamp: 1703844426
          high_price: 272.59
          low_price: 271.48
          accruedInt: 0
          volume: 5614360
          open_interest:
          ask: 272
          bid: 271.99
          ask_vol: 4097
          bid_vol: 237
          ob_ms_timestamp:
          open_price: 272.19
          yield:
          lotsize: 10
          lotvalue: 2720
          facevalue: 3
          type: CS
          total_bid_vol: 328865
          total_ask_vol: 543594
          accrued_interest: 0
          change: 0.26
          change_percent: 0.1
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_QuotesSubscribe_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          sym: SBER
          ex: MOEX
          desc: Сбербанк России ПАО ао
          tst: 1703844426
          tso:
          o: 272.19
          h: 272.59
          l: 271.48
          c: 272
          v: 5614360
          acci: 0
          oi:
          y:
          ask: 272
          bid: 271.99
          av: 4097
          bv: 237
          tbv: 328865
          tav: 543594
          lot: 10
          lotv: 2720
          fv: 3
          t: CS
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_RisksGetAndSubscribe_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          portfolio: D39004
          exchange: MOEX
          portfolioEvaluation: 99894.63895
          portfolioLiquidationValue: 99894.63895
          initialMargin: 711.1145475
          minimalMargin: 355.55727375
          correctedMargin: 711.1145475
          riskCoverageRatioOne: 99183.5244025
          riskCoverageRatioTwo: 99539.08167625
          riskCategoryId: 1
          clientType: StandardRisk
          hasForbiddenPositions: false
          hasNegativeQuantity: false
          riskStatus: Ok
          calculationTime: '2025-04-19T10:17:54.8283796Z'
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_RisksGetAndSubscribe_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          portfolio: D39004
          exchange: MOEX
          portfolioEvaluation: 99894.63895
          portfolioLiquidationValue: 99894.63895
          initialMargin: 711.1145475
          minimalMargin: 355.55727375
          correctedMargin: 711.1145475
          riskCoverageRatioOne: 99183.5244025
          riskCoverageRatioTwo: 99539.08167625
          riskCategoryId: 1
          clientType: StandardRisk
          hasForbiddenPositions: false
          hasNegativeQuantity: false
          riskStatus: Ok
          calculationTime: '2025-04-19T10:17:54.8283796Z'
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_RisksGetAndSubscribe_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          p: D39004
          ex: MOEX
          pe: 99894.63895
          plv: 99894.63895
          mgi: 711.1145475
          mgmn: 355.55727375
          mgc: 711.1145475
          r1: 99183.5244025
          r2: 99539.08167625
          rid: 1
          ct: StandardRisk
          fpos: false
          nq: false
          rst: Ok
          t: '2025-04-19T10:17:54.8283796Z'
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_SpectraRisksGetAndSubscribe_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          portfolio: 7500GHC
          moneyFree: 452404
          moneyBlocked: 12560
          fee: 651717
          moneyOld: 651717
          moneyAmount: 199313
          moneyPledgeAmount: 552061
          vmInterCl: 651717
          vmCurrentPositions: 199313
          varMargin: 552061
          indicativeVarMargin: 1720.32124
          netOptionValue: 0
          posRisk: 0
          isLimitsSet: false
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_SpectraRisksGetAndSubscribe_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          balanceMoney: 0
          portfolio: 7500GHC
          moneyFree: 452404
          moneyBlocked: 12560
          fee: 651717
          moneyOld: 651717
          moneyAmount: 199313
          moneyPledgeAmount: 552061
          vmInterCl: 651717
          vmCurrentPositions: 199313
          varMargin: 552061
          indicativeVarMargin: 1720.32124
          netOptionValue: 0
          posRisk: 0
          isLimitsSet: false
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_SpectraRisksGetAndSubscribe_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          p: 7500GHC
          f: 452404
          b: 12560
          fee: 651717
          o: 651717
          a: 199313
          pa: 552061
          mgc: 651717
          mgp: 199313
          ivm: 1720.32124
          nov: 0
          pr: 0
          lim: false
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_StopOrdersGetAndSubscribe_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          id: 347498
          symbol: SBER
          brokerSymbol: MOEX:LKOH
          exchange: MOEX
          board: TQBR
          type: stop
          stopPrice: 215
          side: buy
          status: working
          endTime: '2020-06-16T23:59:59.9990000Z'
          qty: 1
          filledQtyBatch: 1
          price: 208.6
          existing: true
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_StopOrdersGetAndSubscribe_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          id: 347498
          symbol: SBER
          brokerSymbol: MOEX:LKOH
          exchange: MOEX
          board: TQBR
          type: stop
          stopPrice: 215
          side: buy
          status: working
          endTime: '2020-06-16T23:59:59.9990000Z'
          qty: 1
          filledQtyBatch: 1
          price: 208.6
          existing: true
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_StopOrdersGetAndSubscribe_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          id: 347498
          sym: SBER
          tic: MOEX:LKOH
          ex: MOEX
          bd: TQBR
          t: stop
          pxs: 215
          s: buy
          st: working
          exp: '2020-06-16T23:59:59.9990000Z'
          q: 1
          fqb: 1
          px: 208.6
          e: true
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_StopOrdersGetAndSubscribeV2_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          id: '8939'
          exchangeOrderId:
          symbol: GAZP
          brokerSymbol: MOEX:GAZP
          portfolio: D00013
          exchange: MOEX
          comment: null
          board: TQBR
          type: stop
          side: buy
          condition: lessorequal
          status: working
          transTime: '2024-01-09T11:32:51.4774506Z'
          updateTime:
          endTime: '2060-12-31T23:59:59.0000000Z'
          error: null
          qtyUnits: 10
          qtyBatch: 1
          filledQtyUnits: 0
          filledQtyBatch: 0
          price: 0
          avgPrice: 0
          stopPrice: 160
          existing: true
          timeInForce: oneday
          iceberg:
          volume: 1600
          protectingSeconds: 15
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_StopOrdersGetAndSubscribeV2_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          id: '8939'
          exchangeOrderId:
          symbol: GAZP
          brokerSymbol: MOEX:GAZP
          portfolio: D00013
          exchange: MOEX
          comment: null
          board: TQBR
          type: stop
          side: buy
          condition: LessOrEqual
          status: working
          transTime: '2024-01-09T11:32:51.4774506Z'
          updateTime:
          endTime: '2060-12-31T23:59:59.0000000Z'
          error: null
          qtyUnits: 10
          qtyBatch: 1
          qty: 1
          filled: 0
          filledQtyUnits: 0
          filledQtyBatch: 0
          price: 0
          avg_price: 0
          stopPrice: 160
          existing: false
          timeInForce: oneday
          iceberg:
          volume: 1600
          protectingSeconds: 15
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_StopOrdersGetAndSubscribeV2_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          id: '8939'
          eid:
          sym: GAZP
          tic: MOEX:GAZP
          p: D00013
          ex: MOEX
          cmt: null
          bd: TQBR
          t: stop
          s: buy
          cnd: lessorequal
          st: working
          tt: '2024-01-09T11:32:51.4774506Z'
          ut:
          et: '2060-12-31T23:59:59.0000000Z'
          err: null
          q: 10
          qb: 1
          fq: 0
          fqb: 0
          px: 0
          pxavg: 0
          pxs: 160
          h: true
          tf: oneday
          i:
          v: 1600
          psec: 15
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_SummariesGetAndSubscribeV2_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          buyingPowerAtMorning: 99174.73
          buyingPower: 99186
          profit: 12
          profitRate: 0.01
          portfolioEvaluation: 99900
          portfolioLiquidationValue: 99900
          initialMargin: 713
          correctedMargin: 15752.115
          riskBeforeForcePositionClosing: 99543
          commission: 1.36
          buyingPowerByCurrency:
          - currency: RUB
            buyingPower: 99186.2194509200
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_SummariesGetAndSubscribeV2_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          buyingPowerAtMorning: 99174.54
          buyingPower: 99186
          profit: 12
          profitRate: 0.01
          portfolioEvaluation: 99900
          portfolioLiquidationValue: 99900
          initialMargin: 713
          correctedMargin: 15752.115
          riskBeforeForcePositionClosing: 99543
          commission: 1.36
          buyingPowerByCurrency:
          - currency: RUB
            buyingPower: 99186.2194509200
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_SummariesGetAndSubscribeV2_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          bpm: 99174.54
          bp: 99186
          p: 12
          pr: 0.01
          pe: 99900
          plv: 99900
          im: 713
          mgc: 15752.115
          r: 99542
          cms: 1.36
          bp2v:
          - cr: RUB
            bp: 99186.2194509200
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_TradesGetAndSubscribe_Heavy:
      summary: Пример ответа в формате Heavy
      value:
        data:
          id: '4421925358'
          orderNo: '42030831469'
          comment:
          symbol: GAZP
          brokerSymbol: MOEX:GAZP
          exchange: MOEX
          date: '2023-12-29T12:35:06.0000000Z'
          board: TQBR
          qtyUnits: 10
          qtyBatch: 1
          qty: 1
          price: 170.21
          accruedInt: 0
          side: buy
          existing: true
          commission: 1.36105
          repoSpecificFields:
          volume: 1702.1
          settleDate: '2024-12-31T23:59:59.0000000Z'
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_TradesGetAndSubscribe_Simple:
      summary: Пример ответа в формате Simple
      value:
        data:
          id: '4421925358'
          orderno: '42030831469'
          comment:
          symbol: GAZP
          brokerSymbol: MOEX:GAZP
          exchange: MOEX
          date: '2023-12-29T12:35:06.0000000Z'
          board: TQBR
          qtyUnits: 10
          qtyBatch: 1
          qty: 1
          price: 170.21
          accruedInt: 0
          side: buy
          existing: true
          commission: 1.36105
          repoSpecificFields:
          volume: 1702.1
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813
    ws_TradesGetAndSubscribe_Slim:
      summary: Пример ответа в формате Slim
      value:
        data:
          id: '4421925358'
          eid: '42030831469'
          cmt:
          sym: GAZP
          tic: MOEX:GAZP
          ex: MOEX
          d: '2023-12-29T12:35:06.0000000Z'
          b: TQBR
          q: 10
          qb: 1
          px: 170.21
          ai: 0
          s: buy
          h: true
          cms: 1.36105
          r:
          v: 1702.1
        guid: c328fcf1-e495-408a-a0ed-e20f95d6b813